

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Aug 10 18:21:37 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,merge=1,delta=2
    67                           	psect	intentry,global,class=CODE,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	psect	text54,local,class=CODE,merge=1,delta=2
    71                           	psect	text55,local,class=CODE,merge=1,delta=2
    72                           	psect	functab,global,class=ENTRY,delta=2
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    74                           	dabs	1,0x7E,2
    75  0000                     
    76                           ; Version 2.20
    77                           ; Generated 12/02/2020 GMT
    78                           ; 
    79                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F877A Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  009F                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0098                     	;# 
   339  0099                     	;# 
   340  009C                     	;# 
   341  009D                     	;# 
   342  009E                     	;# 
   343  009F                     	;# 
   344  010C                     	;# 
   345  010D                     	;# 
   346  010E                     	;# 
   347  010F                     	;# 
   348  018C                     	;# 
   349  018D                     	;# 
   350  0000                     	;# 
   351  0001                     	;# 
   352  0002                     	;# 
   353  0003                     	;# 
   354  0004                     	;# 
   355  0005                     	;# 
   356  0006                     	;# 
   357  0007                     	;# 
   358  0008                     	;# 
   359  0009                     	;# 
   360  000A                     	;# 
   361  000B                     	;# 
   362  000C                     	;# 
   363  000D                     	;# 
   364  000E                     	;# 
   365  000E                     	;# 
   366  000F                     	;# 
   367  0010                     	;# 
   368  0011                     	;# 
   369  0012                     	;# 
   370  0013                     	;# 
   371  0014                     	;# 
   372  0015                     	;# 
   373  0015                     	;# 
   374  0016                     	;# 
   375  0017                     	;# 
   376  0018                     	;# 
   377  0019                     	;# 
   378  001A                     	;# 
   379  001B                     	;# 
   380  001B                     	;# 
   381  001C                     	;# 
   382  001D                     	;# 
   383  001E                     	;# 
   384  001F                     	;# 
   385  0081                     	;# 
   386  0085                     	;# 
   387  0086                     	;# 
   388  0087                     	;# 
   389  0088                     	;# 
   390  0089                     	;# 
   391  008C                     	;# 
   392  008D                     	;# 
   393  008E                     	;# 
   394  0091                     	;# 
   395  0092                     	;# 
   396  0093                     	;# 
   397  0094                     	;# 
   398  0098                     	;# 
   399  0099                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  009F                     	;# 
   404  010C                     	;# 
   405  010D                     	;# 
   406  010E                     	;# 
   407  010F                     	;# 
   408  018C                     	;# 
   409  018D                     	;# 
   410  0000                     	;# 
   411  0001                     	;# 
   412  0002                     	;# 
   413  0003                     	;# 
   414  0004                     	;# 
   415  0005                     	;# 
   416  0006                     	;# 
   417  0007                     	;# 
   418  0008                     	;# 
   419  0009                     	;# 
   420  000A                     	;# 
   421  000B                     	;# 
   422  000C                     	;# 
   423  000D                     	;# 
   424  000E                     	;# 
   425  000E                     	;# 
   426  000F                     	;# 
   427  0010                     	;# 
   428  0011                     	;# 
   429  0012                     	;# 
   430  0013                     	;# 
   431  0014                     	;# 
   432  0015                     	;# 
   433  0015                     	;# 
   434  0016                     	;# 
   435  0017                     	;# 
   436  0018                     	;# 
   437  0019                     	;# 
   438  001A                     	;# 
   439  001B                     	;# 
   440  001B                     	;# 
   441  001C                     	;# 
   442  001D                     	;# 
   443  001E                     	;# 
   444  001F                     	;# 
   445  0081                     	;# 
   446  0085                     	;# 
   447  0086                     	;# 
   448  0087                     	;# 
   449  0088                     	;# 
   450  0089                     	;# 
   451  008C                     	;# 
   452  008D                     	;# 
   453  008E                     	;# 
   454  0091                     	;# 
   455  0092                     	;# 
   456  0093                     	;# 
   457  0094                     	;# 
   458  0098                     	;# 
   459  0099                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  010C                     	;# 
   465  010D                     	;# 
   466  010E                     	;# 
   467  010F                     	;# 
   468  018C                     	;# 
   469  018D                     	;# 
   470  0000                     	;# 
   471  0001                     	;# 
   472  0002                     	;# 
   473  0003                     	;# 
   474  0004                     	;# 
   475  0005                     	;# 
   476  0006                     	;# 
   477  0007                     	;# 
   478  0008                     	;# 
   479  0009                     	;# 
   480  000A                     	;# 
   481  000B                     	;# 
   482  000C                     	;# 
   483  000D                     	;# 
   484  000E                     	;# 
   485  000E                     	;# 
   486  000F                     	;# 
   487  0010                     	;# 
   488  0011                     	;# 
   489  0012                     	;# 
   490  0013                     	;# 
   491  0014                     	;# 
   492  0015                     	;# 
   493  0015                     	;# 
   494  0016                     	;# 
   495  0017                     	;# 
   496  0018                     	;# 
   497  0019                     	;# 
   498  001A                     	;# 
   499  001B                     	;# 
   500  001B                     	;# 
   501  001C                     	;# 
   502  001D                     	;# 
   503  001E                     	;# 
   504  001F                     	;# 
   505  0081                     	;# 
   506  0085                     	;# 
   507  0086                     	;# 
   508  0087                     	;# 
   509  0088                     	;# 
   510  0089                     	;# 
   511  008C                     	;# 
   512  008D                     	;# 
   513  008E                     	;# 
   514  0091                     	;# 
   515  0092                     	;# 
   516  0093                     	;# 
   517  0094                     	;# 
   518  0098                     	;# 
   519  0099                     	;# 
   520  009C                     	;# 
   521  009D                     	;# 
   522  009E                     	;# 
   523  009F                     	;# 
   524  010C                     	;# 
   525  010D                     	;# 
   526  010E                     	;# 
   527  010F                     	;# 
   528  018C                     	;# 
   529  018D                     	;# 
   530  0000                     	;# 
   531  0001                     	;# 
   532  0002                     	;# 
   533  0003                     	;# 
   534  0004                     	;# 
   535  0005                     	;# 
   536  0006                     	;# 
   537  0007                     	;# 
   538  0008                     	;# 
   539  0009                     	;# 
   540  000A                     	;# 
   541  000B                     	;# 
   542  000C                     	;# 
   543  000D                     	;# 
   544  000E                     	;# 
   545  000E                     	;# 
   546  000F                     	;# 
   547  0010                     	;# 
   548  0011                     	;# 
   549  0012                     	;# 
   550  0013                     	;# 
   551  0014                     	;# 
   552  0015                     	;# 
   553  0015                     	;# 
   554  0016                     	;# 
   555  0017                     	;# 
   556  0018                     	;# 
   557  0019                     	;# 
   558  001A                     	;# 
   559  001B                     	;# 
   560  001B                     	;# 
   561  001C                     	;# 
   562  001D                     	;# 
   563  001E                     	;# 
   564  001F                     	;# 
   565  0081                     	;# 
   566  0085                     	;# 
   567  0086                     	;# 
   568  0087                     	;# 
   569  0088                     	;# 
   570  0089                     	;# 
   571  008C                     	;# 
   572  008D                     	;# 
   573  008E                     	;# 
   574  0091                     	;# 
   575  0092                     	;# 
   576  0093                     	;# 
   577  0094                     	;# 
   578  0098                     	;# 
   579  0099                     	;# 
   580  009C                     	;# 
   581  009D                     	;# 
   582  009E                     	;# 
   583  009F                     	;# 
   584  010C                     	;# 
   585  010D                     	;# 
   586  010E                     	;# 
   587  010F                     	;# 
   588  018C                     	;# 
   589  018D                     	;# 
   590  0000                     	;# 
   591  0001                     	;# 
   592  0002                     	;# 
   593  0003                     	;# 
   594  0004                     	;# 
   595  0005                     	;# 
   596  0006                     	;# 
   597  0007                     	;# 
   598  0008                     	;# 
   599  0009                     	;# 
   600  000A                     	;# 
   601  000B                     	;# 
   602  000C                     	;# 
   603  000D                     	;# 
   604  000E                     	;# 
   605  000E                     	;# 
   606  000F                     	;# 
   607  0010                     	;# 
   608  0011                     	;# 
   609  0012                     	;# 
   610  0013                     	;# 
   611  0014                     	;# 
   612  0015                     	;# 
   613  0015                     	;# 
   614  0016                     	;# 
   615  0017                     	;# 
   616  0018                     	;# 
   617  0019                     	;# 
   618  001A                     	;# 
   619  001B                     	;# 
   620  001B                     	;# 
   621  001C                     	;# 
   622  001D                     	;# 
   623  001E                     	;# 
   624  001F                     	;# 
   625  0081                     	;# 
   626  0085                     	;# 
   627  0086                     	;# 
   628  0087                     	;# 
   629  0088                     	;# 
   630  0089                     	;# 
   631  008C                     	;# 
   632  008D                     	;# 
   633  008E                     	;# 
   634  0091                     	;# 
   635  0092                     	;# 
   636  0093                     	;# 
   637  0094                     	;# 
   638  0098                     	;# 
   639  0099                     	;# 
   640  009C                     	;# 
   641  009D                     	;# 
   642  009E                     	;# 
   643  009F                     	;# 
   644  010C                     	;# 
   645  010D                     	;# 
   646  010E                     	;# 
   647  010F                     	;# 
   648  018C                     	;# 
   649  018D                     	;# 
   650  0000                     	;# 
   651  0001                     	;# 
   652  0002                     	;# 
   653  0003                     	;# 
   654  0004                     	;# 
   655  0005                     	;# 
   656  0006                     	;# 
   657  0007                     	;# 
   658  0008                     	;# 
   659  0009                     	;# 
   660  000A                     	;# 
   661  000B                     	;# 
   662  000C                     	;# 
   663  000D                     	;# 
   664  000E                     	;# 
   665  000E                     	;# 
   666  000F                     	;# 
   667  0010                     	;# 
   668  0011                     	;# 
   669  0012                     	;# 
   670  0013                     	;# 
   671  0014                     	;# 
   672  0015                     	;# 
   673  0015                     	;# 
   674  0016                     	;# 
   675  0017                     	;# 
   676  0018                     	;# 
   677  0019                     	;# 
   678  001A                     	;# 
   679  001B                     	;# 
   680  001B                     	;# 
   681  001C                     	;# 
   682  001D                     	;# 
   683  001E                     	;# 
   684  001F                     	;# 
   685  0081                     	;# 
   686  0085                     	;# 
   687  0086                     	;# 
   688  0087                     	;# 
   689  0088                     	;# 
   690  0089                     	;# 
   691  008C                     	;# 
   692  008D                     	;# 
   693  008E                     	;# 
   694  0091                     	;# 
   695  0092                     	;# 
   696  0093                     	;# 
   697  0094                     	;# 
   698  0098                     	;# 
   699  0099                     	;# 
   700  009C                     	;# 
   701  009D                     	;# 
   702  009E                     	;# 
   703  009F                     	;# 
   704  010C                     	;# 
   705  010D                     	;# 
   706  010E                     	;# 
   707  010F                     	;# 
   708  018C                     	;# 
   709  018D                     	;# 
   710  0000                     	;# 
   711  0001                     	;# 
   712  0002                     	;# 
   713  0003                     	;# 
   714  0004                     	;# 
   715  0005                     	;# 
   716  0006                     	;# 
   717  0007                     	;# 
   718  0008                     	;# 
   719  0009                     	;# 
   720  000A                     	;# 
   721  000B                     	;# 
   722  000C                     	;# 
   723  000D                     	;# 
   724  000E                     	;# 
   725  000E                     	;# 
   726  000F                     	;# 
   727  0010                     	;# 
   728  0011                     	;# 
   729  0012                     	;# 
   730  0013                     	;# 
   731  0014                     	;# 
   732  0015                     	;# 
   733  0015                     	;# 
   734  0016                     	;# 
   735  0017                     	;# 
   736  0018                     	;# 
   737  0019                     	;# 
   738  001A                     	;# 
   739  001B                     	;# 
   740  001B                     	;# 
   741  001C                     	;# 
   742  001D                     	;# 
   743  001E                     	;# 
   744  001F                     	;# 
   745  0081                     	;# 
   746  0085                     	;# 
   747  0086                     	;# 
   748  0087                     	;# 
   749  0088                     	;# 
   750  0089                     	;# 
   751  008C                     	;# 
   752  008D                     	;# 
   753  008E                     	;# 
   754  0091                     	;# 
   755  0092                     	;# 
   756  0093                     	;# 
   757  0094                     	;# 
   758  0098                     	;# 
   759  0099                     	;# 
   760  009C                     	;# 
   761  009D                     	;# 
   762  009E                     	;# 
   763  009F                     	;# 
   764  010C                     	;# 
   765  010D                     	;# 
   766  010E                     	;# 
   767  010F                     	;# 
   768  018C                     	;# 
   769  018D                     	;# 
   770  0000                     	;# 
   771  0001                     	;# 
   772  0002                     	;# 
   773  0003                     	;# 
   774  0004                     	;# 
   775  0005                     	;# 
   776  0006                     	;# 
   777  0007                     	;# 
   778  0008                     	;# 
   779  0009                     	;# 
   780  000A                     	;# 
   781  000B                     	;# 
   782  000C                     	;# 
   783  000D                     	;# 
   784  000E                     	;# 
   785  000E                     	;# 
   786  000F                     	;# 
   787  0010                     	;# 
   788  0011                     	;# 
   789  0012                     	;# 
   790  0013                     	;# 
   791  0014                     	;# 
   792  0015                     	;# 
   793  0015                     	;# 
   794  0016                     	;# 
   795  0017                     	;# 
   796  0018                     	;# 
   797  0019                     	;# 
   798  001A                     	;# 
   799  001B                     	;# 
   800  001B                     	;# 
   801  001C                     	;# 
   802  001D                     	;# 
   803  001E                     	;# 
   804  001F                     	;# 
   805  0081                     	;# 
   806  0085                     	;# 
   807  0086                     	;# 
   808  0087                     	;# 
   809  0088                     	;# 
   810  0089                     	;# 
   811  008C                     	;# 
   812  008D                     	;# 
   813  008E                     	;# 
   814  0091                     	;# 
   815  0092                     	;# 
   816  0093                     	;# 
   817  0094                     	;# 
   818  0098                     	;# 
   819  0099                     	;# 
   820  009C                     	;# 
   821  009D                     	;# 
   822  009E                     	;# 
   823  009F                     	;# 
   824  010C                     	;# 
   825  010D                     	;# 
   826  010E                     	;# 
   827  010F                     	;# 
   828  018C                     	;# 
   829  018D                     	;# 
   830  0000                     	;# 
   831  0001                     	;# 
   832  0002                     	;# 
   833  0003                     	;# 
   834  0004                     	;# 
   835  0005                     	;# 
   836  0006                     	;# 
   837  0007                     	;# 
   838  0008                     	;# 
   839  0009                     	;# 
   840  000A                     	;# 
   841  000B                     	;# 
   842  000C                     	;# 
   843  000D                     	;# 
   844  000E                     	;# 
   845  000E                     	;# 
   846  000F                     	;# 
   847  0010                     	;# 
   848  0011                     	;# 
   849  0012                     	;# 
   850  0013                     	;# 
   851  0014                     	;# 
   852  0015                     	;# 
   853  0015                     	;# 
   854  0016                     	;# 
   855  0017                     	;# 
   856  0018                     	;# 
   857  0019                     	;# 
   858  001A                     	;# 
   859  001B                     	;# 
   860  001B                     	;# 
   861  001C                     	;# 
   862  001D                     	;# 
   863  001E                     	;# 
   864  001F                     	;# 
   865  0081                     	;# 
   866  0085                     	;# 
   867  0086                     	;# 
   868  0087                     	;# 
   869  0088                     	;# 
   870  0089                     	;# 
   871  008C                     	;# 
   872  008D                     	;# 
   873  008E                     	;# 
   874  0091                     	;# 
   875  0092                     	;# 
   876  0093                     	;# 
   877  0094                     	;# 
   878  0098                     	;# 
   879  0099                     	;# 
   880  009C                     	;# 
   881  009D                     	;# 
   882  009E                     	;# 
   883  009F                     	;# 
   884  010C                     	;# 
   885  010D                     	;# 
   886  010E                     	;# 
   887  010F                     	;# 
   888  018C                     	;# 
   889  018D                     	;# 
   890                           
   891 ;; Function _Adc_Handler is unused but had its address taken
   892  0000                     
   893                           	psect	idataBANK0
   894  0FF7                     __pidataBANK0:
   895                           
   896                           ;initializer for _Dio_ConfigGroupChannel
   897  0FF7  3401               	retlw	1
   898  0FF8  3400               	retlw	0
   899  0FF9  3401               	retlw	1
   900  0FFA  3401               	retlw	1
   901  0FFB  3401               	retlw	1
   902  0FFC  3402               	retlw	2
   903                           
   904                           ;initializer for _VFB_SlideMotorState
   905  0FFD  3401               	retlw	1
   906                           
   907                           ;initializer for _VFB_InclineMotorState
   908  0FFE  3401               	retlw	1
   909                           
   910                           ;initializer for _VFB_HeightMotorState
   911  0FFF  3401               	retlw	1
   912                           
   913                           	psect	idataBANK1
   914  04E0                     __pidataBANK1:
   915                           
   916                           ;initializer for _Spi_Config
   917  04E0  3400               	retlw	0
   918  04E1  3400               	retlw	0
   919  04E2  34A0               	retlw	160
   920  04E3  3486               	retlw	134
   921  04E4  3401               	retlw	1
   922  04E5  3400               	retlw	0
   923  04E6  3408               	retlw	8
   924  04E7  3400               	retlw	0
   925  04E8  3400               	retlw	0
   926  04E9  3400               	retlw	0
   927  04EA  3401               	retlw	1
   928  04EB  3400               	retlw	0
   929  04EC  3400               	retlw	0
   930                           
   931                           ;initializer for _TempSensor_Config
   932  04ED  3400               	retlw	0
   933  04EE  3403               	retlw	3
   934  04EF  3400               	retlw	0
   935  04F0  3401               	retlw	1
   936  04F1  3402               	retlw	2
   937  04F2  3400               	retlw	0
   938  04F3  3401               	retlw	1
   939  04F4  3400               	retlw	0
   940  04F5  3401               	retlw	1
   941  04F6  3401               	retlw	1
   942  04F7  3400               	retlw	0
   943  04F8  3400               	retlw	0
   944                           
   945                           ;initializer for _Adc_PortConfig
   946  04F9  3400               	retlw	0
   947  04FA  3400               	retlw	0
   948  04FB  3400               	retlw	0
   949  04FC  3400               	retlw	0
   950  04FD  3401               	retlw	1
   951  04FE  3400               	retlw	0
   952  04FF  3400               	retlw	0
   953  0500  3402               	retlw	2
   954  0501  3400               	retlw	0
   955                           
   956                           ;initializer for _Uart_Config
   957  0502  3480               	retlw	128
   958  0503  3425               	retlw	37
   959  0504  3400               	retlw	0
   960  0505  3400               	retlw	0
   961  0506  3401               	retlw	1
   962  0507  3400               	retlw	0
   963  0508  3400               	retlw	0
   964  0509  3400               	retlw	0
   965  050A  3400               	retlw	0
   966                           
   967                           ;initializer for _Uart_PinsConfig
   968  050B  3402               	retlw	2
   969  050C  3406               	retlw	6
   970  050D  3400               	retlw	0
   971  050E  3402               	retlw	2
   972  050F  3407               	retlw	7
   973  0510  3400               	retlw	0
   974                           
   975                           ;initializer for _Spi_ConfigPins
   976  0511  3402               	retlw	2
   977  0512  3403               	retlw	3
   978  0513  3400               	retlw	0
   979  0514  3402               	retlw	2
   980  0515  3404               	retlw	4
   981  0516  3400               	retlw	0
   982  0019                     _TXREG	set	25
   983  0018                     _RCSTA	set	24
   984  001A                     _RCREG	set	26
   985  0013                     _SSPBUF	set	19
   986  0014                     _SSPCON	set	20
   987  001F                     _ADCON0	set	31
   988  001E                     _ADRESH	set	30
   989  005C                     _INTE	set	92
   990  005E                     _PEIE	set	94
   991  0059                     _INTF	set	89
   992  0065                     _RCIF	set	101
   993  0064                     _TXIF	set	100
   994  0060                     _TMR1IF	set	96
   995  0063                     _SSPIF	set	99
   996  0066                     _ADIF	set	102
   997  005F                     _GIE	set	95
   998  0099                     _SPBRG	set	153
   999  0098                     _TXSTA	set	152
  1000  0094                     _SSPSTAT	set	148
  1001  0093                     _SSPADD	set	147
  1002  0091                     _SSPCON2	set	145
  1003  009F                     _ADCON1	set	159
  1004  009E                     _ADRESL	set	158
  1005  040E                     _INTEDG	set	1038
  1006  0465                     _RCIE	set	1125
  1007  0464                     _TXIE	set	1124
  1008  0466                     _ADIE	set	1126
  1009  0460                     _TMR1IE	set	1120
  1010  048C                     _ACKEN	set	1164
  1011  048E                     _ACKSTAT	set	1166
  1012                           
  1013                           	psect	strings
  1014  025E                     __pstrings:
  1015  025E                     stringtab:
  1016  025E                     __stringtab:
  1017                           
  1018                           ;	String table - string pointers are 1 byte each
  1019  025E  1BFF               	btfsc	btemp+1,7
  1020  025F  2A68               	ljmp	stringcode
  1021  0260  1383               	bcf	3,7
  1022  0261  187F               	btfsc	btemp+1,0
  1023  0262  1783               	bsf	3,7
  1024  0263  0800               	movf	0,w
  1025  0264  0A84               	incf	4,f
  1026  0265  1903               	skipnz
  1027  0266  0AFF               	incf	btemp+1,f
  1028  0267  0008               	return
  1029  0268                     stringcode:
  1030  0268                     stringdir:
  1031  0268  3002               	movlw	high stringdir
  1032  0269  008A               	movwf	10
  1033  026A  0804               	movf	4,w
  1034  026B  0A84               	incf	4,f
  1035  026C  0782               	addwf	2,f
  1036  026D                     __stringbase:
  1037  026D  3400               	retlw	0
  1038  026E                     __end_of__stringtab:
  1039  026E                     STR_1:
  1040  026E  340A               	retlw	10
  1041  026F  3444               	retlw	68	;'D'
  1042  0270  3445               	retlw	69	;'E'
  1043  0271  3456               	retlw	86	;'V'
  1044  0272  3445               	retlw	69	;'E'
  1045  0273  344C               	retlw	76	;'L'
  1046  0274  344F               	retlw	79	;'O'
  1047  0275  3450               	retlw	80	;'P'
  1048  0276  344D               	retlw	77	;'M'
  1049  0277  3445               	retlw	69	;'E'
  1050  0278  344E               	retlw	78	;'N'
  1051  0279  3454               	retlw	84	;'T'
  1052  027A  345F               	retlw	95	;'_'
  1053  027B  3445               	retlw	69	;'E'
  1054  027C  3452               	retlw	82	;'R'
  1055  027D  3452               	retlw	82	;'R'
  1056  027E  344F               	retlw	79	;'O'
  1057  027F  3452               	retlw	82	;'R'
  1058  0280  3400               	retlw	0
  1059  0281                     STR_3:
  1060  0281  340A               	retlw	10
  1061  0282  3449               	retlw	73	;'I'
  1062  0283  346E               	retlw	110	;'n'
  1063  0284  3473               	retlw	115	;'s'
  1064  0285  3474               	retlw	116	;'t'
  1065  0286  3461               	retlw	97	;'a'
  1066  0287  346E               	retlw	110	;'n'
  1067  0288  3463               	retlw	99	;'c'
  1068  0289  3465               	retlw	101	;'e'
  1069  028A  3449               	retlw	73	;'I'
  1070  028B  3464               	retlw	100	;'d'
  1071  028C  343A               	retlw	58	;':'
  1072  028D  3420               	retlw	32	;' '
  1073  028E  3430               	retlw	48	;'0'
  1074  028F  3478               	retlw	120	;'x'
  1075  0290  3400               	retlw	0
  1076  0291                     STR_2:
  1077  0291  340A               	retlw	10
  1078  0292  344D               	retlw	77	;'M'
  1079  0293  346F               	retlw	111	;'o'
  1080  0294  3464               	retlw	100	;'d'
  1081  0295  3475               	retlw	117	;'u'
  1082  0296  346C               	retlw	108	;'l'
  1083  0297  3465               	retlw	101	;'e'
  1084  0298  3449               	retlw	73	;'I'
  1085  0299  3464               	retlw	100	;'d'
  1086  029A  343A               	retlw	58	;':'
  1087  029B  3420               	retlw	32	;' '
  1088  029C  3430               	retlw	48	;'0'
  1089  029D  3478               	retlw	120	;'x'
  1090  029E  3400               	retlw	0
  1091  029F                     STR_5:
  1092  029F  340A               	retlw	10
  1093  02A0  3445               	retlw	69	;'E'
  1094  02A1  3472               	retlw	114	;'r'
  1095  02A2  3472               	retlw	114	;'r'
  1096  02A3  346F               	retlw	111	;'o'
  1097  02A4  3472               	retlw	114	;'r'
  1098  02A5  3449               	retlw	73	;'I'
  1099  02A6  3464               	retlw	100	;'d'
  1100  02A7  343A               	retlw	58	;':'
  1101  02A8  3420               	retlw	32	;' '
  1102  02A9  3430               	retlw	48	;'0'
  1103  02AA  3478               	retlw	120	;'x'
  1104  02AB  3400               	retlw	0
  1105  02AC                     STR_4:
  1106  02AC  340A               	retlw	10
  1107  02AD  3441               	retlw	65	;'A'
  1108  02AE  3470               	retlw	112	;'p'
  1109  02AF  3469               	retlw	105	;'i'
  1110  02B0  3449               	retlw	73	;'I'
  1111  02B1  3464               	retlw	100	;'d'
  1112  02B2  343A               	retlw	58	;':'
  1113  02B3  3420               	retlw	32	;' '
  1114  02B4  3430               	retlw	48	;'0'
  1115  02B5  3478               	retlw	120	;'x'
  1116  02B6  3400               	retlw	0
  1117                           
  1118                           	psect	cinit
  1119  0015                     start_initialization:	
  1120                           ; #config settings
  1121                           
  1122  0015                     __initialization:
  1123                           
  1124                           ; Initialize objects allocated to BANK1
  1125  0015  1383               	bcf	3,7	;select IRP bank0
  1126  0016  30D7               	movlw	low (__pdataBANK1+55)
  1127  0017  00FD               	movwf	btemp+-1
  1128  0018  3004               	movlw	high __pidataBANK1
  1129  0019  00FE               	movwf	btemp
  1130  001A  30E0               	movlw	low __pidataBANK1
  1131  001B  00FF               	movwf	btemp+1
  1132  001C  30A0               	movlw	low __pdataBANK1
  1133  001D  0084               	movwf	4
  1134  001E  120A  118A  2712  120A  118A  	fcall	init_ram0
  1135                           
  1136                           ; Initialize objects allocated to BANK0
  1137  0023  306E               	movlw	low (__pdataBANK0+9)
  1138  0024  00FD               	movwf	btemp+-1
  1139  0025  300F               	movlw	high __pidataBANK0
  1140  0026  00FE               	movwf	btemp
  1141  0027  30F7               	movlw	low __pidataBANK0
  1142  0028  00FF               	movwf	btemp+1
  1143  0029  3065               	movlw	low __pdataBANK0
  1144  002A  0084               	movwf	4
  1145  002B  120A  118A  2712  120A  118A  	fcall	init_ram0
  1146                           
  1147                           ; Clear objects allocated to BANK0
  1148  0030  3020               	movlw	low __pbssBANK0
  1149  0031  0084               	movwf	4
  1150  0032  3046               	movlw	low (__pbssBANK0+38)
  1151  0033  120A  158A  27EF  120A  118A  	fcall	clear_ram0
  1152  0038                     end_of_initialization:	
  1153                           ;End of C runtime variable initialization code
  1154                           
  1155  0038                     __end_of__initialization:
  1156  0038  0183               	clrf	3
  1157  0039  120A  158A  2FE7   	ljmp	_main	;jump to C main() function
  1158                           
  1159                           	psect	bssBANK0
  1160  0020                     __pbssBANK0:
  1161  0020                     _Rte_SenderReceiverFlags:
  1162  0020                     	ds	6
  1163  0026                     _callbackTable:
  1164  0026                     	ds	5
  1165  002B                     _AppTsk_CurrentEvents:
  1166  002B                     	ds	4
  1167  002F                     _Rte_SenderReceiverBuffers:
  1168  002F                     	ds	3
  1169  0032                     _VFB_DriverWeight:
  1170  0032                     	ds	2
  1171  0034                     _RX_Data:
  1172  0034                     	ds	1
  1173  0035                     _Uart_ThisConfiguration:
  1174  0035                     	ds	1
  1175  0036                     CyclicTask@TaskCounter:
  1176  0036                     	ds	1
  1177  0037                     _SeatCtrlMode_CurrentMode:
  1178  0037                     	ds	1
  1179  0038                     _Spi_ThisConfiguration:
  1180  0038                     	ds	1
  1181  0039                     _VFB_SlidePosition:
  1182  0039                     	ds	1
  1183  003A                     _VFB_InclinePosition:
  1184  003A                     	ds	1
  1185  003B                     _VFB_HeightPosition:
  1186  003B                     	ds	1
  1187  003C                     _VFB_AutoBtnState:
  1188  003C                     	ds	1
  1189  003D                     _VFB_SlideBtnState:
  1190  003D                     	ds	1
  1191  003E                     _VFB_InclineBtnState:
  1192  003E                     	ds	1
  1193  003F                     _VFB_HeightBtnState:
  1194  003F                     	ds	1
  1195  0040                     _Adc_Result:
  1196  0040                     	ds	1
  1197  0041                     _Adc_ThisConfiguration:
  1198  0041                     	ds	1
  1199  0042                     _Dio_Channels:
  1200  0042                     	ds	1
  1201  0043                     _IoHwAb_PositionSensorsReadings:
  1202  0043                     	ds	3
  1203                           
  1204                           	psect	dataBANK0
  1205  0065                     __pdataBANK0:
  1206  0065                     _Dio_ConfigGroupChannel:
  1207  0065                     	ds	6
  1208  006B                     _VFB_SlideMotorState:
  1209  006B                     	ds	1
  1210  006C                     _VFB_InclineMotorState:
  1211  006C                     	ds	1
  1212  006D                     _VFB_HeightMotorState:
  1213  006D                     	ds	1
  1214                           
  1215                           	psect	dataBANK1
  1216  00A0                     __pdataBANK1:
  1217  00A0                     _Spi_Config:
  1218  00A0                     	ds	13
  1219  00AD                     _TempSensor_Config:
  1220  00AD                     	ds	12
  1221  00B9                     _Adc_PortConfig:
  1222  00B9                     	ds	9
  1223  00C2                     _Uart_Config:
  1224  00C2                     	ds	9
  1225  00CB                     _Uart_PinsConfig:
  1226  00CB                     	ds	6
  1227  00D1                     _Spi_ConfigPins:
  1228  00D1                     	ds	6
  1229                           
  1230                           	psect	inittext
  1231  070E                     init_fetch0:	
  1232                           ;	Called with low address in FSR and high address in W
  1233                           
  1234  070E  087E               	movf	btemp,w
  1235  070F  008A               	movwf	10
  1236  0710  087F               	movf	btemp+1,w
  1237  0711  0082               	movwf	2
  1238  0712                     init_ram0:	
  1239                           ;Called with:
  1240                           ;	high address of idata address in btemp 
  1241                           ;	low address of idata address in btemp+1 
  1242                           ;	low address of data in FSR
  1243                           ;	high address + 1 of data in btemp-1
  1244                           
  1245  0712  120A  118A  270E  120A  118A  	fcall	init_fetch0
  1246  0717  0080               	movwf	0
  1247  0718  0A84               	incf	4,f
  1248  0719  0804               	movf	4,w
  1249  071A  067D               	xorwf	btemp+-1,w
  1250  071B  1903               	btfsc	3,2
  1251  071C  3400               	retlw	0
  1252  071D  0AFF               	incf	btemp+1,f
  1253  071E  1903               	btfsc	3,2
  1254  071F  0AFE               	incf	btemp,f
  1255  0720  2F12               	goto	init_ram0
  1256                           
  1257                           	psect	clrtext
  1258  0FEF                     clear_ram0:	
  1259                           ;	Called with FSR containing the base address, and
  1260                           ;	W with the last address+1
  1261                           
  1262  0FEF  0064               	clrwdt	;clear the watchdog before getting into this loop
  1263  0FF0                     clrloop0:
  1264  0FF0  0180               	clrf	0	;clear RAM location pointed to by FSR
  1265  0FF1  0A84               	incf	4,f	;increment pointer
  1266  0FF2  0604               	xorwf	4,w	;XOR with final address
  1267  0FF3  1903               	btfsc	3,2	;have we reached the end yet?
  1268  0FF4  3400               	retlw	0	;all done for this memory range, return
  1269  0FF5  0604               	xorwf	4,w	;XOR again to restore value
  1270  0FF6  2FF0               	goto	clrloop0	;do the next byte
  1271                           
  1272                           	psect	cstackCOMMON
  1273  0070                     __pcstackCOMMON:
  1274  0070                     ?_Rte_Start:
  1275  0070                     ?_Rte_Call_SeatManager_rpHeightMotor_Move:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     ?_Rte_Call_SeatManager_rpInclineMotor_Move:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ?_Rte_Call_SeatManager_rpSlideMotor_Move:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0070                     ?_Rte_Call_SeatManager_rpHeightSensor_GetPosition:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0070                     ?_Rte_Call_SeatManager_rpWeightSensor_GetWeight:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0070                     ?_Rte_Call_SeatManager_rpSlideSensor_GetPosition:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0070                     ?_Rte_Call_SeatManager_rpInclineSensor_GetPosition:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0070                     ?_Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?_Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ?_Rte_Call_HeightSensor_rpIOGetHeight_IOGet:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ?_Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ?_Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ?_Rte_Call_InclineSensor_rpIOGetIncline_IOGet:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     ?_Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ?_Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ?_Rte_Call_SlideSensor_rpIOGetSlide_IOGet:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ?_Rte_Call_WeightSensor_rpIOGetWeight_IOGet:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ?_Adc_StartGroupConversion:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0070                     ?_CyclicTask:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0070                     ?_SPI_Master_Wait:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0070                     ?_SeatManager_AutoHeight:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338  0070                     ?_SeatManager_AutoSlide:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341  0070                     ?_SeatManager_AutoIncline:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344  0070                     ?_HeightMotor_Move:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0070                     ?_HeightSensor_GetPosition:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  0070                     ?_InclineMotor_Move:	
  1351                           ; 1 bytes @ 0x0
  1352                           
  1353  0070                     ?_InclineSensor_GetPosition:	
  1354                           ; 1 bytes @ 0x0
  1355                           
  1356  0070                     ?_IoHwAbs_ECUGet_Height:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359  0070                     ?_IoHwAbs_ECUGet_Incline:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0070                     ?_IoHwAbs_ECUGet_Slide:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0070                     ?_IoHwAbs_ECUGet_Weight:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368  0070                     ?_IoHwAbs_ECUSetForward_Height:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  0070                     ?_IoHwAbs_ECUSetForward_Incline:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  0070                     ?_IoHwAbs_ECUSetForward_Slide:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377  0070                     ?_IoHwAbs_ECUSetReverse_Height:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0070                     ?_IoHwAbs_ECUSetReverse_Incline:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0070                     ?_IoHwAbs_ECUSetReverse_Slide:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  0070                     ?_SlideMotor_Move:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  0070                     ?_SlideSensor_GetPosition:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  0070                     ?_WeightSensor_GetWeight:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395  0070                     ?_Adc_CallbackFn:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  0070                     ?_Os_TerminateTask:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401  0070                     ?_ISR:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404  0070                     ?_Uart_TX_Callback:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407  0070                     ??_Uart_TX_Callback:	
  1408                           ; 1 bytes @ 0x0
  1409                           
  1410  0070                     ?_Uart_RX_Callback:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413  0070                     ??_Uart_RX_Callback:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416  0070                     ?_main:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419  0070                     ?i1___awdiv:	
  1420                           ; 2 bytes @ 0x0
  1421                           
  1422  0070                     Adc_ReadGroup@Group:	
  1423                           ; 2 bytes @ 0x0
  1424                           
  1425  0070                     Adc_StartGroupConversion@groupId:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  0070                     Os_SetRelAlarm@alarmID:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431  0070                     Spi_ReadIB@Channel:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434  0070                     i1___awdiv@divisor:	
  1435                           ; 1 bytes @ 0x0
  1436                           
  1437                           
  1438                           ; 2 bytes @ 0x0
  1439  0070                     	ds	2
  1440  0072                     i1___awdiv@dividend:
  1441                           
  1442                           ; 2 bytes @ 0x2
  1443  0072                     	ds	2
  1444  0074                     ??i1___awdiv:
  1445  0074                     i1___awdiv@counter:	
  1446                           ; 1 bytes @ 0x4
  1447                           
  1448                           
  1449                           ; 1 bytes @ 0x4
  1450  0074                     	ds	1
  1451  0075                     i1___awdiv@sign:
  1452                           
  1453                           ; 1 bytes @ 0x5
  1454  0075                     	ds	1
  1455  0076                     i1___awdiv@quotient:
  1456                           
  1457                           ; 2 bytes @ 0x6
  1458  0076                     	ds	2
  1459  0078                     ??_Adc_CallbackFn:
  1460                           
  1461                           ; 1 bytes @ 0x8
  1462  0078                     	ds	2
  1463  007A                     ??_ISR:
  1464                           
  1465                           ; 1 bytes @ 0xA
  1466  007A                     	ds	4
  1467                           
  1468                           	psect	cstackBANK0
  1469  0046                     __pcstackBANK0:
  1470  0046                     ?_Spi_ReadIB:
  1471  0046                     ?_Dio_WriteChannel:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0046                     ??_Adc_StartGroupConversion:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0046                     ??_SPI_Master_Wait:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  0046                     ?_IsMotorAdjustNeeded:	
  1481                           ; 1 bytes @ 0x0
  1482                           
  1483  0046                     ?_delay:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486  0046                     ??_Os_TerminateTask:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489  0046                     ?___awdiv:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492  0046                     ?___lwdiv:	
  1493                           ; 2 bytes @ 0x0
  1494                           
  1495  0046                     IsMotorAdjustNeeded@Weight:	
  1496                           ; 2 bytes @ 0x0
  1497                           
  1498  0046                     Dio_WriteChannel@Level:	
  1499                           ; 1 bytes @ 0x0
  1500                           
  1501  0046                     Spi_ReadIB@DataBufferPtr:	
  1502                           ; 1 bytes @ 0x0
  1503                           
  1504  0046                     delay@milli_seconds:	
  1505                           ; 1 bytes @ 0x0
  1506                           
  1507  0046                     ___awdiv@divisor:	
  1508                           ; 2 bytes @ 0x0
  1509                           
  1510  0046                     ___lwdiv@divisor:	
  1511                           ; 2 bytes @ 0x0
  1512                           
  1513                           
  1514                           ; 2 bytes @ 0x0
  1515  0046                     	ds	1
  1516  0047                     ??_Spi_ReadIB:
  1517  0047                     ??_Dio_WriteChannel:	
  1518                           ; 1 bytes @ 0x1
  1519                           
  1520  0047                     IsMotorAdjustNeeded@Step:	
  1521                           ; 1 bytes @ 0x1
  1522                           
  1523                           
  1524                           ; 1 bytes @ 0x1
  1525  0047                     	ds	1
  1526  0048                     ??_IsMotorAdjustNeeded:
  1527  0048                     ??_delay:	
  1528                           ; 1 bytes @ 0x2
  1529                           
  1530  0048                     ___awdiv@dividend:	
  1531                           ; 1 bytes @ 0x2
  1532                           
  1533  0048                     ___lwdiv@dividend:	
  1534                           ; 2 bytes @ 0x2
  1535                           
  1536                           
  1537                           ; 2 bytes @ 0x2
  1538  0048                     	ds	1
  1539  0049                     ??_IoHwAbs_ECUGet_Weight:
  1540  0049                     IoHwAbs_ECUGet_Weight@status:	
  1541                           ; 1 bytes @ 0x3
  1542                           
  1543                           
  1544                           ; 1 bytes @ 0x3
  1545  0049                     	ds	1
  1546  004A                     ??___awdiv:
  1547  004A                     ??___lwdiv:	
  1548                           ; 1 bytes @ 0x4
  1549                           
  1550  004A                     IsMotorAdjustNeeded@Position:	
  1551                           ; 1 bytes @ 0x4
  1552                           
  1553  004A                     IoHwAbs_ECUGet_Weight@weight:	
  1554                           ; 1 bytes @ 0x4
  1555                           
  1556  004A                     ___awdiv@counter:	
  1557                           ; 1 bytes @ 0x4
  1558                           
  1559  004A                     Dio_WriteChannel@Port_Ptr:	
  1560                           ; 1 bytes @ 0x4
  1561                           
  1562  004A                     ___lwdiv@quotient:	
  1563                           ; 2 bytes @ 0x4
  1564                           
  1565                           
  1566                           ; 2 bytes @ 0x4
  1567  004A                     	ds	1
  1568  004B                     IsMotorAdjustNeeded@adjustMotor:
  1569  004B                     ___awdiv@sign:	
  1570                           ; 1 bytes @ 0x5
  1571                           
  1572  004B                     IoHwAbs_ECUGet_Weight@spiData:	
  1573                           ; 1 bytes @ 0x5
  1574                           
  1575                           
  1576                           ; 2 bytes @ 0x5
  1577  004B                     	ds	1
  1578  004C                     Dio_WriteChannel@ChannelId:
  1579  004C                     ___lwdiv@counter:	
  1580                           ; 1 bytes @ 0x6
  1581                           
  1582  004C                     ___awdiv@quotient:	
  1583                           ; 1 bytes @ 0x6
  1584                           
  1585                           
  1586                           ; 2 bytes @ 0x6
  1587  004C                     	ds	1
  1588  004D                     ??_Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward:
  1589  004D                     ??_Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse:	
  1590                           ; 1 bytes @ 0x7
  1591                           
  1592  004D                     ??_Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward:	
  1593                           ; 1 bytes @ 0x7
  1594                           
  1595  004D                     ??_Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse:	
  1596                           ; 1 bytes @ 0x7
  1597                           
  1598  004D                     ??_Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward:	
  1599                           ; 1 bytes @ 0x7
  1600                           
  1601  004D                     ??_Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse:	
  1602                           ; 1 bytes @ 0x7
  1603                           
  1604  004D                     ??_Rte_Call_WeightSensor_rpIOGetWeight_IOGet:	
  1605                           ; 1 bytes @ 0x7
  1606                           
  1607  004D                     ??_HeightMotor_Move:	
  1608                           ; 1 bytes @ 0x7
  1609                           
  1610  004D                     ??_InclineMotor_Move:	
  1611                           ; 1 bytes @ 0x7
  1612                           
  1613  004D                     ??_IoHwAbs_ECUSetForward_Height:	
  1614                           ; 1 bytes @ 0x7
  1615                           
  1616  004D                     ??_IoHwAbs_ECUSetForward_Incline:	
  1617                           ; 1 bytes @ 0x7
  1618                           
  1619  004D                     ??_IoHwAbs_ECUSetForward_Slide:	
  1620                           ; 1 bytes @ 0x7
  1621                           
  1622  004D                     ??_IoHwAbs_ECUSetReverse_Height:	
  1623                           ; 1 bytes @ 0x7
  1624                           
  1625  004D                     ??_IoHwAbs_ECUSetReverse_Incline:	
  1626                           ; 1 bytes @ 0x7
  1627                           
  1628  004D                     ??_IoHwAbs_ECUSetReverse_Slide:	
  1629                           ; 1 bytes @ 0x7
  1630                           
  1631  004D                     ??_SlideMotor_Move:	
  1632                           ; 1 bytes @ 0x7
  1633                           
  1634  004D                     HeightMotor_Move@Step:	
  1635                           ; 1 bytes @ 0x7
  1636                           
  1637  004D                     InclineMotor_Move@Step:	
  1638                           ; 1 bytes @ 0x7
  1639                           
  1640  004D                     SlideMotor_Move@Step:	
  1641                           ; 1 bytes @ 0x7
  1642                           
  1643  004D                     Rte_Call_WeightSensor_rpIOGetWeight_IOGet@weight:	
  1644                           ; 1 bytes @ 0x7
  1645                           
  1646                           
  1647                           ; 1 bytes @ 0x7
  1648  004D                     	ds	1
  1649  004E                     ??_Rte_Call_SeatManager_rpHeightMotor_Move:
  1650  004E                     ??_Rte_Call_SeatManager_rpInclineMotor_Move:	
  1651                           ; 1 bytes @ 0x8
  1652                           
  1653  004E                     ??_Rte_Call_SeatManager_rpSlideMotor_Move:	
  1654                           ; 1 bytes @ 0x8
  1655                           
  1656  004E                     ?_Adc_ReadGroup:	
  1657                           ; 1 bytes @ 0x8
  1658                           
  1659  004E                     ??_WeightSensor_GetWeight:	
  1660                           ; 1 bytes @ 0x8
  1661                           
  1662  004E                     WeightSensor_GetWeight@Weight:	
  1663                           ; 1 bytes @ 0x8
  1664                           
  1665  004E                     Adc_ReadGroup@DataBufferPtr:	
  1666                           ; 1 bytes @ 0x8
  1667                           
  1668  004E                     Rte_Call_SeatManager_rpHeightMotor_Move@Step:	
  1669                           ; 1 bytes @ 0x8
  1670                           
  1671  004E                     Rte_Call_SeatManager_rpInclineMotor_Move@Step:	
  1672                           ; 1 bytes @ 0x8
  1673                           
  1674  004E                     Rte_Call_SeatManager_rpSlideMotor_Move@Step:	
  1675                           ; 1 bytes @ 0x8
  1676                           
  1677                           
  1678                           ; 1 bytes @ 0x8
  1679  004E                     	ds	1
  1680  004F                     ??_Adc_ReadGroup:
  1681  004F                     WeightSensor_GetWeight@weight:	
  1682                           ; 1 bytes @ 0x9
  1683                           
  1684                           
  1685                           ; 2 bytes @ 0x9
  1686  004F                     	ds	2
  1687  0051                     ??_Rte_Call_SeatManager_rpWeightSensor_GetWeight:
  1688  0051                     Adc_ReadGroup@i:	
  1689                           ; 1 bytes @ 0xB
  1690                           
  1691  0051                     Rte_Call_SeatManager_rpWeightSensor_GetWeight@Weight:	
  1692                           ; 1 bytes @ 0xB
  1693                           
  1694                           
  1695                           ; 1 bytes @ 0xB
  1696  0051                     	ds	1
  1697  0052                     Adc_ReadGroup@i_495:
  1698                           
  1699                           ; 1 bytes @ 0xC
  1700  0052                     	ds	1
  1701  0053                     ??_IoHwAbs_ECUGet_Height:
  1702  0053                     ??_IoHwAbs_ECUGet_Incline:	
  1703                           ; 1 bytes @ 0xD
  1704                           
  1705  0053                     ??_IoHwAbs_ECUGet_Slide:	
  1706                           ; 1 bytes @ 0xD
  1707                           
  1708  0053                     IoHwAbs_ECUGet_Height@status:	
  1709                           ; 1 bytes @ 0xD
  1710                           
  1711  0053                     IoHwAbs_ECUGet_Incline@status:	
  1712                           ; 1 bytes @ 0xD
  1713                           
  1714  0053                     IoHwAbs_ECUGet_Slide@status:	
  1715                           ; 1 bytes @ 0xD
  1716                           
  1717                           
  1718                           ; 1 bytes @ 0xD
  1719  0053                     	ds	1
  1720  0054                     IoHwAbs_ECUGet_Height@position:
  1721  0054                     IoHwAbs_ECUGet_Incline@position:	
  1722                           ; 1 bytes @ 0xE
  1723                           
  1724  0054                     IoHwAbs_ECUGet_Slide@position:	
  1725                           ; 1 bytes @ 0xE
  1726                           
  1727                           
  1728                           ; 1 bytes @ 0xE
  1729  0054                     	ds	1
  1730  0055                     ??_Rte_Call_HeightSensor_rpIOGetHeight_IOGet:
  1731  0055                     ??_Rte_Call_InclineSensor_rpIOGetIncline_IOGet:	
  1732                           ; 1 bytes @ 0xF
  1733                           
  1734  0055                     ??_Rte_Call_SlideSensor_rpIOGetSlide_IOGet:	
  1735                           ; 1 bytes @ 0xF
  1736                           
  1737  0055                     Rte_Call_HeightSensor_rpIOGetHeight_IOGet@position:	
  1738                           ; 1 bytes @ 0xF
  1739                           
  1740  0055                     Rte_Call_InclineSensor_rpIOGetIncline_IOGet@position:	
  1741                           ; 1 bytes @ 0xF
  1742                           
  1743  0055                     Rte_Call_SlideSensor_rpIOGetSlide_IOGet@position:	
  1744                           ; 1 bytes @ 0xF
  1745                           
  1746                           
  1747                           ; 1 bytes @ 0xF
  1748  0055                     	ds	1
  1749  0056                     ??_HeightSensor_GetPosition:
  1750  0056                     ??_InclineSensor_GetPosition:	
  1751                           ; 1 bytes @ 0x10
  1752                           
  1753  0056                     ??_SlideSensor_GetPosition:	
  1754                           ; 1 bytes @ 0x10
  1755                           
  1756  0056                     HeightSensor_GetPosition@Position:	
  1757                           ; 1 bytes @ 0x10
  1758                           
  1759  0056                     InclineSensor_GetPosition@Position:	
  1760                           ; 1 bytes @ 0x10
  1761                           
  1762  0056                     SlideSensor_GetPosition@Position:	
  1763                           ; 1 bytes @ 0x10
  1764                           
  1765                           
  1766                           ; 1 bytes @ 0x10
  1767  0056                     	ds	1
  1768  0057                     HeightSensor_GetPosition@position:
  1769  0057                     InclineSensor_GetPosition@position:	
  1770                           ; 1 bytes @ 0x11
  1771                           
  1772  0057                     SlideSensor_GetPosition@position:	
  1773                           ; 1 bytes @ 0x11
  1774                           
  1775                           
  1776                           ; 1 bytes @ 0x11
  1777  0057                     	ds	1
  1778  0058                     ??_Rte_Call_SeatManager_rpHeightSensor_GetPosition:
  1779  0058                     ??_Rte_Call_SeatManager_rpSlideSensor_GetPosition:	
  1780                           ; 1 bytes @ 0x12
  1781                           
  1782  0058                     ??_Rte_Call_SeatManager_rpInclineSensor_GetPosition:	
  1783                           ; 1 bytes @ 0x12
  1784                           
  1785  0058                     Rte_Call_SeatManager_rpHeightSensor_GetPosition@Position:	
  1786                           ; 1 bytes @ 0x12
  1787                           
  1788  0058                     Rte_Call_SeatManager_rpInclineSensor_GetPosition@Position:	
  1789                           ; 1 bytes @ 0x12
  1790                           
  1791  0058                     Rte_Call_SeatManager_rpSlideSensor_GetPosition@Position:	
  1792                           ; 1 bytes @ 0x12
  1793                           
  1794                           
  1795                           ; 1 bytes @ 0x12
  1796  0058                     	ds	1
  1797  0059                     ??_SeatManager_AutoHeight:
  1798  0059                     ??_SeatManager_AutoSlide:	
  1799                           ; 1 bytes @ 0x13
  1800                           
  1801  0059                     ??_SeatManager_AutoIncline:	
  1802                           ; 1 bytes @ 0x13
  1803                           
  1804  0059                     SeatManager_AutoHeight@adjustMotor:	
  1805                           ; 1 bytes @ 0x13
  1806                           
  1807  0059                     SeatManager_AutoSlide@adjustMotor:	
  1808                           ; 1 bytes @ 0x13
  1809                           
  1810  0059                     SeatManager_AutoIncline@adjustMotor:	
  1811                           ; 1 bytes @ 0x13
  1812                           
  1813                           
  1814                           ; 1 bytes @ 0x13
  1815  0059                     	ds	1
  1816  005A                     SeatManager_AutoHeight@Weight:
  1817  005A                     SeatManager_AutoSlide@Weight:	
  1818                           ; 1 bytes @ 0x14
  1819                           
  1820  005A                     SeatManager_AutoIncline@Weight:	
  1821                           ; 1 bytes @ 0x14
  1822                           
  1823                           
  1824                           ; 1 bytes @ 0x14
  1825  005A                     	ds	1
  1826  005B                     SeatManager_AutoHeight@Position:
  1827  005B                     SeatManager_AutoSlide@Position:	
  1828                           ; 1 bytes @ 0x15
  1829                           
  1830  005B                     SeatManager_AutoIncline@Position:	
  1831                           ; 1 bytes @ 0x15
  1832                           
  1833                           
  1834                           ; 1 bytes @ 0x15
  1835  005B                     	ds	1
  1836  005C                     SeatManager_AutoHeight@Step:
  1837  005C                     SeatManager_AutoSlide@Step:	
  1838                           ; 1 bytes @ 0x16
  1839                           
  1840  005C                     SeatManager_AutoIncline@Step:	
  1841                           ; 1 bytes @ 0x16
  1842                           
  1843                           
  1844                           ; 1 bytes @ 0x16
  1845  005C                     	ds	1
  1846  005D                     ??_CyclicTask:
  1847  005D                     ?_Os_SetRelAlarm:	
  1848                           ; 1 bytes @ 0x17
  1849                           
  1850  005D                     Os_SetRelAlarm@offset:	
  1851                           ; 1 bytes @ 0x17
  1852                           
  1853                           
  1854                           ; 4 bytes @ 0x17
  1855  005D                     	ds	4
  1856  0061                     Os_SetRelAlarm@cycle:
  1857                           
  1858                           ; 4 bytes @ 0x1B
  1859  0061                     	ds	4
  1860  0065                     ??_Rte_Start:
  1861  0065                     ??_main:	
  1862                           ; 1 bytes @ 0x1F
  1863                           
  1864  0065                     ??_Os_SetRelAlarm:	
  1865                           ; 1 bytes @ 0x1F
  1866                           
  1867                           
  1868                           	psect	maintext
  1869  0FE7                     __pmaintext:	
  1870                           ; 1 bytes @ 0x1F
  1871 ;;
  1872 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1873 ;;
  1874 ;; *************** function _main *****************
  1875 ;; Defined at:
  1876 ;;		line 5 in file "main.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;		None
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  2   42[None  ] int 
  1883 ;; Registers used:
  1884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : B00/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1890 ;;      Params:         0       0       0       0       0
  1891 ;;      Locals:         0       0       0       0       0
  1892 ;;      Temps:          0       0       0       0       0
  1893 ;;      Totals:         0       0       0       0       0
  1894 ;;Total ram usage:        0 bytes
  1895 ;; Hardware stack levels required when called:   13
  1896 ;; This function calls:
  1897 ;;		_Rte_Start
  1898 ;; This function is called by:
  1899 ;;		Startup code after reset
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           
  1904                           ;psect for function _main
  1905  0FE7                     _main:
  1906  0FE7                     l3526:	
  1907                           ;incstack = 0
  1908 ;; hardware stack exceeded
  1909                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1910                           
  1911                           
  1912                           ;main.c: 7:  Rte_Start();
  1913  0FE7  120A  118A  25C8  120A  158A  	fcall	_Rte_Start
  1914  0FEC                     l43:
  1915  0FEC  120A  118A  2812   	ljmp	start
  1916  0FEF                     __end_of_main:
  1917                           
  1918                           	psect	text1
  1919  05C8                     __ptext1:	
  1920 ;; *************** function _Rte_Start *****************
  1921 ;; Defined at:
  1922 ;;		line 414 in file "rte/Rte.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      unsigned char 
  1929 ;; Registers used:
  1930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0
  1939 ;;      Totals:         0       0       0       0       0
  1940 ;;Total ram usage:        0 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:   12
  1943 ;; This function calls:
  1944 ;;		_Os_SetRelAlarm
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function _Rte_Start
  1952  05C8                     _Rte_Start:
  1953  05C8                     l3306:	
  1954                           ;incstack = 0
  1955 ;; hardware stack exceeded
  1956                           ; Regs used in _Rte_Start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1957                           
  1958                           
  1959                           ;rte/Rte.c: 416:  Rte_SenderReceiverFlags.Height.IsUpdated = (0u);
  1960  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1961  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1962  05CA  01A0               	clrf	_Rte_SenderReceiverFlags
  1963                           
  1964                           ;rte/Rte.c: 417:  Rte_SenderReceiverFlags.Height.Status = 0U;
  1965  05CB  01A1               	clrf	_Rte_SenderReceiverFlags+1
  1966                           
  1967                           ;rte/Rte.c: 418:  Rte_SenderReceiverFlags.Incline.IsUpdated = (0u);
  1968  05CC  01A2               	clrf	_Rte_SenderReceiverFlags+2
  1969                           
  1970                           ;rte/Rte.c: 419:  Rte_SenderReceiverFlags.Incline.Status = 0U;
  1971  05CD  01A3               	clrf	_Rte_SenderReceiverFlags+3
  1972                           
  1973                           ;rte/Rte.c: 420:  Rte_SenderReceiverFlags.Slide.IsUpdated = (0u);
  1974  05CE  01A4               	clrf	_Rte_SenderReceiverFlags+4
  1975                           
  1976                           ;rte/Rte.c: 421:  Rte_SenderReceiverFlags.Slide.Status = 0U;
  1977  05CF  01A5               	clrf	_Rte_SenderReceiverFlags+5
  1978                           
  1979                           ;rte/Rte.c: 422:  Rte_SenderReceiverBuffers.HeightBtnState = 0;
  1980  05D0  01AF               	clrf	_Rte_SenderReceiverBuffers
  1981                           
  1982                           ;rte/Rte.c: 423:  Rte_SenderReceiverBuffers.InclineBtnState = 0;
  1983  05D1  01B0               	clrf	_Rte_SenderReceiverBuffers+1
  1984                           
  1985                           ;rte/Rte.c: 424:  Rte_SenderReceiverBuffers.SlideBtnState = 0;
  1986  05D2  01B1               	clrf	_Rte_SenderReceiverBuffers+2
  1987  05D3                     l3308:
  1988                           
  1989                           ;rte/Rte.c: 426:  Os_SetRelAlarm(0U, 0, 100);
  1990  05D3  3000               	movlw	0
  1991  05D4  00E0               	movwf	Os_SetRelAlarm@offset+3
  1992  05D5  3000               	movlw	0
  1993  05D6  00DF               	movwf	Os_SetRelAlarm@offset+2
  1994  05D7  3000               	movlw	0
  1995  05D8  00DE               	movwf	Os_SetRelAlarm@offset+1
  1996  05D9  3000               	movlw	0
  1997  05DA  00DD               	movwf	Os_SetRelAlarm@offset
  1998  05DB  3000               	movlw	0
  1999  05DC  00E4               	movwf	Os_SetRelAlarm@cycle+3
  2000  05DD  3000               	movlw	0
  2001  05DE  00E3               	movwf	Os_SetRelAlarm@cycle+2
  2002  05DF  3000               	movlw	0
  2003  05E0  00E2               	movwf	Os_SetRelAlarm@cycle+1
  2004  05E1  3064               	movlw	100
  2005  05E2  00E1               	movwf	Os_SetRelAlarm@cycle
  2006  05E3  3000               	movlw	0
  2007  05E4  120A  118A  2721  120A  118A  	fcall	_Os_SetRelAlarm
  2008  05E9                     l753:
  2009  05E9  0008               	return
  2010  05EA                     __end_of_Rte_Start:
  2011                           
  2012                           	psect	text2
  2013  0721                     __ptext2:	
  2014 ;; *************** function _Os_SetRelAlarm *****************
  2015 ;; Defined at:
  2016 ;;		line 43 in file "bsw/static/Os.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;  alarmID         1    wreg     unsigned char 
  2019 ;;  offset          4   23[BANK0 ] unsigned long 
  2020 ;;  cycle           4   27[BANK0 ] unsigned long 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  alarmID         1    0[COMMON] unsigned char 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2032 ;;      Params:         0       8       0       0       0
  2033 ;;      Locals:         0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0
  2035 ;;      Totals:         0       8       0       0       0
  2036 ;;Total ram usage:        8 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:   11
  2039 ;; This function calls:
  2040 ;;		_CyclicTask
  2041 ;;		_delay
  2042 ;; This function is called by:
  2043 ;;		_Rte_Start
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           
  2048                           ;psect for function _Os_SetRelAlarm
  2049  0721                     _Os_SetRelAlarm:
  2050  0721                     l441:	
  2051                           ;incstack = 0
  2052 ;; hardware stack exceeded
  2053                           ; Regs used in _Os_SetRelAlarm: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2054                           ;bsw/static/Os.c: 43: void Os_SetRelAlarm(AlarmType alarmID, TickType offset, TickType c
      +                          ycle);bsw/static/Os.c: 44: {;bsw/static/Os.c: 45:  while (1)
  2055                           
  2056  0721                     l3246:
  2057                           
  2058                           ;bsw/static/Os.c: 46:  {;bsw/static/Os.c: 47:   CyclicTask();
  2059  0721  120A  118A  2396  120A  118A  	fcall	_CyclicTask
  2060  0726                     l3248:
  2061                           
  2062                           ;bsw/static/Os.c: 48:   delay(cycle);
  2063  0726  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0727  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0728  0862               	movf	Os_SetRelAlarm@cycle+1,w
  2066  0729  00C7               	movwf	delay@milli_seconds+1
  2067  072A  0861               	movf	Os_SetRelAlarm@cycle,w
  2068  072B  00C6               	movwf	delay@milli_seconds
  2069  072C  120A  118A  259E  120A  118A  	fcall	_delay
  2070  0731  2F21               	goto	l441
  2071  0732  0008               	return
  2072  0733                     __end_of_Os_SetRelAlarm:
  2073                           
  2074                           	psect	text3
  2075  059E                     __ptext3:	
  2076 ;; *************** function _delay *****************
  2077 ;; Defined at:
  2078 ;;		line 13 in file "bsw/static/Os.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  milli_second    2    0[BANK0 ] int 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  start_time      4    0        long 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      void 
  2085 ;; Registers used:
  2086 ;;		wreg
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2092 ;;      Params:         0       2       0       0       0
  2093 ;;      Locals:         0       4       0       0       0
  2094 ;;      Temps:          0       8       0       0       0
  2095 ;;      Totals:         0      14       0       0       0
  2096 ;;Total ram usage:       14 bytes
  2097 ;; Hardware stack levels used:    1
  2098 ;; Hardware stack levels required when called:    3
  2099 ;; This function calls:
  2100 ;;		Nothing
  2101 ;; This function is called by:
  2102 ;;		_Os_SetRelAlarm
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           
  2107                           ;psect for function _delay
  2108  059E                     _delay:
  2109  059E                     l3184:	
  2110                           ;incstack = 0
  2111                           ; Regs used in _delay: [wreg]
  2112                           
  2113  059E                     l3186:	
  2114                           ;bsw/static/Os.c: 17:  while ((-1L) < start_time + milli_seconds);
  2115                           
  2116  059E  30FF               	movlw	255
  2117  059F  1283               	bcf	3,5	;RP0=0, select bank0
  2118  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  2119  05A1  00C8               	movwf	??_delay
  2120  05A2  30FF               	movlw	255
  2121  05A3  00C9               	movwf	??_delay+1
  2122  05A4  30FF               	movlw	255
  2123  05A5  00CA               	movwf	??_delay+2
  2124  05A6  30FF               	movlw	255
  2125  05A7  00CB               	movwf	??_delay+3
  2126  05A8  0846               	movf	delay@milli_seconds,w
  2127  05A9  00CC               	movwf	??_delay+4
  2128  05AA  0847               	movf	delay@milli_seconds+1,w
  2129  05AB  00CD               	movwf	??_delay+5
  2130  05AC  3000               	movlw	0
  2131  05AD  1BCD               	btfsc	??_delay+5,7
  2132  05AE  30FF               	movlw	255
  2133  05AF  00CE               	movwf	??_delay+6
  2134  05B0  00CF               	movwf	??_delay+7
  2135  05B1  084C               	movf	??_delay+4,w
  2136  05B2  07C8               	addwf	??_delay,f
  2137  05B3  084D               	movf	??_delay+5,w
  2138  05B4  1803               	skipnc
  2139  05B5  0F4D               	incfsz	??_delay+5,w
  2140  05B6  2DB8               	goto	u2410
  2141  05B7  2DB9               	goto	u2411
  2142  05B8                     u2410:
  2143  05B8  07C9               	addwf	??_delay+1,f
  2144  05B9                     u2411:
  2145  05B9  084E               	movf	??_delay+6,w
  2146  05BA  1803               	skipnc
  2147  05BB  0F4E               	incfsz	??_delay+6,w
  2148  05BC  2DBE               	goto	u2412
  2149  05BD  2DBF               	goto	u2413
  2150  05BE                     u2412:
  2151  05BE  07CA               	addwf	??_delay+2,f
  2152  05BF                     u2413:
  2153  05BF  084F               	movf	??_delay+7,w
  2154  05C0  1803               	skipnc
  2155  05C1  0A4F               	incf	??_delay+7,w
  2156  05C2  07CB               	addwf	??_delay+3,f
  2157  05C3  1FCB               	btfss	??_delay+3,7
  2158  05C4  2DC6               	goto	u2421
  2159  05C5  2DC7               	goto	u2420
  2160  05C6                     u2421:
  2161  05C6  2D9E               	goto	l3186
  2162  05C7                     u2420:
  2163  05C7                     l425:
  2164  05C7  0008               	return
  2165  05C8                     __end_of_delay:
  2166                           
  2167                           	psect	text4
  2168  0396                     __ptext4:	
  2169 ;; *************** function _CyclicTask *****************
  2170 ;; Defined at:
  2171 ;;		line 330 in file "rte/Rte.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;		None
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;		None
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2185 ;;      Params:         0       0       0       0       0
  2186 ;;      Locals:         0       0       0       0       0
  2187 ;;      Temps:          0       0       0       0       0
  2188 ;;      Totals:         0       0       0       0       0
  2189 ;;Total ram usage:        0 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:   10
  2192 ;; This function calls:
  2193 ;;		_Os_TerminateTask
  2194 ;;		_SeatManager_AutoHeight
  2195 ;;		_SeatManager_AutoIncline
  2196 ;;		_SeatManager_AutoSlide
  2197 ;; This function is called by:
  2198 ;;		_Os_SetRelAlarm
  2199 ;;		_Os_ActivateTask
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           
  2204                           ;psect for function _CyclicTask
  2205  0396                     _CyclicTask:
  2206  0396                     l3188:	
  2207                           ;incstack = 0
  2208 ;; hardware stack exceeded
  2209                           ; Regs used in _CyclicTask: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2210                           
  2211                           
  2212                           ;rte/Rte.c: 332:  static uint8 TaskCounter = 0;;rte/Rte.c: 340:  if(TaskCounter % 2 == 0
      +                          )
  2213  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0398  1836               	btfsc	CyclicTask@TaskCounter,0
  2216  0399  2B9B               	goto	u2431
  2217  039A  2B9C               	goto	u2430
  2218  039B                     u2431:
  2219  039B  2BCD               	goto	l3208
  2220  039C                     u2430:
  2221  039C                     l3190:
  2222                           
  2223                           ;rte/Rte.c: 341:  {;rte/Rte.c: 342:   if(!(SeatCtrlMode_CurrentMode == 0 || SeatCtrlMode
      +                          _CurrentMode == 1))
  2224  039C  0837               	movf	_SeatCtrlMode_CurrentMode,w
  2225  039D  1903               	btfsc	3,2
  2226  039E  2BA0               	goto	u2441
  2227  039F  2BA1               	goto	u2440
  2228  03A0                     u2441:
  2229  03A0  2BAB               	goto	l3196
  2230  03A1                     u2440:
  2231  03A1                     l3192:
  2232  03A1  0337               	decf	_SeatCtrlMode_CurrentMode,w
  2233  03A2  1903               	btfsc	3,2
  2234  03A3  2BA5               	goto	u2451
  2235  03A4  2BA6               	goto	u2450
  2236  03A5                     u2451:
  2237  03A5  2BAB               	goto	l3196
  2238  03A6                     u2450:
  2239  03A6                     l3194:
  2240                           
  2241                           ;rte/Rte.c: 343:   {;rte/Rte.c: 344:    SeatManager_AutoHeight();
  2242  03A6  120A  118A  2571  120A  118A  	fcall	_SeatManager_AutoHeight
  2243  03AB                     l3196:
  2244                           
  2245                           ;rte/Rte.c: 347:   if(!(SeatCtrlMode_CurrentMode == 0 || SeatCtrlMode_CurrentMode == 1))
  2246  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2247  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2248  03AD  0837               	movf	_SeatCtrlMode_CurrentMode,w
  2249  03AE  1903               	btfsc	3,2
  2250  03AF  2BB1               	goto	u2461
  2251  03B0  2BB2               	goto	u2460
  2252  03B1                     u2461:
  2253  03B1  2BBC               	goto	l3202
  2254  03B2                     u2460:
  2255  03B2                     l3198:
  2256  03B2  0337               	decf	_SeatCtrlMode_CurrentMode,w
  2257  03B3  1903               	btfsc	3,2
  2258  03B4  2BB6               	goto	u2471
  2259  03B5  2BB7               	goto	u2470
  2260  03B6                     u2471:
  2261  03B6  2BBC               	goto	l3202
  2262  03B7                     u2470:
  2263  03B7                     l3200:
  2264                           
  2265                           ;rte/Rte.c: 348:   {;rte/Rte.c: 349:    SeatManager_AutoIncline();
  2266  03B7  120A  118A  2544  120A  118A  	fcall	_SeatManager_AutoIncline
  2267  03BC                     l3202:
  2268                           
  2269                           ;rte/Rte.c: 352:   if(!(SeatCtrlMode_CurrentMode == 0 || SeatCtrlMode_CurrentMode == 1))
  2270  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2271  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2272  03BE  0837               	movf	_SeatCtrlMode_CurrentMode,w
  2273  03BF  1903               	btfsc	3,2
  2274  03C0  2BC2               	goto	u2481
  2275  03C1  2BC3               	goto	u2480
  2276  03C2                     u2481:
  2277  03C2  2BCD               	goto	l3208
  2278  03C3                     u2480:
  2279  03C3                     l3204:
  2280  03C3  0337               	decf	_SeatCtrlMode_CurrentMode,w
  2281  03C4  1903               	btfsc	3,2
  2282  03C5  2BC7               	goto	u2491
  2283  03C6  2BC8               	goto	u2490
  2284  03C7                     u2491:
  2285  03C7  2BCD               	goto	l3208
  2286  03C8                     u2490:
  2287  03C8                     l3206:
  2288                           
  2289                           ;rte/Rte.c: 353:   {;rte/Rte.c: 354:    SeatManager_AutoSlide();
  2290  03C8  120A  118A  2517  120A  118A  	fcall	_SeatManager_AutoSlide
  2291  03CD                     l3208:
  2292                           
  2293                           ;rte/Rte.c: 358:  TaskCounter = (TaskCounter + 1) % 2;
  2294  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2295  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2296  03CF  0836               	movf	CyclicTask@TaskCounter,w
  2297  03D0  3E01               	addlw	1
  2298  03D1  3901               	andlw	1
  2299  03D2  00FF               	movwf	btemp+1
  2300  03D3  087F               	movf	btemp+1,w
  2301  03D4  00B6               	movwf	CyclicTask@TaskCounter
  2302  03D5                     l3210:
  2303                           
  2304                           ;rte/Rte.c: 360:  Os_TerminateTask();
  2305  03D5  120A  118A  27FC  120A  118A  	fcall	_Os_TerminateTask
  2306  03DA                     l740:
  2307  03DA  0008               	return
  2308  03DB                     __end_of_CyclicTask:
  2309                           
  2310                           	psect	text5
  2311  0517                     __ptext5:	
  2312 ;; *************** function _SeatManager_AutoSlide *****************
  2313 ;; Defined at:
  2314 ;;		line 190 in file "app/appswcs/SeatManager.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  Step            1   22[BANK0 ] unsigned char 
  2319 ;;  Position        1   21[BANK0 ] unsigned char 
  2320 ;;  Weight          1   20[BANK0 ] unsigned char 
  2321 ;;  adjustMotor     1   19[BANK0 ] unsigned char 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2331 ;;      Params:         0       0       0       0       0
  2332 ;;      Locals:         0       4       0       0       0
  2333 ;;      Temps:          0       0       0       0       0
  2334 ;;      Totals:         0       4       0       0       0
  2335 ;;Total ram usage:        4 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    9
  2338 ;; This function calls:
  2339 ;;		_IsMotorAdjustNeeded
  2340 ;;		_Rte_Call_SeatManager_rpSlideMotor_Move
  2341 ;;		_Rte_Call_SeatManager_rpSlideSensor_GetPosition
  2342 ;;		_Rte_Call_SeatManager_rpWeightSensor_GetWeight
  2343 ;; This function is called by:
  2344 ;;		_CyclicTask
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           
  2349                           ;psect for function _SeatManager_AutoSlide
  2350  0517                     _SeatManager_AutoSlide:
  2351  0517                     l3154:	
  2352                           ;incstack = 0
  2353 ;; hardware stack exceeded
  2354                           ; Regs used in _SeatManager_AutoSlide: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  2355                           
  2356                           
  2357                           ;app/appswcs/SeatManager.c: 192:  StepMotorStepType Step;;app/appswcs/SeatManager.c: 193
      +                          :  SensorPositionType Position;;app/appswcs/SeatManager.c: 194:  SensorWeightType Weight
      +                          ;;app/appswcs/SeatManager.c: 195:  boolean adjustMotor;;app/appswcs/SeatManager.c: 197: 
      +                           (void)Rte_Call_SeatManager_rpSlideSensor_GetPosition(&Position);
  2358  0517  305B               	movlw	(low (SeatManager_AutoSlide@Position| 0))& (0+255)
  2359  0518  120A  118A  2770  120A  118A  	fcall	_Rte_Call_SeatManager_rpSlideSensor_GetPosition
  2360                           
  2361                           ;app/appswcs/SeatManager.c: 198:  (void)Rte_Call_SeatManager_rpWeightSensor_GetWeight(&W
      +                          eight);
  2362  051D  305A               	movlw	(low (SeatManager_AutoSlide@Weight| 0))& (0+255)
  2363  051E  120A  118A  27C0  120A  118A  	fcall	_Rte_Call_SeatManager_rpWeightSensor_GetWeight
  2364                           
  2365                           ;app/appswcs/SeatManager.c: 200:  adjustMotor = IsMotorAdjustNeeded(Position, Weight, &S
      +                          tep);
  2366  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2367  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2368  0525  085A               	movf	SeatManager_AutoSlide@Weight,w
  2369  0526  00FF               	movwf	btemp+1
  2370  0527  087F               	movf	btemp+1,w
  2371  0528  00C6               	movwf	IsMotorAdjustNeeded@Weight
  2372  0529  305C               	movlw	(low (SeatManager_AutoSlide@Step| 0))& (0+255)
  2373  052A  00FF               	movwf	btemp+1
  2374  052B  087F               	movf	btemp+1,w
  2375  052C  00C7               	movwf	IsMotorAdjustNeeded@Step
  2376  052D  085B               	movf	SeatManager_AutoSlide@Position,w
  2377  052E  120A  118A  21FF  120A  118A  	fcall	_IsMotorAdjustNeeded
  2378  0533  00FF               	movwf	btemp+1
  2379  0534  087F               	movf	btemp+1,w
  2380  0535  1283               	bcf	3,5	;RP0=0, select bank0
  2381  0536  1303               	bcf	3,6	;RP1=0, select bank0
  2382  0537  00D9               	movwf	SeatManager_AutoSlide@adjustMotor
  2383  0538                     l3156:
  2384                           
  2385                           ;app/appswcs/SeatManager.c: 201:  if(adjustMotor)
  2386  0538  0859               	movf	SeatManager_AutoSlide@adjustMotor,w
  2387  0539  1903               	btfsc	3,2
  2388  053A  2D3C               	goto	u2391
  2389  053B  2D3D               	goto	u2390
  2390  053C                     u2391:
  2391  053C  2D43               	goto	l151
  2392  053D                     u2390:
  2393  053D                     l3158:
  2394                           
  2395                           ;app/appswcs/SeatManager.c: 202:  {;app/appswcs/SeatManager.c: 203:   (void)Rte_Call_Sea
      +                          tManager_rpSlideMotor_Move(Step);
  2396  053D  085C               	movf	SeatManager_AutoSlide@Step,w
  2397  053E  120A  118A  2784  120A  118A  	fcall	_Rte_Call_SeatManager_rpSlideMotor_Move
  2398  0543                     l151:
  2399  0543  0008               	return
  2400  0544                     __end_of_SeatManager_AutoSlide:
  2401                           
  2402                           	psect	text6
  2403  0770                     __ptext6:	
  2404 ;; *************** function _Rte_Call_SeatManager_rpSlideSensor_GetPosition *****************
  2405 ;; Defined at:
  2406 ;;		line 268 in file "rte/Rte.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  Position        1    wreg     PTR unsigned char 
  2409 ;;		 -> SeatManager_AutoSlide@Position(1), 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  Position        1   18[BANK0 ] PTR unsigned char 
  2412 ;;		 -> SeatManager_AutoSlide@Position(1), 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      unsigned char 
  2415 ;; Registers used:
  2416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2422 ;;      Params:         0       0       0       0       0
  2423 ;;      Locals:         0       1       0       0       0
  2424 ;;      Temps:          0       0       0       0       0
  2425 ;;      Totals:         0       1       0       0       0
  2426 ;;Total ram usage:        1 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    8
  2429 ;; This function calls:
  2430 ;;		_SlideSensor_GetPosition
  2431 ;; This function is called by:
  2432 ;;		_SeatManager_AutoSlide
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           
  2437                           ;psect for function _Rte_Call_SeatManager_rpSlideSensor_GetPosition
  2438  0770                     _Rte_Call_SeatManager_rpSlideSensor_GetPosition:
  2439                           
  2440                           ;incstack = 0
  2441 ;; hardware stack exceeded
  2442                           ; Regs used in _Rte_Call_SeatManager_rpSlideSensor_GetPosition: [wreg-fsr0h+status,2+sta
      +                          tus,0+btemp+1+pclath+cstack]
  2443                           ;Rte_Call_SeatManager_rpSlideSensor_GetPosition@Position stored from wreg
  2444  0770  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0771  1303               	bcf	3,6	;RP1=0, select bank0
  2446  0772  00D8               	movwf	Rte_Call_SeatManager_rpSlideSensor_GetPosition@Position
  2447  0773                     l3140:
  2448                           
  2449                           ;rte/Rte.c: 268: Std_ReturnType Rte_Call_SeatManager_rpSlideSensor_GetPosition(SensorPos
      +                          itionType* Position);rte/Rte.c: 269: {;rte/Rte.c: 270:  SlideSensor_GetPosition(Position
      +                          );
  2450  0773  0858               	movf	Rte_Call_SeatManager_rpSlideSensor_GetPosition@Position,w
  2451  0774  120A  118A  23DB  120A  118A  	fcall	_SlideSensor_GetPosition
  2452  0779                     l707:
  2453  0779  0008               	return
  2454  077A                     __end_of_Rte_Call_SeatManager_rpSlideSensor_GetPosition:
  2455                           
  2456                           	psect	text7
  2457  03DB                     __ptext7:	
  2458 ;; *************** function _SlideSensor_GetPosition *****************
  2459 ;; Defined at:
  2460 ;;		line 25 in file "app/sensors_actuators/SlideSensor.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  Position        1    wreg     PTR unsigned char 
  2463 ;;		 -> SeatManager_AutoSlide@Position(1), 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  Position        1   16[BANK0 ] PTR unsigned char 
  2466 ;;		 -> SeatManager_AutoSlide@Position(1), 
  2467 ;;  position        1   17[BANK0 ] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2477 ;;      Params:         0       0       0       0       0
  2478 ;;      Locals:         0       2       0       0       0
  2479 ;;      Temps:          0       0       0       0       0
  2480 ;;      Totals:         0       2       0       0       0
  2481 ;;Total ram usage:        2 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    7
  2484 ;; This function calls:
  2485 ;;		_Rte_Call_SlideSensor_rpIOGetSlide_IOGet
  2486 ;; This function is called by:
  2487 ;;		_Rte_Call_SeatManager_rpSlideSensor_GetPosition
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           
  2492                           ;psect for function _SlideSensor_GetPosition
  2493  03DB                     _SlideSensor_GetPosition:
  2494                           
  2495                           ;incstack = 0
  2496 ;; hardware stack exceeded
  2497                           ; Regs used in _SlideSensor_GetPosition: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  2498                           ;SlideSensor_GetPosition@Position stored from wreg
  2499  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2500  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2501  03DD  00D6               	movwf	SlideSensor_GetPosition@Position
  2502  03DE                     l3038:
  2503                           
  2504                           ;app/sensors_actuators/SlideSensor.c: 25: void SlideSensor_GetPosition (SensorPositionTy
      +                          pe* Position);app/sensors_actuators/SlideSensor.c: 26: {;app/sensors_actuators/SlideSens
      +                          or.c: 27:  IoPositionSensorReadingType position;;app/sensors_actuators/SlideSensor.c: 30
      +                          :  (void)Rte_Call_SlideSensor_rpIOGetSlide_IOGet(&position);
  2505  03DE  3057               	movlw	(low (SlideSensor_GetPosition@position| 0))& (0+255)
  2506  03DF  120A  118A  277A  120A  118A  	fcall	_Rte_Call_SlideSensor_rpIOGetSlide_IOGet
  2507  03E4                     l3040:
  2508                           
  2509                           ;app/sensors_actuators/SlideSensor.c: 32:  if(position == 0)
  2510  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2511  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2512  03E6  0857               	movf	SlideSensor_GetPosition@position,w
  2513  03E7  1D03               	btfss	3,2
  2514  03E8  2BEA               	goto	u2251
  2515  03E9  2BEB               	goto	u2250
  2516  03EA                     u2251:
  2517  03EA  2BF0               	goto	l3044
  2518  03EB                     u2250:
  2519  03EB                     l3042:
  2520                           
  2521                           ;app/sensors_actuators/SlideSensor.c: 33:  {;app/sensors_actuators/SlideSensor.c: 34:   
      +                          *Position = 0;
  2522  03EB  0856               	movf	SlideSensor_GetPosition@Position,w
  2523  03EC  0084               	movwf	4
  2524  03ED  1383               	bcf	3,7	;select IRP bank0
  2525  03EE  0180               	clrf	0
  2526                           
  2527                           ;app/sensors_actuators/SlideSensor.c: 35:  }
  2528  03EF  2C1E               	goto	l269
  2529  03F0                     l3044:
  2530  03F0  0857               	movf	SlideSensor_GetPosition@position,w
  2531  03F1  1903               	btfsc	3,2
  2532  03F2  2BF4               	goto	u2261
  2533  03F3  2BF5               	goto	u2260
  2534  03F4                     u2261:
  2535  03F4  2C03               	goto	l3050
  2536  03F5                     u2260:
  2537  03F5                     l3046:
  2538  03F5  3041               	movlw	65
  2539  03F6  0257               	subwf	SlideSensor_GetPosition@position,w
  2540  03F7  1803               	skipnc
  2541  03F8  2BFA               	goto	u2271
  2542  03F9  2BFB               	goto	u2270
  2543  03FA                     u2271:
  2544  03FA  2C03               	goto	l3050
  2545  03FB                     u2270:
  2546  03FB                     l3048:
  2547                           
  2548                           ;app/sensors_actuators/SlideSensor.c: 37:  {;app/sensors_actuators/SlideSensor.c: 38:   
      +                          *Position = 64;
  2549  03FB  3040               	movlw	64
  2550  03FC  00FF               	movwf	btemp+1
  2551  03FD  0856               	movf	SlideSensor_GetPosition@Position,w
  2552  03FE  0084               	movwf	4
  2553  03FF  087F               	movf	btemp+1,w
  2554  0400  1383               	bcf	3,7	;select IRP bank0
  2555  0401  0080               	movwf	0
  2556                           
  2557                           ;app/sensors_actuators/SlideSensor.c: 39:  }
  2558  0402  2C1E               	goto	l269
  2559  0403                     l3050:
  2560  0403  3041               	movlw	65
  2561  0404  0257               	subwf	SlideSensor_GetPosition@position,w
  2562  0405  1C03               	skipc
  2563  0406  2C08               	goto	u2281
  2564  0407  2C09               	goto	u2280
  2565  0408                     u2281:
  2566  0408  2C17               	goto	l3056
  2567  0409                     u2280:
  2568  0409                     l3052:
  2569  0409  30C1               	movlw	193
  2570  040A  0257               	subwf	SlideSensor_GetPosition@position,w
  2571  040B  1803               	skipnc
  2572  040C  2C0E               	goto	u2291
  2573  040D  2C0F               	goto	u2290
  2574  040E                     u2291:
  2575  040E  2C17               	goto	l3056
  2576  040F                     u2290:
  2577  040F                     l3054:
  2578                           
  2579                           ;app/sensors_actuators/SlideSensor.c: 41:  {;app/sensors_actuators/SlideSensor.c: 42:   
      +                          *Position = 128;
  2580  040F  3080               	movlw	128
  2581  0410  00FF               	movwf	btemp+1
  2582  0411  0856               	movf	SlideSensor_GetPosition@Position,w
  2583  0412  0084               	movwf	4
  2584  0413  087F               	movf	btemp+1,w
  2585  0414  1383               	bcf	3,7	;select IRP bank0
  2586  0415  0080               	movwf	0
  2587                           
  2588                           ;app/sensors_actuators/SlideSensor.c: 43:  }
  2589  0416  2C1E               	goto	l269
  2590  0417                     l3056:
  2591                           
  2592                           ;app/sensors_actuators/SlideSensor.c: 45:  {;app/sensors_actuators/SlideSensor.c: 46:   
      +                          *Position = 192;
  2593  0417  30C0               	movlw	192
  2594  0418  00FF               	movwf	btemp+1
  2595  0419  0856               	movf	SlideSensor_GetPosition@Position,w
  2596  041A  0084               	movwf	4
  2597  041B  087F               	movf	btemp+1,w
  2598  041C  1383               	bcf	3,7	;select IRP bank0
  2599  041D  0080               	movwf	0
  2600  041E                     l269:
  2601  041E  0008               	return
  2602  041F                     __end_of_SlideSensor_GetPosition:
  2603                           
  2604                           	psect	text8
  2605  077A                     __ptext8:	
  2606 ;; *************** function _Rte_Call_SlideSensor_rpIOGetSlide_IOGet *****************
  2607 ;; Defined at:
  2608 ;;		line 226 in file "rte/Rte.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  position        1    wreg     PTR unsigned char 
  2611 ;;		 -> SlideSensor_GetPosition@position(1), 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  position        1   15[BANK0 ] PTR unsigned char 
  2614 ;;		 -> SlideSensor_GetPosition@position(1), 
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  1    wreg      unsigned char 
  2617 ;; Registers used:
  2618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2624 ;;      Params:         0       0       0       0       0
  2625 ;;      Locals:         0       1       0       0       0
  2626 ;;      Temps:          0       0       0       0       0
  2627 ;;      Totals:         0       1       0       0       0
  2628 ;;Total ram usage:        1 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; Hardware stack levels required when called:    6
  2631 ;; This function calls:
  2632 ;;		_IoHwAbs_ECUGet_Slide
  2633 ;; This function is called by:
  2634 ;;		_SlideSensor_GetPosition
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           
  2639                           ;psect for function _Rte_Call_SlideSensor_rpIOGetSlide_IOGet
  2640  077A                     _Rte_Call_SlideSensor_rpIOGetSlide_IOGet:
  2641                           
  2642                           ;incstack = 0
  2643 ;; hardware stack exceeded
  2644                           ; Regs used in _Rte_Call_SlideSensor_rpIOGetSlide_IOGet: [wreg-fsr0h+status,2+status,0+b
      +                          temp+1+pclath+cstack]
  2645                           ;Rte_Call_SlideSensor_rpIOGetSlide_IOGet@position stored from wreg
  2646  077A  1283               	bcf	3,5	;RP0=0, select bank0
  2647  077B  1303               	bcf	3,6	;RP1=0, select bank0
  2648  077C  00D5               	movwf	Rte_Call_SlideSensor_rpIOGetSlide_IOGet@position
  2649  077D                     l2940:
  2650                           
  2651                           ;rte/Rte.c: 226: Std_ReturnType Rte_Call_SlideSensor_rpIOGetSlide_IOGet(IoPositionSensor
      +                          ReadingType* position);rte/Rte.c: 227: {;rte/Rte.c: 228:  IoHwAbs_ECUGet_Slide(position)
      +                          ;
  2652  077D  0855               	movf	Rte_Call_SlideSensor_rpIOGetSlide_IOGet@position,w
  2653  077E  120A  118A  264E  120A  118A  	fcall	_IoHwAbs_ECUGet_Slide
  2654  0783                     l686:
  2655  0783  0008               	return
  2656  0784                     __end_of_Rte_Call_SlideSensor_rpIOGetSlide_IOGet:
  2657                           
  2658                           	psect	text9
  2659  064E                     __ptext9:	
  2660 ;; *************** function _IoHwAbs_ECUGet_Slide *****************
  2661 ;; Defined at:
  2662 ;;		line 102 in file "app/sensors_actuators/IoHwAbs.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  position        1    wreg     PTR unsigned char 
  2665 ;;		 -> SlideSensor_GetPosition@position(1), 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  position        1   14[BANK0 ] PTR unsigned char 
  2668 ;;		 -> SlideSensor_GetPosition@position(1), 
  2669 ;;  status          1   13[BANK0 ] unsigned char 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      void 
  2672 ;; Registers used:
  2673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2679 ;;      Params:         0       0       0       0       0
  2680 ;;      Locals:         0       2       0       0       0
  2681 ;;      Temps:          0       0       0       0       0
  2682 ;;      Totals:         0       2       0       0       0
  2683 ;;Total ram usage:        2 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    5
  2686 ;; This function calls:
  2687 ;;		_Adc_ReadGroup
  2688 ;; This function is called by:
  2689 ;;		_Rte_Call_SlideSensor_rpIOGetSlide_IOGet
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           
  2694                           ;psect for function _IoHwAbs_ECUGet_Slide
  2695  064E                     _IoHwAbs_ECUGet_Slide:
  2696                           
  2697                           ;incstack = 0
  2698 ;; hardware stack exceeded
  2699                           ; Regs used in _IoHwAbs_ECUGet_Slide: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2700                           ;IoHwAbs_ECUGet_Slide@position stored from wreg
  2701  064E  1283               	bcf	3,5	;RP0=0, select bank0
  2702  064F  1303               	bcf	3,6	;RP1=0, select bank0
  2703  0650  00D4               	movwf	IoHwAbs_ECUGet_Slide@position
  2704  0651                     l2884:
  2705                           
  2706                           ;app/sensors_actuators/IoHwAbs.c: 102: void IoHwAbs_ECUGet_Slide (IoPositionSensorReadin
      +                          gType* position);app/sensors_actuators/IoHwAbs.c: 103: {;app/sensors_actuators/IoHwAbs.c
      +                          : 104:  Std_ReturnType status;;app/sensors_actuators/IoHwAbs.c: 106:  status = Adc_ReadG
      +                          roup(0U, IoHwAb_PositionSensorsReadings);
  2707  0651  3043               	movlw	(low (_IoHwAb_PositionSensorsReadings| 0))& (0+255)
  2708  0652  00FF               	movwf	btemp+1
  2709  0653  087F               	movf	btemp+1,w
  2710  0654  00CE               	movwf	Adc_ReadGroup@DataBufferPtr
  2711  0655  3000               	movlw	0
  2712  0656  120A  118A  204C  120A  118A  	fcall	_Adc_ReadGroup
  2713  065B  00FF               	movwf	btemp+1
  2714  065C  087F               	movf	btemp+1,w
  2715  065D  1283               	bcf	3,5	;RP0=0, select bank0
  2716  065E  1303               	bcf	3,6	;RP1=0, select bank0
  2717  065F  00D3               	movwf	IoHwAbs_ECUGet_Slide@status
  2718  0660                     l2886:
  2719                           
  2720                           ;app/sensors_actuators/IoHwAbs.c: 108:  if(status == ((Std_ReturnType)0x00u))
  2721  0660  0853               	movf	IoHwAbs_ECUGet_Slide@status,w
  2722  0661  1D03               	btfss	3,2
  2723  0662  2E64               	goto	u2001
  2724  0663  2E65               	goto	u2000
  2725  0664                     u2001:
  2726  0664  2E6C               	goto	l224
  2727  0665                     u2000:
  2728  0665                     l2888:
  2729                           
  2730                           ;app/sensors_actuators/IoHwAbs.c: 109:  {;app/sensors_actuators/IoHwAbs.c: 112:   *posit
      +                          ion = (IoPositionSensorReadingType)IoHwAb_PositionSensorsReadings[2];
  2731  0665  0845               	movf	_IoHwAb_PositionSensorsReadings+2,w
  2732  0666  00FF               	movwf	btemp+1
  2733  0667  0854               	movf	IoHwAbs_ECUGet_Slide@position,w
  2734  0668  0084               	movwf	4
  2735  0669  087F               	movf	btemp+1,w
  2736  066A  1383               	bcf	3,7	;select IRP bank0
  2737  066B  0080               	movwf	0
  2738  066C                     l224:	
  2739                           ;app/sensors_actuators/IoHwAbs.c: 113:  }
  2740                           
  2741  066C  0008               	return
  2742  066D                     __end_of_IoHwAbs_ECUGet_Slide:
  2743                           
  2744                           	psect	text10
  2745  0784                     __ptext10:	
  2746 ;; *************** function _Rte_Call_SeatManager_rpSlideMotor_Move *****************
  2747 ;; Defined at:
  2748 ;;		line 250 in file "rte/Rte.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  Step            1    wreg     unsigned char 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  Step            1    8[BANK0 ] unsigned char 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      unsigned char 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2762 ;;      Params:         0       0       0       0       0
  2763 ;;      Locals:         0       1       0       0       0
  2764 ;;      Temps:          0       0       0       0       0
  2765 ;;      Totals:         0       1       0       0       0
  2766 ;;Total ram usage:        1 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    7
  2769 ;; This function calls:
  2770 ;;		_SlideMotor_Move
  2771 ;; This function is called by:
  2772 ;;		_SeatManager_AutoSlide
  2773 ;;		_SeatManager_SetSlide
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           
  2778                           ;psect for function _Rte_Call_SeatManager_rpSlideMotor_Move
  2779  0784                     _Rte_Call_SeatManager_rpSlideMotor_Move:
  2780                           
  2781                           ;incstack = 0
  2782 ;; hardware stack exceeded
  2783                           ; Regs used in _Rte_Call_SeatManager_rpSlideMotor_Move: [wreg-fsr0h+status,2+status,0+bt
      +                          emp+1+pclath+cstack]
  2784                           ;Rte_Call_SeatManager_rpSlideMotor_Move@Step stored from wreg
  2785  0784  1283               	bcf	3,5	;RP0=0, select bank0
  2786  0785  1303               	bcf	3,6	;RP1=0, select bank0
  2787  0786  00CE               	movwf	Rte_Call_SeatManager_rpSlideMotor_Move@Step
  2788  0787                     l3128:
  2789                           
  2790                           ;rte/Rte.c: 250: Std_ReturnType Rte_Call_SeatManager_rpSlideMotor_Move(StepMotorStepType
      +                           Step);rte/Rte.c: 251: {;rte/Rte.c: 252:  SlideMotor_Move(Step);
  2791  0787  084E               	movf	Rte_Call_SeatManager_rpSlideMotor_Move@Step,w
  2792  0788  120A  118A  26AB  120A  118A  	fcall	_SlideMotor_Move
  2793  078D                     l698:
  2794  078D  0008               	return
  2795  078E                     __end_of_Rte_Call_SeatManager_rpSlideMotor_Move:
  2796                           
  2797                           	psect	text11
  2798  06AB                     __ptext11:	
  2799 ;; *************** function _SlideMotor_Move *****************
  2800 ;; Defined at:
  2801 ;;		line 25 in file "app/sensors_actuators/SlideMotor.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  Step            1    wreg     unsigned char 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  Step            1    7[BANK0 ] unsigned char 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2815 ;;      Params:         0       0       0       0       0
  2816 ;;      Locals:         0       1       0       0       0
  2817 ;;      Temps:          0       0       0       0       0
  2818 ;;      Totals:         0       1       0       0       0
  2819 ;;Total ram usage:        1 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    6
  2822 ;; This function calls:
  2823 ;;		_Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward
  2824 ;;		_Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse
  2825 ;; This function is called by:
  2826 ;;		_Rte_Call_SeatManager_rpSlideMotor_Move
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           
  2831                           ;psect for function _SlideMotor_Move
  2832  06AB                     _SlideMotor_Move:
  2833                           
  2834                           ;incstack = 0
  2835 ;; hardware stack exceeded
  2836                           ; Regs used in _SlideMotor_Move: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2837                           ;SlideMotor_Move@Step stored from wreg
  2838  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  2839  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  2840  06AD  00CD               	movwf	SlideMotor_Move@Step
  2841  06AE                     l3030:
  2842                           
  2843                           ;app/sensors_actuators/SlideMotor.c: 25: void SlideMotor_Move (StepMotorStepType Step);a
      +                          pp/sensors_actuators/SlideMotor.c: 26: {;app/sensors_actuators/SlideMotor.c: 27:  if(Ste
      +                          p == 0)
  2844  06AE  084D               	movf	SlideMotor_Move@Step,w
  2845  06AF  1D03               	btfss	3,2
  2846  06B0  2EB2               	goto	u2231
  2847  06B1  2EB3               	goto	u2230
  2848  06B2                     u2231:
  2849  06B2  2EB9               	goto	l3034
  2850  06B3                     u2230:
  2851  06B3                     l3032:
  2852                           
  2853                           ;app/sensors_actuators/SlideMotor.c: 28:  {;app/sensors_actuators/SlideMotor.c: 29:   (v
      +                          oid)Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward();
  2854  06B3  120A  158A  27DB  120A  118A  	fcall	_Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward
  2855                           
  2856                           ;app/sensors_actuators/SlideMotor.c: 30:  }
  2857  06B8  2EC3               	goto	l258
  2858  06B9                     l3034:
  2859  06B9  034D               	decf	SlideMotor_Move@Step,w
  2860  06BA  1D03               	btfss	3,2
  2861  06BB  2EBD               	goto	u2241
  2862  06BC  2EBE               	goto	u2240
  2863  06BD                     u2241:
  2864  06BD  2EC3               	goto	l258
  2865  06BE                     u2240:
  2866  06BE                     l3036:
  2867                           
  2868                           ;app/sensors_actuators/SlideMotor.c: 32:  {;app/sensors_actuators/SlideMotor.c: 33:   (v
      +                          oid)Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse();
  2869  06BE  120A  158A  27E1  120A  118A  	fcall	_Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse
  2870  06C3                     l258:	
  2871                           ;app/sensors_actuators/SlideMotor.c: 34:  }
  2872                           
  2873  06C3  0008               	return
  2874  06C4                     __end_of_SlideMotor_Move:
  2875                           
  2876                           	psect	text12
  2877  0FE1                     __ptext12:	
  2878 ;; *************** function _Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse *****************
  2879 ;; Defined at:
  2880 ;;		line 208 in file "rte/Rte.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      unsigned char 
  2887 ;; Registers used:
  2888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2894 ;;      Params:         0       0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0
  2897 ;;      Totals:         0       0       0       0       0
  2898 ;;Total ram usage:        0 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    5
  2901 ;; This function calls:
  2902 ;;		_IoHwAbs_ECUSetReverse_Slide
  2903 ;; This function is called by:
  2904 ;;		_SlideMotor_Move
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           
  2909                           ;psect for function _Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse
  2910  0FE1                     _Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse:
  2911  0FE1                     l2936:	
  2912                           ;incstack = 0
  2913 ;; hardware stack exceeded
  2914                           ; Regs used in _Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse: [wreg-fsr0h+status,2+stat
      +                          us,0+btemp+1+pclath+cstack]
  2915                           
  2916                           
  2917                           ;rte/Rte.c: 210:  IoHwAbs_ECUSetReverse_Slide();
  2918  0FE1  120A  118A  278E  120A  158A  	fcall	_IoHwAbs_ECUSetReverse_Slide
  2919  0FE6                     l677:
  2920  0FE6  0008               	return
  2921  0FE7                     __end_of_Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse:
  2922                           
  2923                           	psect	text13
  2924  078E                     __ptext13:	
  2925 ;; *************** function _IoHwAbs_ECUSetReverse_Slide *****************
  2926 ;; Defined at:
  2927 ;;		line 239 in file "app/sensors_actuators/IoHwAbs.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;		None
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2941 ;;      Params:         0       0       0       0       0
  2942 ;;      Locals:         0       0       0       0       0
  2943 ;;      Temps:          0       0       0       0       0
  2944 ;;      Totals:         0       0       0       0       0
  2945 ;;Total ram usage:        0 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    4
  2948 ;; This function calls:
  2949 ;;		_Dio_WriteChannel
  2950 ;; This function is called by:
  2951 ;;		_Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _IoHwAbs_ECUSetReverse_Slide
  2957  078E                     _IoHwAbs_ECUSetReverse_Slide:
  2958  078E                     l2906:	
  2959                           ;incstack = 0
  2960 ;; hardware stack exceeded
  2961                           ; Regs used in _IoHwAbs_ECUSetReverse_Slide: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  2962                           
  2963                           
  2964                           ;app/sensors_actuators/IoHwAbs.c: 242:  Dio_WriteChannel(DioConfg_DioChannel_SlideMotorC
      +                          h, 0x00u);
  2965  078E  1283               	bcf	3,5	;RP0=0, select bank0
  2966  078F  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0790  01C6               	clrf	Dio_WriteChannel@Level
  2968  0791  3002               	movlw	2
  2969  0792  120A  118A  22B7  120A  118A  	fcall	_Dio_WriteChannel
  2970  0797                     l247:
  2971  0797  0008               	return
  2972  0798                     __end_of_IoHwAbs_ECUSetReverse_Slide:
  2973                           
  2974                           	psect	text14
  2975  0FDB                     __ptext14:	
  2976 ;; *************** function _Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward *****************
  2977 ;; Defined at:
  2978 ;;		line 202 in file "rte/Rte.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      unsigned char 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2992 ;;      Params:         0       0       0       0       0
  2993 ;;      Locals:         0       0       0       0       0
  2994 ;;      Temps:          0       0       0       0       0
  2995 ;;      Totals:         0       0       0       0       0
  2996 ;;Total ram usage:        0 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    5
  2999 ;; This function calls:
  3000 ;;		_IoHwAbs_ECUSetForward_Slide
  3001 ;; This function is called by:
  3002 ;;		_SlideMotor_Move
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           
  3007                           ;psect for function _Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward
  3008  0FDB                     _Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward:
  3009  0FDB                     l2932:	
  3010                           ;incstack = 0
  3011 ;; hardware stack exceeded
  3012                           ; Regs used in _Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward: [wreg-fsr0h+status,2+stat
      +                          us,0+btemp+1+pclath+cstack]
  3013                           
  3014                           
  3015                           ;rte/Rte.c: 204:  IoHwAbs_ECUSetForward_Slide();
  3016  0FDB  120A  118A  274F  120A  158A  	fcall	_IoHwAbs_ECUSetForward_Slide
  3017  0FE0                     l674:
  3018  0FE0  0008               	return
  3019  0FE1                     __end_of_Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward:
  3020                           
  3021                           	psect	text15
  3022  074F                     __ptext15:	
  3023 ;; *************** function _IoHwAbs_ECUSetForward_Slide *****************
  3024 ;; Defined at:
  3025 ;;		line 191 in file "app/sensors_actuators/IoHwAbs.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3039 ;;      Params:         0       0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0
  3042 ;;      Totals:         0       0       0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    4
  3046 ;; This function calls:
  3047 ;;		_Dio_WriteChannel
  3048 ;; This function is called by:
  3049 ;;		_Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _IoHwAbs_ECUSetForward_Slide
  3055  074F                     _IoHwAbs_ECUSetForward_Slide:
  3056  074F                     l2900:	
  3057                           ;incstack = 0
  3058 ;; hardware stack exceeded
  3059                           ; Regs used in _IoHwAbs_ECUSetForward_Slide: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  3060                           
  3061                           
  3062                           ;app/sensors_actuators/IoHwAbs.c: 194:  Dio_WriteChannel(DioConfg_DioChannel_SlideMotorC
      +                          h, 0x01u);
  3063  074F  1283               	bcf	3,5	;RP0=0, select bank0
  3064  0750  1303               	bcf	3,6	;RP1=0, select bank0
  3065  0751  01C6               	clrf	Dio_WriteChannel@Level
  3066  0752  0AC6               	incf	Dio_WriteChannel@Level,f
  3067  0753  3002               	movlw	2
  3068  0754  120A  118A  22B7  120A  118A  	fcall	_Dio_WriteChannel
  3069  0759                     l238:
  3070  0759  0008               	return
  3071  075A                     __end_of_IoHwAbs_ECUSetForward_Slide:
  3072                           
  3073                           	psect	text16
  3074  0544                     __ptext16:	
  3075 ;; *************** function _SeatManager_AutoIncline *****************
  3076 ;; Defined at:
  3077 ;;		line 217 in file "app/appswcs/SeatManager.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  Step            1   22[BANK0 ] unsigned char 
  3082 ;;  Position        1   21[BANK0 ] unsigned char 
  3083 ;;  Weight          1   20[BANK0 ] unsigned char 
  3084 ;;  adjustMotor     1   19[BANK0 ] unsigned char 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3094 ;;      Params:         0       0       0       0       0
  3095 ;;      Locals:         0       4       0       0       0
  3096 ;;      Temps:          0       0       0       0       0
  3097 ;;      Totals:         0       4       0       0       0
  3098 ;;Total ram usage:        4 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    9
  3101 ;; This function calls:
  3102 ;;		_IsMotorAdjustNeeded
  3103 ;;		_Rte_Call_SeatManager_rpInclineMotor_Move
  3104 ;;		_Rte_Call_SeatManager_rpInclineSensor_GetPosition
  3105 ;;		_Rte_Call_SeatManager_rpWeightSensor_GetWeight
  3106 ;; This function is called by:
  3107 ;;		_CyclicTask
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           
  3112                           ;psect for function _SeatManager_AutoIncline
  3113  0544                     _SeatManager_AutoIncline:
  3114  0544                     l3160:	
  3115                           ;incstack = 0
  3116 ;; hardware stack exceeded
  3117                           ; Regs used in _SeatManager_AutoIncline: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  3118                           
  3119                           
  3120                           ;app/appswcs/SeatManager.c: 219:  StepMotorStepType Step;;app/appswcs/SeatManager.c: 220
      +                          :  SensorPositionType Position;;app/appswcs/SeatManager.c: 221:  SensorWeightType Weight
      +                          ;;app/appswcs/SeatManager.c: 222:  boolean adjustMotor;;app/appswcs/SeatManager.c: 224: 
      +                           (void)Rte_Call_SeatManager_rpInclineSensor_GetPosition(&Position);
  3121  0544  305B               	movlw	(low (SeatManager_AutoIncline@Position| 0))& (0+255)
  3122  0545  120A  118A  2798  120A  118A  	fcall	_Rte_Call_SeatManager_rpInclineSensor_GetPosition
  3123                           
  3124                           ;app/appswcs/SeatManager.c: 225:  (void)Rte_Call_SeatManager_rpWeightSensor_GetWeight(&W
      +                          eight);
  3125  054A  305A               	movlw	(low (SeatManager_AutoIncline@Weight| 0))& (0+255)
  3126  054B  120A  118A  27C0  120A  118A  	fcall	_Rte_Call_SeatManager_rpWeightSensor_GetWeight
  3127                           
  3128                           ;app/appswcs/SeatManager.c: 227:  adjustMotor = IsMotorAdjustNeeded(Position, Weight, &S
      +                          tep);
  3129  0550  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0551  1303               	bcf	3,6	;RP1=0, select bank0
  3131  0552  085A               	movf	SeatManager_AutoIncline@Weight,w
  3132  0553  00FF               	movwf	btemp+1
  3133  0554  087F               	movf	btemp+1,w
  3134  0555  00C6               	movwf	IsMotorAdjustNeeded@Weight
  3135  0556  305C               	movlw	(low (SeatManager_AutoIncline@Step| 0))& (0+255)
  3136  0557  00FF               	movwf	btemp+1
  3137  0558  087F               	movf	btemp+1,w
  3138  0559  00C7               	movwf	IsMotorAdjustNeeded@Step
  3139  055A  085B               	movf	SeatManager_AutoIncline@Position,w
  3140  055B  120A  118A  21FF  120A  118A  	fcall	_IsMotorAdjustNeeded
  3141  0560  00FF               	movwf	btemp+1
  3142  0561  087F               	movf	btemp+1,w
  3143  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3144  0563  1303               	bcf	3,6	;RP1=0, select bank0
  3145  0564  00D9               	movwf	SeatManager_AutoIncline@adjustMotor
  3146  0565                     l3162:
  3147                           
  3148                           ;app/appswcs/SeatManager.c: 228:  if(adjustMotor)
  3149  0565  0859               	movf	SeatManager_AutoIncline@adjustMotor,w
  3150  0566  1903               	btfsc	3,2
  3151  0567  2D69               	goto	u2401
  3152  0568  2D6A               	goto	u2400
  3153  0569                     u2401:
  3154  0569  2D70               	goto	l155
  3155  056A                     u2400:
  3156  056A                     l3164:
  3157                           
  3158                           ;app/appswcs/SeatManager.c: 229:  {;app/appswcs/SeatManager.c: 230:   (void)Rte_Call_Sea
      +                          tManager_rpInclineMotor_Move(Step);
  3159  056A  085C               	movf	SeatManager_AutoIncline@Step,w
  3160  056B  120A  118A  27AC  120A  118A  	fcall	_Rte_Call_SeatManager_rpInclineMotor_Move
  3161  0570                     l155:
  3162  0570  0008               	return
  3163  0571                     __end_of_SeatManager_AutoIncline:
  3164                           
  3165                           	psect	text17
  3166  0798                     __ptext17:	
  3167 ;; *************** function _Rte_Call_SeatManager_rpInclineSensor_GetPosition *****************
  3168 ;; Defined at:
  3169 ;;		line 262 in file "rte/Rte.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  Position        1    wreg     PTR unsigned char 
  3172 ;;		 -> SeatManager_AutoIncline@Position(1), 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  Position        1   18[BANK0 ] PTR unsigned char 
  3175 ;;		 -> SeatManager_AutoIncline@Position(1), 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      unsigned char 
  3178 ;; Registers used:
  3179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3185 ;;      Params:         0       0       0       0       0
  3186 ;;      Locals:         0       1       0       0       0
  3187 ;;      Temps:          0       0       0       0       0
  3188 ;;      Totals:         0       1       0       0       0
  3189 ;;Total ram usage:        1 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    8
  3192 ;; This function calls:
  3193 ;;		_InclineSensor_GetPosition
  3194 ;; This function is called by:
  3195 ;;		_SeatManager_AutoIncline
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           
  3200                           ;psect for function _Rte_Call_SeatManager_rpInclineSensor_GetPosition
  3201  0798                     _Rte_Call_SeatManager_rpInclineSensor_GetPosition:
  3202                           
  3203                           ;incstack = 0
  3204 ;; hardware stack exceeded
  3205                           ; Regs used in _Rte_Call_SeatManager_rpInclineSensor_GetPosition: [wreg-fsr0h+status,2+s
      +                          tatus,0+btemp+1+pclath+cstack]
  3206                           ;Rte_Call_SeatManager_rpInclineSensor_GetPosition@Position stored from wreg
  3207  0798  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0799  1303               	bcf	3,6	;RP1=0, select bank0
  3209  079A  00D8               	movwf	Rte_Call_SeatManager_rpInclineSensor_GetPosition@Position
  3210  079B                     l3144:
  3211                           
  3212                           ;rte/Rte.c: 262: Std_ReturnType Rte_Call_SeatManager_rpInclineSensor_GetPosition(SensorP
      +                          ositionType* Position);rte/Rte.c: 263: {;rte/Rte.c: 264:  InclineSensor_GetPosition(Posi
      +                          tion);
  3213  079B  0858               	movf	Rte_Call_SeatManager_rpInclineSensor_GetPosition@Position,w
  3214  079C  120A  118A  241F  120A  118A  	fcall	_InclineSensor_GetPosition
  3215  07A1                     l704:
  3216  07A1  0008               	return
  3217  07A2                     __end_of_Rte_Call_SeatManager_rpInclineSensor_GetPosition:
  3218                           
  3219                           	psect	text18
  3220  041F                     __ptext18:	
  3221 ;; *************** function _InclineSensor_GetPosition *****************
  3222 ;; Defined at:
  3223 ;;		line 25 in file "app/sensors_actuators/InclineSensor.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  Position        1    wreg     PTR unsigned char 
  3226 ;;		 -> SeatManager_AutoIncline@Position(1), 
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;  Position        1   16[BANK0 ] PTR unsigned char 
  3229 ;;		 -> SeatManager_AutoIncline@Position(1), 
  3230 ;;  position        1   17[BANK0 ] unsigned char 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3240 ;;      Params:         0       0       0       0       0
  3241 ;;      Locals:         0       2       0       0       0
  3242 ;;      Temps:          0       0       0       0       0
  3243 ;;      Totals:         0       2       0       0       0
  3244 ;;Total ram usage:        2 bytes
  3245 ;; Hardware stack levels used:    1
  3246 ;; Hardware stack levels required when called:    7
  3247 ;; This function calls:
  3248 ;;		_Rte_Call_InclineSensor_rpIOGetIncline_IOGet
  3249 ;; This function is called by:
  3250 ;;		_Rte_Call_SeatManager_rpInclineSensor_GetPosition
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           
  3255                           ;psect for function _InclineSensor_GetPosition
  3256  041F                     _InclineSensor_GetPosition:
  3257                           
  3258                           ;incstack = 0
  3259 ;; hardware stack exceeded
  3260                           ; Regs used in _InclineSensor_GetPosition: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  3261                           ;InclineSensor_GetPosition@Position stored from wreg
  3262  041F  1283               	bcf	3,5	;RP0=0, select bank0
  3263  0420  1303               	bcf	3,6	;RP1=0, select bank0
  3264  0421  00D6               	movwf	InclineSensor_GetPosition@Position
  3265  0422                     l3010:
  3266                           
  3267                           ;app/sensors_actuators/InclineSensor.c: 25: void InclineSensor_GetPosition (SensorPositi
      +                          onType* Position);app/sensors_actuators/InclineSensor.c: 26: {;app/sensors_actuators/Inc
      +                          lineSensor.c: 27:  IoPositionSensorReadingType position;;app/sensors_actuators/InclineSe
      +                          nsor.c: 30:  (void)Rte_Call_InclineSensor_rpIOGetIncline_IOGet(&position);
  3268  0422  3057               	movlw	(low (InclineSensor_GetPosition@position| 0))& (0+255)
  3269  0423  120A  118A  27A2  120A  118A  	fcall	_Rte_Call_InclineSensor_rpIOGetIncline_IOGet
  3270  0428                     l3012:
  3271                           
  3272                           ;app/sensors_actuators/InclineSensor.c: 32:  if(position == 0)
  3273  0428  1283               	bcf	3,5	;RP0=0, select bank0
  3274  0429  1303               	bcf	3,6	;RP1=0, select bank0
  3275  042A  0857               	movf	InclineSensor_GetPosition@position,w
  3276  042B  1D03               	btfss	3,2
  3277  042C  2C2E               	goto	u2181
  3278  042D  2C2F               	goto	u2180
  3279  042E                     u2181:
  3280  042E  2C34               	goto	l3016
  3281  042F                     u2180:
  3282  042F                     l3014:
  3283                           
  3284                           ;app/sensors_actuators/InclineSensor.c: 33:  {;app/sensors_actuators/InclineSensor.c: 34
      +                          :   *Position = 0;
  3285  042F  0856               	movf	InclineSensor_GetPosition@Position,w
  3286  0430  0084               	movwf	4
  3287  0431  1383               	bcf	3,7	;select IRP bank0
  3288  0432  0180               	clrf	0
  3289                           
  3290                           ;app/sensors_actuators/InclineSensor.c: 35:  }
  3291  0433  2C62               	goto	l199
  3292  0434                     l3016:
  3293  0434  0857               	movf	InclineSensor_GetPosition@position,w
  3294  0435  1903               	btfsc	3,2
  3295  0436  2C38               	goto	u2191
  3296  0437  2C39               	goto	u2190
  3297  0438                     u2191:
  3298  0438  2C47               	goto	l3022
  3299  0439                     u2190:
  3300  0439                     l3018:
  3301  0439  3041               	movlw	65
  3302  043A  0257               	subwf	InclineSensor_GetPosition@position,w
  3303  043B  1803               	skipnc
  3304  043C  2C3E               	goto	u2201
  3305  043D  2C3F               	goto	u2200
  3306  043E                     u2201:
  3307  043E  2C47               	goto	l3022
  3308  043F                     u2200:
  3309  043F                     l3020:
  3310                           
  3311                           ;app/sensors_actuators/InclineSensor.c: 37:  {;app/sensors_actuators/InclineSensor.c: 38
      +                          :   *Position = 64;
  3312  043F  3040               	movlw	64
  3313  0440  00FF               	movwf	btemp+1
  3314  0441  0856               	movf	InclineSensor_GetPosition@Position,w
  3315  0442  0084               	movwf	4
  3316  0443  087F               	movf	btemp+1,w
  3317  0444  1383               	bcf	3,7	;select IRP bank0
  3318  0445  0080               	movwf	0
  3319                           
  3320                           ;app/sensors_actuators/InclineSensor.c: 39:  }
  3321  0446  2C62               	goto	l199
  3322  0447                     l3022:
  3323  0447  3041               	movlw	65
  3324  0448  0257               	subwf	InclineSensor_GetPosition@position,w
  3325  0449  1C03               	skipc
  3326  044A  2C4C               	goto	u2211
  3327  044B  2C4D               	goto	u2210
  3328  044C                     u2211:
  3329  044C  2C5B               	goto	l3028
  3330  044D                     u2210:
  3331  044D                     l3024:
  3332  044D  30C1               	movlw	193
  3333  044E  0257               	subwf	InclineSensor_GetPosition@position,w
  3334  044F  1803               	skipnc
  3335  0450  2C52               	goto	u2221
  3336  0451  2C53               	goto	u2220
  3337  0452                     u2221:
  3338  0452  2C5B               	goto	l3028
  3339  0453                     u2220:
  3340  0453                     l3026:
  3341                           
  3342                           ;app/sensors_actuators/InclineSensor.c: 41:  {;app/sensors_actuators/InclineSensor.c: 42
      +                          :   *Position = 128;
  3343  0453  3080               	movlw	128
  3344  0454  00FF               	movwf	btemp+1
  3345  0455  0856               	movf	InclineSensor_GetPosition@Position,w
  3346  0456  0084               	movwf	4
  3347  0457  087F               	movf	btemp+1,w
  3348  0458  1383               	bcf	3,7	;select IRP bank0
  3349  0459  0080               	movwf	0
  3350                           
  3351                           ;app/sensors_actuators/InclineSensor.c: 43:  }
  3352  045A  2C62               	goto	l199
  3353  045B                     l3028:
  3354                           
  3355                           ;app/sensors_actuators/InclineSensor.c: 45:  {;app/sensors_actuators/InclineSensor.c: 46
      +                          :   *Position = 192;
  3356  045B  30C0               	movlw	192
  3357  045C  00FF               	movwf	btemp+1
  3358  045D  0856               	movf	InclineSensor_GetPosition@Position,w
  3359  045E  0084               	movwf	4
  3360  045F  087F               	movf	btemp+1,w
  3361  0460  1383               	bcf	3,7	;select IRP bank0
  3362  0461  0080               	movwf	0
  3363  0462                     l199:
  3364  0462  0008               	return
  3365  0463                     __end_of_InclineSensor_GetPosition:
  3366                           
  3367                           	psect	text19
  3368  07A2                     __ptext19:	
  3369 ;; *************** function _Rte_Call_InclineSensor_rpIOGetIncline_IOGet *****************
  3370 ;; Defined at:
  3371 ;;		line 220 in file "rte/Rte.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  position        1    wreg     PTR unsigned char 
  3374 ;;		 -> InclineSensor_GetPosition@position(1), 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  position        1   15[BANK0 ] PTR unsigned char 
  3377 ;;		 -> InclineSensor_GetPosition@position(1), 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      unsigned char 
  3380 ;; Registers used:
  3381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3387 ;;      Params:         0       0       0       0       0
  3388 ;;      Locals:         0       1       0       0       0
  3389 ;;      Temps:          0       0       0       0       0
  3390 ;;      Totals:         0       1       0       0       0
  3391 ;;Total ram usage:        1 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    6
  3394 ;; This function calls:
  3395 ;;		_IoHwAbs_ECUGet_Incline
  3396 ;; This function is called by:
  3397 ;;		_InclineSensor_GetPosition
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           
  3402                           ;psect for function _Rte_Call_InclineSensor_rpIOGetIncline_IOGet
  3403  07A2                     _Rte_Call_InclineSensor_rpIOGetIncline_IOGet:
  3404                           
  3405                           ;incstack = 0
  3406 ;; hardware stack exceeded
  3407                           ; Regs used in _Rte_Call_InclineSensor_rpIOGetIncline_IOGet: [wreg-fsr0h+status,2+status
      +                          ,0+btemp+1+pclath+cstack]
  3408                           ;Rte_Call_InclineSensor_rpIOGetIncline_IOGet@position stored from wreg
  3409  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  3410  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  3411  07A4  00D5               	movwf	Rte_Call_InclineSensor_rpIOGetIncline_IOGet@position
  3412  07A5                     l2928:
  3413                           
  3414                           ;rte/Rte.c: 220: Std_ReturnType Rte_Call_InclineSensor_rpIOGetIncline_IOGet(IoPositionSe
      +                          nsorReadingType* position);rte/Rte.c: 221: {;rte/Rte.c: 222:  IoHwAbs_ECUGet_Incline(pos
      +                          ition);
  3415  07A5  0855               	movf	Rte_Call_InclineSensor_rpIOGetIncline_IOGet@position,w
  3416  07A6  120A  118A  266D  120A  118A  	fcall	_IoHwAbs_ECUGet_Incline
  3417  07AB                     l683:
  3418  07AB  0008               	return
  3419  07AC                     __end_of_Rte_Call_InclineSensor_rpIOGetIncline_IOGet:
  3420                           
  3421                           	psect	text20
  3422  066D                     __ptext20:	
  3423 ;; *************** function _IoHwAbs_ECUGet_Incline *****************
  3424 ;; Defined at:
  3425 ;;		line 74 in file "app/sensors_actuators/IoHwAbs.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  position        1    wreg     PTR unsigned char 
  3428 ;;		 -> InclineSensor_GetPosition@position(1), 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  position        1   14[BANK0 ] PTR unsigned char 
  3431 ;;		 -> InclineSensor_GetPosition@position(1), 
  3432 ;;  status          1   13[BANK0 ] unsigned char 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3442 ;;      Params:         0       0       0       0       0
  3443 ;;      Locals:         0       2       0       0       0
  3444 ;;      Temps:          0       0       0       0       0
  3445 ;;      Totals:         0       2       0       0       0
  3446 ;;Total ram usage:        2 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    5
  3449 ;; This function calls:
  3450 ;;		_Adc_ReadGroup
  3451 ;; This function is called by:
  3452 ;;		_Rte_Call_InclineSensor_rpIOGetIncline_IOGet
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           
  3457                           ;psect for function _IoHwAbs_ECUGet_Incline
  3458  066D                     _IoHwAbs_ECUGet_Incline:
  3459                           
  3460                           ;incstack = 0
  3461 ;; hardware stack exceeded
  3462                           ; Regs used in _IoHwAbs_ECUGet_Incline: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3463                           ;IoHwAbs_ECUGet_Incline@position stored from wreg
  3464  066D  1283               	bcf	3,5	;RP0=0, select bank0
  3465  066E  1303               	bcf	3,6	;RP1=0, select bank0
  3466  066F  00D4               	movwf	IoHwAbs_ECUGet_Incline@position
  3467  0670                     l2878:
  3468                           
  3469                           ;app/sensors_actuators/IoHwAbs.c: 74: void IoHwAbs_ECUGet_Incline (IoPositionSensorReadi
      +                          ngType* position);app/sensors_actuators/IoHwAbs.c: 75: {;app/sensors_actuators/IoHwAbs.c
      +                          : 76:  Std_ReturnType status;;app/sensors_actuators/IoHwAbs.c: 78:  status = Adc_ReadGro
      +                          up(0U, IoHwAb_PositionSensorsReadings);
  3470  0670  3043               	movlw	(low (_IoHwAb_PositionSensorsReadings| 0))& (0+255)
  3471  0671  00FF               	movwf	btemp+1
  3472  0672  087F               	movf	btemp+1,w
  3473  0673  00CE               	movwf	Adc_ReadGroup@DataBufferPtr
  3474  0674  3000               	movlw	0
  3475  0675  120A  118A  204C  120A  118A  	fcall	_Adc_ReadGroup
  3476  067A  00FF               	movwf	btemp+1
  3477  067B  087F               	movf	btemp+1,w
  3478  067C  1283               	bcf	3,5	;RP0=0, select bank0
  3479  067D  1303               	bcf	3,6	;RP1=0, select bank0
  3480  067E  00D3               	movwf	IoHwAbs_ECUGet_Incline@status
  3481  067F                     l2880:
  3482                           
  3483                           ;app/sensors_actuators/IoHwAbs.c: 80:  if(status == ((Std_ReturnType)0x00u))
  3484  067F  0853               	movf	IoHwAbs_ECUGet_Incline@status,w
  3485  0680  1D03               	btfss	3,2
  3486  0681  2E83               	goto	u1991
  3487  0682  2E84               	goto	u1990
  3488  0683                     u1991:
  3489  0683  2E8B               	goto	l219
  3490  0684                     u1990:
  3491  0684                     l2882:
  3492                           
  3493                           ;app/sensors_actuators/IoHwAbs.c: 81:  {;app/sensors_actuators/IoHwAbs.c: 84:   *positio
      +                          n = (IoPositionSensorReadingType)IoHwAb_PositionSensorsReadings[1];
  3494  0684  0844               	movf	_IoHwAb_PositionSensorsReadings+1,w
  3495  0685  00FF               	movwf	btemp+1
  3496  0686  0854               	movf	IoHwAbs_ECUGet_Incline@position,w
  3497  0687  0084               	movwf	4
  3498  0688  087F               	movf	btemp+1,w
  3499  0689  1383               	bcf	3,7	;select IRP bank0
  3500  068A  0080               	movwf	0
  3501  068B                     l219:	
  3502                           ;app/sensors_actuators/IoHwAbs.c: 85:  }
  3503                           
  3504  068B  0008               	return
  3505  068C                     __end_of_IoHwAbs_ECUGet_Incline:
  3506                           
  3507                           	psect	text21
  3508  07AC                     __ptext21:	
  3509 ;; *************** function _Rte_Call_SeatManager_rpInclineMotor_Move *****************
  3510 ;; Defined at:
  3511 ;;		line 244 in file "rte/Rte.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  Step            1    wreg     unsigned char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  Step            1    8[BANK0 ] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      unsigned char 
  3518 ;; Registers used:
  3519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3525 ;;      Params:         0       0       0       0       0
  3526 ;;      Locals:         0       1       0       0       0
  3527 ;;      Temps:          0       0       0       0       0
  3528 ;;      Totals:         0       1       0       0       0
  3529 ;;Total ram usage:        1 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    7
  3532 ;; This function calls:
  3533 ;;		_InclineMotor_Move
  3534 ;; This function is called by:
  3535 ;;		_SeatManager_AutoIncline
  3536 ;;		_SeatManager_SetIncline
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           
  3541                           ;psect for function _Rte_Call_SeatManager_rpInclineMotor_Move
  3542  07AC                     _Rte_Call_SeatManager_rpInclineMotor_Move:
  3543                           
  3544                           ;incstack = 0
  3545 ;; hardware stack exceeded
  3546                           ; Regs used in _Rte_Call_SeatManager_rpInclineMotor_Move: [wreg-fsr0h+status,2+status,0+
      +                          btemp+1+pclath+cstack]
  3547                           ;Rte_Call_SeatManager_rpInclineMotor_Move@Step stored from wreg
  3548  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  3549  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  3550  07AE  00CE               	movwf	Rte_Call_SeatManager_rpInclineMotor_Move@Step
  3551  07AF                     l3124:
  3552                           
  3553                           ;rte/Rte.c: 244: Std_ReturnType Rte_Call_SeatManager_rpInclineMotor_Move(StepMotorStepTy
      +                          pe Step);rte/Rte.c: 245: {;rte/Rte.c: 246:  InclineMotor_Move(Step);
  3554  07AF  084E               	movf	Rte_Call_SeatManager_rpInclineMotor_Move@Step,w
  3555  07B0  120A  118A  26C4  120A  118A  	fcall	_InclineMotor_Move
  3556  07B5                     l695:
  3557  07B5  0008               	return
  3558  07B6                     __end_of_Rte_Call_SeatManager_rpInclineMotor_Move:
  3559                           
  3560                           	psect	text22
  3561  06C4                     __ptext22:	
  3562 ;; *************** function _InclineMotor_Move *****************
  3563 ;; Defined at:
  3564 ;;		line 25 in file "app/sensors_actuators/InclineMotor.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  Step            1    wreg     unsigned char 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  Step            1    7[BANK0 ] unsigned char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3578 ;;      Params:         0       0       0       0       0
  3579 ;;      Locals:         0       1       0       0       0
  3580 ;;      Temps:          0       0       0       0       0
  3581 ;;      Totals:         0       1       0       0       0
  3582 ;;Total ram usage:        1 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    6
  3585 ;; This function calls:
  3586 ;;		_Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward
  3587 ;;		_Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse
  3588 ;; This function is called by:
  3589 ;;		_Rte_Call_SeatManager_rpInclineMotor_Move
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function _InclineMotor_Move
  3595  06C4                     _InclineMotor_Move:
  3596                           
  3597                           ;incstack = 0
  3598 ;; hardware stack exceeded
  3599                           ; Regs used in _InclineMotor_Move: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3600                           ;InclineMotor_Move@Step stored from wreg
  3601  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  3602  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  3603  06C6  00CD               	movwf	InclineMotor_Move@Step
  3604  06C7                     l3002:
  3605                           
  3606                           ;app/sensors_actuators/InclineMotor.c: 25: void InclineMotor_Move (StepMotorStepType Ste
      +                          p);app/sensors_actuators/InclineMotor.c: 26: {;app/sensors_actuators/InclineMotor.c: 27:
      +                            if(Step == 0)
  3607  06C7  084D               	movf	InclineMotor_Move@Step,w
  3608  06C8  1D03               	btfss	3,2
  3609  06C9  2ECB               	goto	u2161
  3610  06CA  2ECC               	goto	u2160
  3611  06CB                     u2161:
  3612  06CB  2ED2               	goto	l3006
  3613  06CC                     u2160:
  3614  06CC                     l3004:
  3615                           
  3616                           ;app/sensors_actuators/InclineMotor.c: 28:  {;app/sensors_actuators/InclineMotor.c: 29: 
      +                            (void)Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward();
  3617  06CC  120A  158A  27CF  120A  118A  	fcall	_Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward
  3618                           
  3619                           ;app/sensors_actuators/InclineMotor.c: 30:  }
  3620  06D1  2EDC               	goto	l188
  3621  06D2                     l3006:
  3622  06D2  034D               	decf	InclineMotor_Move@Step,w
  3623  06D3  1D03               	btfss	3,2
  3624  06D4  2ED6               	goto	u2171
  3625  06D5  2ED7               	goto	u2170
  3626  06D6                     u2171:
  3627  06D6  2EDC               	goto	l188
  3628  06D7                     u2170:
  3629  06D7                     l3008:
  3630                           
  3631                           ;app/sensors_actuators/InclineMotor.c: 32:  {;app/sensors_actuators/InclineMotor.c: 33: 
      +                            (void)Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse();
  3632  06D7  120A  158A  27D5  120A  118A  	fcall	_Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse
  3633  06DC                     l188:	
  3634                           ;app/sensors_actuators/InclineMotor.c: 34:  }
  3635                           
  3636  06DC  0008               	return
  3637  06DD                     __end_of_InclineMotor_Move:
  3638                           
  3639                           	psect	text23
  3640  0FD5                     __ptext23:	
  3641 ;; *************** function _Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse *****************
  3642 ;; Defined at:
  3643 ;;		line 196 in file "rte/Rte.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;		None
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;		None
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      unsigned char 
  3650 ;; Registers used:
  3651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3657 ;;      Params:         0       0       0       0       0
  3658 ;;      Locals:         0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0
  3660 ;;      Totals:         0       0       0       0       0
  3661 ;;Total ram usage:        0 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; Hardware stack levels required when called:    5
  3664 ;; This function calls:
  3665 ;;		_IoHwAbs_ECUSetReverse_Incline
  3666 ;; This function is called by:
  3667 ;;		_InclineMotor_Move
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           
  3672                           ;psect for function _Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse
  3673  0FD5                     _Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse:
  3674  0FD5                     l2924:	
  3675                           ;incstack = 0
  3676 ;; hardware stack exceeded
  3677                           ; Regs used in _Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse: [wreg-fsr0h+status,2+
      +                          status,0+btemp+1+pclath+cstack]
  3678                           
  3679                           
  3680                           ;rte/Rte.c: 198:  IoHwAbs_ECUSetReverse_Incline();
  3681  0FD5  120A  118A  27B6  120A  158A  	fcall	_IoHwAbs_ECUSetReverse_Incline
  3682  0FDA                     l671:
  3683  0FDA  0008               	return
  3684  0FDB                     __end_of_Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse:
  3685                           
  3686                           	psect	text24
  3687  07B6                     __ptext24:	
  3688 ;; *************** function _IoHwAbs_ECUSetReverse_Incline *****************
  3689 ;; Defined at:
  3690 ;;		line 223 in file "app/sensors_actuators/IoHwAbs.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;		None
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3704 ;;      Params:         0       0       0       0       0
  3705 ;;      Locals:         0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0
  3707 ;;      Totals:         0       0       0       0       0
  3708 ;;Total ram usage:        0 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; Hardware stack levels required when called:    4
  3711 ;; This function calls:
  3712 ;;		_Dio_WriteChannel
  3713 ;; This function is called by:
  3714 ;;		_Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           
  3719                           ;psect for function _IoHwAbs_ECUSetReverse_Incline
  3720  07B6                     _IoHwAbs_ECUSetReverse_Incline:
  3721  07B6                     l2904:	
  3722                           ;incstack = 0
  3723 ;; hardware stack exceeded
  3724                           ; Regs used in _IoHwAbs_ECUSetReverse_Incline: [wreg-fsr0h+status,2+status,0+btemp+1+pcl
      +                          ath+cstack]
  3725                           
  3726                           
  3727                           ;app/sensors_actuators/IoHwAbs.c: 226:  Dio_WriteChannel(DioConfg_DioChannel_InclineMoto
      +                          rCh, 0x00u);
  3728  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  3729  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  3730  07B8  01C6               	clrf	Dio_WriteChannel@Level
  3731  07B9  3001               	movlw	1
  3732  07BA  120A  118A  22B7  120A  118A  	fcall	_Dio_WriteChannel
  3733  07BF                     l244:
  3734  07BF  0008               	return
  3735  07C0                     __end_of_IoHwAbs_ECUSetReverse_Incline:
  3736                           
  3737                           	psect	text25
  3738  0FCF                     __ptext25:	
  3739 ;; *************** function _Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward *****************
  3740 ;; Defined at:
  3741 ;;		line 190 in file "rte/Rte.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;		None
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1    wreg      unsigned char 
  3748 ;; Registers used:
  3749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3755 ;;      Params:         0       0       0       0       0
  3756 ;;      Locals:         0       0       0       0       0
  3757 ;;      Temps:          0       0       0       0       0
  3758 ;;      Totals:         0       0       0       0       0
  3759 ;;Total ram usage:        0 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; Hardware stack levels required when called:    5
  3762 ;; This function calls:
  3763 ;;		_IoHwAbs_ECUSetForward_Incline
  3764 ;; This function is called by:
  3765 ;;		_InclineMotor_Move
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           
  3770                           ;psect for function _Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward
  3771  0FCF                     _Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward:
  3772  0FCF                     l2920:	
  3773                           ;incstack = 0
  3774 ;; hardware stack exceeded
  3775                           ; Regs used in _Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward: [wreg-fsr0h+status,2+
      +                          status,0+btemp+1+pclath+cstack]
  3776                           
  3777                           
  3778                           ;rte/Rte.c: 192:  IoHwAbs_ECUSetForward_Incline();
  3779  0FCF  120A  118A  275A  120A  158A  	fcall	_IoHwAbs_ECUSetForward_Incline
  3780  0FD4                     l668:
  3781  0FD4  0008               	return
  3782  0FD5                     __end_of_Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward:
  3783                           
  3784                           	psect	text26
  3785  075A                     __ptext26:	
  3786 ;; *************** function _IoHwAbs_ECUSetForward_Incline *****************
  3787 ;; Defined at:
  3788 ;;		line 175 in file "app/sensors_actuators/IoHwAbs.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;		None
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;		None
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      void 
  3795 ;; Registers used:
  3796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3802 ;;      Params:         0       0       0       0       0
  3803 ;;      Locals:         0       0       0       0       0
  3804 ;;      Temps:          0       0       0       0       0
  3805 ;;      Totals:         0       0       0       0       0
  3806 ;;Total ram usage:        0 bytes
  3807 ;; Hardware stack levels used:    1
  3808 ;; Hardware stack levels required when called:    4
  3809 ;; This function calls:
  3810 ;;		_Dio_WriteChannel
  3811 ;; This function is called by:
  3812 ;;		_Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           
  3817                           ;psect for function _IoHwAbs_ECUSetForward_Incline
  3818  075A                     _IoHwAbs_ECUSetForward_Incline:
  3819  075A                     l2898:	
  3820                           ;incstack = 0
  3821 ;; hardware stack exceeded
  3822                           ; Regs used in _IoHwAbs_ECUSetForward_Incline: [wreg-fsr0h+status,2+status,0+btemp+1+pcl
      +                          ath+cstack]
  3823                           
  3824                           
  3825                           ;app/sensors_actuators/IoHwAbs.c: 178:  Dio_WriteChannel(DioConfg_DioChannel_InclineMoto
      +                          rCh, 0x01u);
  3826  075A  1283               	bcf	3,5	;RP0=0, select bank0
  3827  075B  1303               	bcf	3,6	;RP1=0, select bank0
  3828  075C  01C6               	clrf	Dio_WriteChannel@Level
  3829  075D  0AC6               	incf	Dio_WriteChannel@Level,f
  3830  075E  3001               	movlw	1
  3831  075F  120A  118A  22B7  120A  118A  	fcall	_Dio_WriteChannel
  3832  0764                     l235:
  3833  0764  0008               	return
  3834  0765                     __end_of_IoHwAbs_ECUSetForward_Incline:
  3835                           
  3836                           	psect	text27
  3837  0571                     __ptext27:	
  3838 ;; *************** function _SeatManager_AutoHeight *****************
  3839 ;; Defined at:
  3840 ;;		line 164 in file "app/appswcs/SeatManager.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;		None
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  Step            1   22[BANK0 ] unsigned char 
  3845 ;;  Position        1   21[BANK0 ] unsigned char 
  3846 ;;  Weight          1   20[BANK0 ] unsigned char 
  3847 ;;  adjustMotor     1   19[BANK0 ] unsigned char 
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  1    wreg      void 
  3850 ;; Registers used:
  3851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3857 ;;      Params:         0       0       0       0       0
  3858 ;;      Locals:         0       4       0       0       0
  3859 ;;      Temps:          0       0       0       0       0
  3860 ;;      Totals:         0       4       0       0       0
  3861 ;;Total ram usage:        4 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; Hardware stack levels required when called:    9
  3864 ;; This function calls:
  3865 ;;		_IsMotorAdjustNeeded
  3866 ;;		_Rte_Call_SeatManager_rpHeightMotor_Move
  3867 ;;		_Rte_Call_SeatManager_rpHeightSensor_GetPosition
  3868 ;;		_Rte_Call_SeatManager_rpWeightSensor_GetWeight
  3869 ;; This function is called by:
  3870 ;;		_CyclicTask
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           
  3875                           ;psect for function _SeatManager_AutoHeight
  3876  0571                     _SeatManager_AutoHeight:
  3877  0571                     l3148:	
  3878                           ;incstack = 0
  3879 ;; hardware stack exceeded
  3880                           ; Regs used in _SeatManager_AutoHeight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3881                           
  3882                           
  3883                           ;app/appswcs/SeatManager.c: 166:  StepMotorStepType Step;;app/appswcs/SeatManager.c: 167
      +                          :  SensorPositionType Position;;app/appswcs/SeatManager.c: 168:  SensorWeightType Weight
      +                          ;;app/appswcs/SeatManager.c: 169:  boolean adjustMotor;;app/appswcs/SeatManager.c: 171: 
      +                           (void)Rte_Call_SeatManager_rpHeightSensor_GetPosition(&Position);
  3884  0571  305B               	movlw	(low (SeatManager_AutoHeight@Position| 0))& (0+255)
  3885  0572  120A  118A  27D4  120A  118A  	fcall	_Rte_Call_SeatManager_rpHeightSensor_GetPosition
  3886                           
  3887                           ;app/appswcs/SeatManager.c: 172:  (void)Rte_Call_SeatManager_rpWeightSensor_GetWeight(&W
      +                          eight);
  3888  0577  305A               	movlw	(low (SeatManager_AutoHeight@Weight| 0))& (0+255)
  3889  0578  120A  118A  27C0  120A  118A  	fcall	_Rte_Call_SeatManager_rpWeightSensor_GetWeight
  3890                           
  3891                           ;app/appswcs/SeatManager.c: 174:  adjustMotor = IsMotorAdjustNeeded(Position, Weight, &S
      +                          tep);
  3892  057D  1283               	bcf	3,5	;RP0=0, select bank0
  3893  057E  1303               	bcf	3,6	;RP1=0, select bank0
  3894  057F  085A               	movf	SeatManager_AutoHeight@Weight,w
  3895  0580  00FF               	movwf	btemp+1
  3896  0581  087F               	movf	btemp+1,w
  3897  0582  00C6               	movwf	IsMotorAdjustNeeded@Weight
  3898  0583  305C               	movlw	(low (SeatManager_AutoHeight@Step| 0))& (0+255)
  3899  0584  00FF               	movwf	btemp+1
  3900  0585  087F               	movf	btemp+1,w
  3901  0586  00C7               	movwf	IsMotorAdjustNeeded@Step
  3902  0587  085B               	movf	SeatManager_AutoHeight@Position,w
  3903  0588  120A  118A  21FF  120A  118A  	fcall	_IsMotorAdjustNeeded
  3904  058D  00FF               	movwf	btemp+1
  3905  058E  087F               	movf	btemp+1,w
  3906  058F  1283               	bcf	3,5	;RP0=0, select bank0
  3907  0590  1303               	bcf	3,6	;RP1=0, select bank0
  3908  0591  00D9               	movwf	SeatManager_AutoHeight@adjustMotor
  3909  0592                     l3150:
  3910                           
  3911                           ;app/appswcs/SeatManager.c: 175:  if(adjustMotor)
  3912  0592  0859               	movf	SeatManager_AutoHeight@adjustMotor,w
  3913  0593  1903               	btfsc	3,2
  3914  0594  2D96               	goto	u2381
  3915  0595  2D97               	goto	u2380
  3916  0596                     u2381:
  3917  0596  2D9D               	goto	l147
  3918  0597                     u2380:
  3919  0597                     l3152:
  3920                           
  3921                           ;app/appswcs/SeatManager.c: 176:  {;app/appswcs/SeatManager.c: 177:   (void)Rte_Call_Sea
      +                          tManager_rpHeightMotor_Move(Step);
  3922  0597  085C               	movf	SeatManager_AutoHeight@Step,w
  3923  0598  120A  118A  27E8  120A  118A  	fcall	_Rte_Call_SeatManager_rpHeightMotor_Move
  3924  059D                     l147:
  3925  059D  0008               	return
  3926  059E                     __end_of_SeatManager_AutoHeight:
  3927                           
  3928                           	psect	text28
  3929  07C0                     __ptext28:	
  3930 ;; *************** function _Rte_Call_SeatManager_rpWeightSensor_GetWeight *****************
  3931 ;; Defined at:
  3932 ;;		line 274 in file "rte/Rte.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  Weight          1    wreg     PTR unsigned char 
  3935 ;;		 -> SeatManager_AutoIncline@Weight(1), SeatManager_AutoSlide@Weight(1), SeatManager_AutoHeight@Weight(1), 
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;  Weight          1   11[BANK0 ] PTR unsigned char 
  3938 ;;		 -> SeatManager_AutoIncline@Weight(1), SeatManager_AutoSlide@Weight(1), SeatManager_AutoHeight@Weight(1), 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      unsigned char 
  3941 ;; Registers used:
  3942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3948 ;;      Params:         0       0       0       0       0
  3949 ;;      Locals:         0       1       0       0       0
  3950 ;;      Temps:          0       0       0       0       0
  3951 ;;      Totals:         0       1       0       0       0
  3952 ;;Total ram usage:        1 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    8
  3955 ;; This function calls:
  3956 ;;		_WeightSensor_GetWeight
  3957 ;; This function is called by:
  3958 ;;		_SeatManager_AutoHeight
  3959 ;;		_SeatManager_AutoSlide
  3960 ;;		_SeatManager_AutoIncline
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           
  3965                           ;psect for function _Rte_Call_SeatManager_rpWeightSensor_GetWeight
  3966  07C0                     _Rte_Call_SeatManager_rpWeightSensor_GetWeight:
  3967                           
  3968                           ;incstack = 0
  3969 ;; hardware stack exceeded
  3970                           ; Regs used in _Rte_Call_SeatManager_rpWeightSensor_GetWeight: [wreg-fsr0h+status,2+stat
      +                          us,0+btemp+1+pclath+cstack]
  3971                           ;Rte_Call_SeatManager_rpWeightSensor_GetWeight@Weight stored from wreg
  3972  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  3973  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  3974  07C2  00D1               	movwf	Rte_Call_SeatManager_rpWeightSensor_GetWeight@Weight
  3975  07C3                     l3136:
  3976                           
  3977                           ;rte/Rte.c: 274: Std_ReturnType Rte_Call_SeatManager_rpWeightSensor_GetWeight(SensorWeig
      +                          htType* Weight);rte/Rte.c: 275: {;rte/Rte.c: 276:  WeightSensor_GetWeight(Weight);
  3978  07C3  0851               	movf	Rte_Call_SeatManager_rpWeightSensor_GetWeight@Weight,w
  3979  07C4  120A  118A  25EA  120A  118A  	fcall	_WeightSensor_GetWeight
  3980  07C9                     l710:
  3981  07C9  0008               	return
  3982  07CA                     __end_of_Rte_Call_SeatManager_rpWeightSensor_GetWeight:
  3983                           
  3984                           	psect	text29
  3985  05EA                     __ptext29:	
  3986 ;; *************** function _WeightSensor_GetWeight *****************
  3987 ;; Defined at:
  3988 ;;		line 25 in file "app/sensors_actuators/WeightSensor.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  Weight          1    wreg     PTR unsigned char 
  3991 ;;		 -> SeatManager_AutoIncline@Weight(1), SeatManager_AutoSlide@Weight(1), SeatManager_AutoHeight@Weight(1), 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  Weight          1    8[BANK0 ] PTR unsigned char 
  3994 ;;		 -> SeatManager_AutoIncline@Weight(1), SeatManager_AutoSlide@Weight(1), SeatManager_AutoHeight@Weight(1), 
  3995 ;;  weight          2    9[BANK0 ] unsigned short 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      void 
  3998 ;; Registers used:
  3999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4005 ;;      Params:         0       0       0       0       0
  4006 ;;      Locals:         0       3       0       0       0
  4007 ;;      Temps:          0       0       0       0       0
  4008 ;;      Totals:         0       3       0       0       0
  4009 ;;Total ram usage:        3 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:    7
  4012 ;; This function calls:
  4013 ;;		_Rte_Call_WeightSensor_rpIOGetWeight_IOGet
  4014 ;;		___lwdiv
  4015 ;; This function is called by:
  4016 ;;		_Rte_Call_SeatManager_rpWeightSensor_GetWeight
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _WeightSensor_GetWeight
  4022  05EA                     _WeightSensor_GetWeight:
  4023                           
  4024                           ;incstack = 0
  4025 ;; hardware stack exceeded
  4026                           ; Regs used in _WeightSensor_GetWeight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  4027                           ;WeightSensor_GetWeight@Weight stored from wreg
  4028  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  4029  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  4030  05EC  00CE               	movwf	WeightSensor_GetWeight@Weight
  4031  05ED                     l3058:
  4032                           
  4033                           ;app/sensors_actuators/WeightSensor.c: 25: void WeightSensor_GetWeight (SensorWeightType
      +                          * Weight);app/sensors_actuators/WeightSensor.c: 26: {;app/sensors_actuators/WeightSensor
      +                          .c: 27:  IoWeightSensorReadingType weight;;app/sensors_actuators/WeightSensor.c: 30:  (v
      +                          oid)Rte_Call_WeightSensor_rpIOGetWeight_IOGet(&weight);
  4034  05ED  304F               	movlw	(low (WeightSensor_GetWeight@weight| 0))& (0+255)
  4035  05EE  120A  118A  27CA  120A  118A  	fcall	_Rte_Call_WeightSensor_rpIOGetWeight_IOGet
  4036                           
  4037                           ;app/sensors_actuators/WeightSensor.c: 32:  *Weight = (SensorWeightType)(weight/100);
  4038  05F3  3064               	movlw	100
  4039  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  4040  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  4041  05F6  00C6               	movwf	___lwdiv@divisor
  4042  05F7  3000               	movlw	0
  4043  05F8  00C7               	movwf	___lwdiv@divisor+1
  4044  05F9  0850               	movf	WeightSensor_GetWeight@weight+1,w
  4045  05FA  00C9               	movwf	___lwdiv@dividend+1
  4046  05FB  084F               	movf	WeightSensor_GetWeight@weight,w
  4047  05FC  00C8               	movwf	___lwdiv@dividend
  4048  05FD  120A  118A  2350  120A  118A  	fcall	___lwdiv
  4049  0602  1283               	bcf	3,5	;RP0=0, select bank0
  4050  0603  1303               	bcf	3,6	;RP1=0, select bank0
  4051  0604  0846               	movf	?___lwdiv,w
  4052  0605  00FF               	movwf	btemp+1
  4053  0606  084E               	movf	WeightSensor_GetWeight@Weight,w
  4054  0607  0084               	movwf	4
  4055  0608  087F               	movf	btemp+1,w
  4056  0609  1383               	bcf	3,7	;select IRP bank0
  4057  060A  0080               	movwf	0
  4058  060B                     l274:
  4059  060B  0008               	return
  4060  060C                     __end_of_WeightSensor_GetWeight:
  4061                           
  4062                           	psect	text30
  4063  0350                     __ptext30:	
  4064 ;; *************** function ___lwdiv *****************
  4065 ;; Defined at:
  4066 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  divisor         2    0[BANK0 ] unsigned int 
  4069 ;;  dividend        2    2[BANK0 ] unsigned int 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  quotient        2    4[BANK0 ] unsigned int 
  4072 ;;  counter         1    6[BANK0 ] unsigned char 
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  2    0[BANK0 ] unsigned int 
  4075 ;; Registers used:
  4076 ;;		wreg, status,2, status,0, btemp+1
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4082 ;;      Params:         0       4       0       0       0
  4083 ;;      Locals:         0       3       0       0       0
  4084 ;;      Temps:          0       0       0       0       0
  4085 ;;      Totals:         0       7       0       0       0
  4086 ;;Total ram usage:        7 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:    3
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_WeightSensor_GetWeight
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           
  4097                           ;psect for function ___lwdiv
  4098  0350                     ___lwdiv:
  4099  0350                     l2948:	
  4100                           ;incstack = 0
  4101 ;; hardware stack exceeded
  4102                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  4103                           
  4104  0350  1283               	bcf	3,5	;RP0=0, select bank0
  4105  0351  1303               	bcf	3,6	;RP1=0, select bank0
  4106  0352  01CA               	clrf	___lwdiv@quotient
  4107  0353  01CB               	clrf	___lwdiv@quotient+1
  4108  0354                     l2950:
  4109  0354  0846               	movf	___lwdiv@divisor,w
  4110  0355  0447               	iorwf	___lwdiv@divisor+1,w
  4111  0356  1903               	btfsc	3,2
  4112  0357  2B59               	goto	u2021
  4113  0358  2B5A               	goto	u2020
  4114  0359                     u2021:
  4115  0359  2B91               	goto	l2970
  4116  035A                     u2020:
  4117  035A                     l2952:
  4118  035A  01CC               	clrf	___lwdiv@counter
  4119  035B  0ACC               	incf	___lwdiv@counter,f
  4120  035C  2B68               	goto	l2958
  4121  035D                     l2954:
  4122  035D  3001               	movlw	1
  4123  035E                     u2035:
  4124  035E  1003               	clrc
  4125  035F  0DC6               	rlf	___lwdiv@divisor,f
  4126  0360  0DC7               	rlf	___lwdiv@divisor+1,f
  4127  0361  3EFF               	addlw	-1
  4128  0362  1D03               	skipz
  4129  0363  2B5E               	goto	u2035
  4130  0364                     l2956:
  4131  0364  3001               	movlw	1
  4132  0365  00FF               	movwf	btemp+1
  4133  0366  087F               	movf	btemp+1,w
  4134  0367  07CC               	addwf	___lwdiv@counter,f
  4135  0368                     l2958:
  4136  0368  1FC7               	btfss	___lwdiv@divisor+1,7
  4137  0369  2B6B               	goto	u2041
  4138  036A  2B6C               	goto	u2040
  4139  036B                     u2041:
  4140  036B  2B5D               	goto	l2954
  4141  036C                     u2040:
  4142  036C                     l2960:
  4143  036C  3001               	movlw	1
  4144  036D                     u2055:
  4145  036D  1003               	clrc
  4146  036E  0DCA               	rlf	___lwdiv@quotient,f
  4147  036F  0DCB               	rlf	___lwdiv@quotient+1,f
  4148  0370  3EFF               	addlw	-1
  4149  0371  1D03               	skipz
  4150  0372  2B6D               	goto	u2055
  4151  0373  0847               	movf	___lwdiv@divisor+1,w
  4152  0374  0249               	subwf	___lwdiv@dividend+1,w
  4153  0375  1D03               	skipz
  4154  0376  2B79               	goto	u2065
  4155  0377  0846               	movf	___lwdiv@divisor,w
  4156  0378  0248               	subwf	___lwdiv@dividend,w
  4157  0379                     u2065:
  4158  0379  1C03               	skipc
  4159  037A  2B7C               	goto	u2061
  4160  037B  2B7D               	goto	u2060
  4161  037C                     u2061:
  4162  037C  2B84               	goto	l2966
  4163  037D                     u2060:
  4164  037D                     l2962:
  4165  037D  0846               	movf	___lwdiv@divisor,w
  4166  037E  02C8               	subwf	___lwdiv@dividend,f
  4167  037F  0847               	movf	___lwdiv@divisor+1,w
  4168  0380  1C03               	skipc
  4169  0381  03C9               	decf	___lwdiv@dividend+1,f
  4170  0382  02C9               	subwf	___lwdiv@dividend+1,f
  4171  0383                     l2964:
  4172  0383  144A               	bsf	___lwdiv@quotient,0
  4173  0384                     l2966:
  4174  0384  3001               	movlw	1
  4175  0385                     u2075:
  4176  0385  1003               	clrc
  4177  0386  0CC7               	rrf	___lwdiv@divisor+1,f
  4178  0387  0CC6               	rrf	___lwdiv@divisor,f
  4179  0388  3EFF               	addlw	-1
  4180  0389  1D03               	skipz
  4181  038A  2B85               	goto	u2075
  4182  038B                     l2968:
  4183  038B  3001               	movlw	1
  4184  038C  02CC               	subwf	___lwdiv@counter,f
  4185  038D  1D03               	btfss	3,2
  4186  038E  2B90               	goto	u2081
  4187  038F  2B91               	goto	u2080
  4188  0390                     u2081:
  4189  0390  2B6C               	goto	l2960
  4190  0391                     u2080:
  4191  0391                     l2970:
  4192  0391  084B               	movf	___lwdiv@quotient+1,w
  4193  0392  00C7               	movwf	?___lwdiv+1
  4194  0393  084A               	movf	___lwdiv@quotient,w
  4195  0394  00C6               	movwf	?___lwdiv
  4196  0395                     l1320:
  4197  0395  0008               	return
  4198  0396                     __end_of___lwdiv:
  4199                           
  4200                           	psect	text31
  4201  07CA                     __ptext31:	
  4202 ;; *************** function _Rte_Call_WeightSensor_rpIOGetWeight_IOGet *****************
  4203 ;; Defined at:
  4204 ;;		line 232 in file "rte/Rte.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;  weight          1    wreg     PTR unsigned short 
  4207 ;;		 -> WeightSensor_GetWeight@weight(2), 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  weight          1    7[BANK0 ] PTR unsigned short 
  4210 ;;		 -> WeightSensor_GetWeight@weight(2), 
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  1    wreg      unsigned char 
  4213 ;; Registers used:
  4214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4220 ;;      Params:         0       0       0       0       0
  4221 ;;      Locals:         0       1       0       0       0
  4222 ;;      Temps:          0       0       0       0       0
  4223 ;;      Totals:         0       1       0       0       0
  4224 ;;Total ram usage:        1 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    6
  4227 ;; This function calls:
  4228 ;;		_IoHwAbs_ECUGet_Weight
  4229 ;; This function is called by:
  4230 ;;		_WeightSensor_GetWeight
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           
  4235                           ;psect for function _Rte_Call_WeightSensor_rpIOGetWeight_IOGet
  4236  07CA                     _Rte_Call_WeightSensor_rpIOGetWeight_IOGet:
  4237                           
  4238                           ;incstack = 0
  4239 ;; hardware stack exceeded
  4240                           ; Regs used in _Rte_Call_WeightSensor_rpIOGetWeight_IOGet: [wreg-fsr0h+status,2+status,0
      +                          +btemp+1+pclath+cstack]
  4241                           ;Rte_Call_WeightSensor_rpIOGetWeight_IOGet@weight stored from wreg
  4242  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  4243  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  4244  07CC  00CD               	movwf	Rte_Call_WeightSensor_rpIOGetWeight_IOGet@weight
  4245  07CD                     l2944:
  4246                           
  4247                           ;rte/Rte.c: 232: Std_ReturnType Rte_Call_WeightSensor_rpIOGetWeight_IOGet(IoWeightSensor
      +                          ReadingType* weight);rte/Rte.c: 233: {;rte/Rte.c: 234:  IoHwAbs_ECUGet_Weight(weight);
  4248  07CD  084D               	movf	Rte_Call_WeightSensor_rpIOGetWeight_IOGet@weight,w
  4249  07CE  120A  118A  262E  120A  118A  	fcall	_IoHwAbs_ECUGet_Weight
  4250  07D3                     l689:
  4251  07D3  0008               	return
  4252  07D4                     __end_of_Rte_Call_WeightSensor_rpIOGetWeight_IOGet:
  4253                           
  4254                           	psect	text32
  4255  062E                     __ptext32:	
  4256 ;; *************** function _IoHwAbs_ECUGet_Weight *****************
  4257 ;; Defined at:
  4258 ;;		line 130 in file "app/sensors_actuators/IoHwAbs.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;  weight          1    wreg     PTR unsigned short 
  4261 ;;		 -> WeightSensor_GetWeight@weight(2), 
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  weight          1    4[BANK0 ] PTR unsigned short 
  4264 ;;		 -> WeightSensor_GetWeight@weight(2), 
  4265 ;;  spiData         2    5[BANK0 ] unsigned int 
  4266 ;;  status          1    3[BANK0 ] unsigned char 
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  1    wreg      void 
  4269 ;; Registers used:
  4270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4276 ;;      Params:         0       0       0       0       0
  4277 ;;      Locals:         0       4       0       0       0
  4278 ;;      Temps:          0       0       0       0       0
  4279 ;;      Totals:         0       4       0       0       0
  4280 ;;Total ram usage:        4 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; Hardware stack levels required when called:    5
  4283 ;; This function calls:
  4284 ;;		_Spi_ReadIB
  4285 ;; This function is called by:
  4286 ;;		_Rte_Call_WeightSensor_rpIOGetWeight_IOGet
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           
  4291                           ;psect for function _IoHwAbs_ECUGet_Weight
  4292  062E                     _IoHwAbs_ECUGet_Weight:
  4293                           
  4294                           ;incstack = 0
  4295 ;; hardware stack exceeded
  4296                           ; Regs used in _IoHwAbs_ECUGet_Weight: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  4297                           ;IoHwAbs_ECUGet_Weight@weight stored from wreg
  4298  062E  1283               	bcf	3,5	;RP0=0, select bank0
  4299  062F  1303               	bcf	3,6	;RP1=0, select bank0
  4300  0630  00CA               	movwf	IoHwAbs_ECUGet_Weight@weight
  4301  0631                     l2890:
  4302                           
  4303                           ;app/sensors_actuators/IoHwAbs.c: 130: void IoHwAbs_ECUGet_Weight (IoWeightSensorReading
      +                          Type* weight);app/sensors_actuators/IoHwAbs.c: 131: {;app/sensors_actuators/IoHwAbs.c: 1
      +                          32:  Std_ReturnType status;;app/sensors_actuators/IoHwAbs.c: 133:  Spi_DataBufferType sp
      +                          iData;;app/sensors_actuators/IoHwAbs.c: 135:  status = Spi_ReadIB(0U, &spiData);
  4304  0631  304B               	movlw	(low (IoHwAbs_ECUGet_Weight@spiData| 0))& (0+255)
  4305  0632  00FF               	movwf	btemp+1
  4306  0633  087F               	movf	btemp+1,w
  4307  0634  00C6               	movwf	Spi_ReadIB@DataBufferPtr
  4308  0635  3000               	movlw	0
  4309  0636  120A  118A  260C  120A  118A  	fcall	_Spi_ReadIB
  4310  063B  00FF               	movwf	btemp+1
  4311  063C  087F               	movf	btemp+1,w
  4312  063D  1283               	bcf	3,5	;RP0=0, select bank0
  4313  063E  1303               	bcf	3,6	;RP1=0, select bank0
  4314  063F  00C9               	movwf	IoHwAbs_ECUGet_Weight@status
  4315  0640                     l2892:
  4316                           
  4317                           ;app/sensors_actuators/IoHwAbs.c: 137:  if(status == ((Std_ReturnType)0x00u))
  4318  0640  0849               	movf	IoHwAbs_ECUGet_Weight@status,w
  4319  0641  1D03               	btfss	3,2
  4320  0642  2E44               	goto	u2011
  4321  0643  2E45               	goto	u2010
  4322  0644                     u2011:
  4323  0644  2E4D               	goto	l229
  4324  0645                     u2010:
  4325  0645                     l2894:
  4326                           
  4327                           ;app/sensors_actuators/IoHwAbs.c: 138:  {;app/sensors_actuators/IoHwAbs.c: 141:   *weigh
      +                          t = (IoWeightSensorReadingType)spiData;
  4328  0645  084A               	movf	IoHwAbs_ECUGet_Weight@weight,w
  4329  0646  0084               	movwf	4
  4330  0647  084B               	movf	IoHwAbs_ECUGet_Weight@spiData,w
  4331  0648  1383               	bcf	3,7	;select IRP bank0
  4332  0649  0080               	movwf	0
  4333  064A  0A84               	incf	4,f
  4334  064B  084C               	movf	IoHwAbs_ECUGet_Weight@spiData+1,w
  4335  064C  0080               	movwf	0
  4336  064D                     l229:	
  4337                           ;app/sensors_actuators/IoHwAbs.c: 142:  }
  4338                           
  4339  064D  0008               	return
  4340  064E                     __end_of_IoHwAbs_ECUGet_Weight:
  4341                           
  4342                           	psect	text33
  4343  060C                     __ptext33:	
  4344 ;; *************** function _Spi_ReadIB *****************
  4345 ;; Defined at:
  4346 ;;		line 122 in file "bsw/static/Spi.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  Channel         1    wreg     unsigned char 
  4349 ;;  DataBufferPt    1    0[BANK0 ] PTR unsigned int 
  4350 ;;		 -> IoHwAbs_ECUGet_Weight@spiData(2), 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  Channel         1    0[COMMON] unsigned char 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  1    wreg      unsigned char 
  4355 ;; Registers used:
  4356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4362 ;;      Params:         0       1       0       0       0
  4363 ;;      Locals:         0       0       0       0       0
  4364 ;;      Temps:          0       2       0       0       0
  4365 ;;      Totals:         0       3       0       0       0
  4366 ;;Total ram usage:        3 bytes
  4367 ;; Hardware stack levels used:    1
  4368 ;; Hardware stack levels required when called:    4
  4369 ;; This function calls:
  4370 ;;		_SPI_Master_Wait
  4371 ;; This function is called by:
  4372 ;;		_IoHwAbs_ECUGet_Weight
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           
  4377                           ;psect for function _Spi_ReadIB
  4378  060C                     _Spi_ReadIB:
  4379  060C                     l2848:	
  4380                           ;incstack = 0
  4381 ;; hardware stack exceeded
  4382                           ; Regs used in _Spi_ReadIB: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4383                           
  4384                           
  4385                           ;bsw/static/Spi.c: 122: Std_ReturnType Spi_ReadIB ( Spi_ChannelType Channel, Spi_DataBuf
      +                          ferType* DataBufferPtr );bsw/static/Spi.c: 123: {;bsw/static/Spi.c: 141:     {;bsw/stati
      +                          c/Spi.c: 142:         SPI_Master_Wait();
  4386  060C  120A  118A  2742  120A  118A  	fcall	_SPI_Master_Wait
  4387  0611                     l2850:
  4388                           
  4389                           ;bsw/static/Spi.c: 143:         (SSPCON2|=(1<<RCEN_BIT));
  4390  0611  1683               	bsf	3,5	;RP0=1, select bank1
  4391  0612  1303               	bcf	3,6	;RP1=0, select bank1
  4392  0613  1591               	bsf	17,3	;volatile
  4393  0614                     l520:	
  4394                           ;bsw/static/Spi.c: 144:         while(!SSPIF);
  4395                           
  4396  0614  1283               	bcf	3,5	;RP0=0, select bank0
  4397  0615  1D8C               	btfss	12,3	;volatile
  4398  0616  2E18               	goto	u1931
  4399  0617  2E19               	goto	u1930
  4400  0618                     u1931:
  4401  0618  2E14               	goto	l520
  4402  0619                     u1930:
  4403  0619                     l522:
  4404                           
  4405                           ;bsw/static/Spi.c: 145:         SSPIF = 0;
  4406  0619  118C               	bcf	12,3	;volatile
  4407  061A                     l2852:
  4408                           
  4409                           ;bsw/static/Spi.c: 146:         SPI_Master_Wait();
  4410  061A  120A  118A  2742  120A  118A  	fcall	_SPI_Master_Wait
  4411  061F                     l2854:
  4412                           
  4413                           ;bsw/static/Spi.c: 147:         *DataBufferPtr = SSPBUF;
  4414  061F  1283               	bcf	3,5	;RP0=0, select bank0
  4415  0620  1303               	bcf	3,6	;RP1=0, select bank0
  4416  0621  0813               	movf	19,w	;volatile
  4417  0622  00C7               	movwf	??_Spi_ReadIB
  4418  0623  01C8               	clrf	??_Spi_ReadIB+1
  4419  0624  0846               	movf	Spi_ReadIB@DataBufferPtr,w
  4420  0625  0084               	movwf	4
  4421  0626  0847               	movf	??_Spi_ReadIB,w
  4422  0627  1383               	bcf	3,7	;select IRP bank0
  4423  0628  0080               	movwf	0
  4424  0629  0A84               	incf	4,f
  4425  062A  0848               	movf	??_Spi_ReadIB+1,w
  4426  062B  0080               	movwf	0
  4427  062C                     l2856:
  4428                           
  4429                           ;bsw/static/Spi.c: 148:     };bsw/static/Spi.c: 149:     return ((Std_ReturnType)0x00u);
  4430  062C  3000               	movlw	0
  4431  062D                     l523:
  4432  062D  0008               	return
  4433  062E                     __end_of_Spi_ReadIB:
  4434                           
  4435                           	psect	text34
  4436  0742                     __ptext34:	
  4437 ;; *************** function _SPI_Master_Wait *****************
  4438 ;; Defined at:
  4439 ;;		line 159 in file "bsw/static/Spi.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;		None
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;		None
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      void 
  4446 ;; Registers used:
  4447 ;;		wreg, status,2
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4453 ;;      Params:         0       0       0       0       0
  4454 ;;      Locals:         0       0       0       0       0
  4455 ;;      Temps:          0       0       0       0       0
  4456 ;;      Totals:         0       0       0       0       0
  4457 ;;Total ram usage:        0 bytes
  4458 ;; Hardware stack levels used:    1
  4459 ;; Hardware stack levels required when called:    3
  4460 ;; This function calls:
  4461 ;;		Nothing
  4462 ;; This function is called by:
  4463 ;;		_Spi_ReadIB
  4464 ;;		_Spi_WriteSlaveAddress
  4465 ;;		_Spi_WriteIB
  4466 ;;		_SPI_Master_Start
  4467 ;;		_SPI_Master_RepeatedStart
  4468 ;;		_SPI_Master_Stop
  4469 ;;		_SPI_ACK
  4470 ;;		_SPI_NACK
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           
  4475                           ;psect for function _SPI_Master_Wait
  4476  0742                     _SPI_Master_Wait:
  4477  0742                     l2752:	
  4478                           ;incstack = 0
  4479 ;; hardware stack exceeded
  4480                           ; Regs used in _SPI_Master_Wait: [wreg+status,2]
  4481                           
  4482  0742                     l529:	
  4483                           ;bsw/static/Spi.c: 161:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4484                           
  4485  0742  1683               	bsf	3,5	;RP0=1, select bank1
  4486  0743  1303               	bcf	3,6	;RP1=0, select bank1
  4487  0744  1914               	btfsc	20,2	;volatile
  4488  0745  2F47               	goto	u1731
  4489  0746  2F48               	goto	u1730
  4490  0747                     u1731:
  4491  0747  2F42               	goto	l529
  4492  0748                     u1730:
  4493  0748                     l2754:
  4494  0748  0811               	movf	17,w	;volatile
  4495  0749  391F               	andlw	31
  4496  074A  1D03               	btfss	3,2
  4497  074B  2F4D               	goto	u1741
  4498  074C  2F4E               	goto	u1740
  4499  074D                     u1741:
  4500  074D  2F42               	goto	l529
  4501  074E                     u1740:
  4502  074E                     l532:
  4503  074E  0008               	return
  4504  074F                     __end_of_SPI_Master_Wait:
  4505                           
  4506                           	psect	text35
  4507  07D4                     __ptext35:	
  4508 ;; *************** function _Rte_Call_SeatManager_rpHeightSensor_GetPosition *****************
  4509 ;; Defined at:
  4510 ;;		line 256 in file "rte/Rte.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;  Position        1    wreg     PTR unsigned char 
  4513 ;;		 -> SeatManager_AutoHeight@Position(1), 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;  Position        1   18[BANK0 ] PTR unsigned char 
  4516 ;;		 -> SeatManager_AutoHeight@Position(1), 
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1    wreg      unsigned char 
  4519 ;; Registers used:
  4520 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4526 ;;      Params:         0       0       0       0       0
  4527 ;;      Locals:         0       1       0       0       0
  4528 ;;      Temps:          0       0       0       0       0
  4529 ;;      Totals:         0       1       0       0       0
  4530 ;;Total ram usage:        1 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:    8
  4533 ;; This function calls:
  4534 ;;		_HeightSensor_GetPosition
  4535 ;; This function is called by:
  4536 ;;		_SeatManager_AutoHeight
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           
  4541                           ;psect for function _Rte_Call_SeatManager_rpHeightSensor_GetPosition
  4542  07D4                     _Rte_Call_SeatManager_rpHeightSensor_GetPosition:
  4543                           
  4544                           ;incstack = 0
  4545 ;; hardware stack exceeded
  4546                           ; Regs used in _Rte_Call_SeatManager_rpHeightSensor_GetPosition: [wreg-fsr0h+status,2+st
      +                          atus,0+btemp+1+pclath+cstack]
  4547                           ;Rte_Call_SeatManager_rpHeightSensor_GetPosition@Position stored from wreg
  4548  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  4549  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  4550  07D6  00D8               	movwf	Rte_Call_SeatManager_rpHeightSensor_GetPosition@Position
  4551  07D7                     l3132:
  4552                           
  4553                           ;rte/Rte.c: 256: Std_ReturnType Rte_Call_SeatManager_rpHeightSensor_GetPosition(SensorPo
      +                          sitionType* Position);rte/Rte.c: 257: {;rte/Rte.c: 258:  HeightSensor_GetPosition(Positi
      +                          on);
  4554  07D7  0858               	movf	Rte_Call_SeatManager_rpHeightSensor_GetPosition@Position,w
  4555  07D8  120A  118A  2463  120A  118A  	fcall	_HeightSensor_GetPosition
  4556  07DD                     l701:
  4557  07DD  0008               	return
  4558  07DE                     __end_of_Rte_Call_SeatManager_rpHeightSensor_GetPosition:
  4559                           
  4560                           	psect	text36
  4561  0463                     __ptext36:	
  4562 ;; *************** function _HeightSensor_GetPosition *****************
  4563 ;; Defined at:
  4564 ;;		line 25 in file "app/sensors_actuators/HeightSensor.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  Position        1    wreg     PTR unsigned char 
  4567 ;;		 -> SeatManager_AutoHeight@Position(1), 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;  Position        1   16[BANK0 ] PTR unsigned char 
  4570 ;;		 -> SeatManager_AutoHeight@Position(1), 
  4571 ;;  position        1   17[BANK0 ] unsigned char 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      void 
  4574 ;; Registers used:
  4575 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4581 ;;      Params:         0       0       0       0       0
  4582 ;;      Locals:         0       2       0       0       0
  4583 ;;      Temps:          0       0       0       0       0
  4584 ;;      Totals:         0       2       0       0       0
  4585 ;;Total ram usage:        2 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    7
  4588 ;; This function calls:
  4589 ;;		_Rte_Call_HeightSensor_rpIOGetHeight_IOGet
  4590 ;; This function is called by:
  4591 ;;		_Rte_Call_SeatManager_rpHeightSensor_GetPosition
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           
  4596                           ;psect for function _HeightSensor_GetPosition
  4597  0463                     _HeightSensor_GetPosition:
  4598                           
  4599                           ;incstack = 0
  4600 ;; hardware stack exceeded
  4601                           ; Regs used in _HeightSensor_GetPosition: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  4602                           ;HeightSensor_GetPosition@Position stored from wreg
  4603  0463  1283               	bcf	3,5	;RP0=0, select bank0
  4604  0464  1303               	bcf	3,6	;RP1=0, select bank0
  4605  0465  00D6               	movwf	HeightSensor_GetPosition@Position
  4606  0466                     l2982:
  4607                           
  4608                           ;app/sensors_actuators/HeightSensor.c: 25: void HeightSensor_GetPosition (SensorPosition
      +                          Type* Position);app/sensors_actuators/HeightSensor.c: 26: {;app/sensors_actuators/Height
      +                          Sensor.c: 27:  IoPositionSensorReadingType position;;app/sensors_actuators/HeightSensor.
      +                          c: 30:  (void)Rte_Call_HeightSensor_rpIOGetHeight_IOGet(&position);
  4609  0466  3057               	movlw	(low (HeightSensor_GetPosition@position| 0))& (0+255)
  4610  0467  120A  118A  27DE  120A  118A  	fcall	_Rte_Call_HeightSensor_rpIOGetHeight_IOGet
  4611  046C                     l2984:
  4612                           
  4613                           ;app/sensors_actuators/HeightSensor.c: 32:  if(position == 0)
  4614  046C  1283               	bcf	3,5	;RP0=0, select bank0
  4615  046D  1303               	bcf	3,6	;RP1=0, select bank0
  4616  046E  0857               	movf	HeightSensor_GetPosition@position,w
  4617  046F  1D03               	btfss	3,2
  4618  0470  2C72               	goto	u2111
  4619  0471  2C73               	goto	u2110
  4620  0472                     u2111:
  4621  0472  2C78               	goto	l2988
  4622  0473                     u2110:
  4623  0473                     l2986:
  4624                           
  4625                           ;app/sensors_actuators/HeightSensor.c: 33:  {;app/sensors_actuators/HeightSensor.c: 34: 
      +                            *Position = 0;
  4626  0473  0856               	movf	HeightSensor_GetPosition@Position,w
  4627  0474  0084               	movwf	4
  4628  0475  1383               	bcf	3,7	;select IRP bank0
  4629  0476  0180               	clrf	0
  4630                           
  4631                           ;app/sensors_actuators/HeightSensor.c: 35:  }
  4632  0477  2CA6               	goto	l177
  4633  0478                     l2988:
  4634  0478  0857               	movf	HeightSensor_GetPosition@position,w
  4635  0479  1903               	btfsc	3,2
  4636  047A  2C7C               	goto	u2121
  4637  047B  2C7D               	goto	u2120
  4638  047C                     u2121:
  4639  047C  2C8B               	goto	l2994
  4640  047D                     u2120:
  4641  047D                     l2990:
  4642  047D  3041               	movlw	65
  4643  047E  0257               	subwf	HeightSensor_GetPosition@position,w
  4644  047F  1803               	skipnc
  4645  0480  2C82               	goto	u2131
  4646  0481  2C83               	goto	u2130
  4647  0482                     u2131:
  4648  0482  2C8B               	goto	l2994
  4649  0483                     u2130:
  4650  0483                     l2992:
  4651                           
  4652                           ;app/sensors_actuators/HeightSensor.c: 37:  {;app/sensors_actuators/HeightSensor.c: 38: 
      +                            *Position = 64;
  4653  0483  3040               	movlw	64
  4654  0484  00FF               	movwf	btemp+1
  4655  0485  0856               	movf	HeightSensor_GetPosition@Position,w
  4656  0486  0084               	movwf	4
  4657  0487  087F               	movf	btemp+1,w
  4658  0488  1383               	bcf	3,7	;select IRP bank0
  4659  0489  0080               	movwf	0
  4660                           
  4661                           ;app/sensors_actuators/HeightSensor.c: 39:  }
  4662  048A  2CA6               	goto	l177
  4663  048B                     l2994:
  4664  048B  3041               	movlw	65
  4665  048C  0257               	subwf	HeightSensor_GetPosition@position,w
  4666  048D  1C03               	skipc
  4667  048E  2C90               	goto	u2141
  4668  048F  2C91               	goto	u2140
  4669  0490                     u2141:
  4670  0490  2C9F               	goto	l3000
  4671  0491                     u2140:
  4672  0491                     l2996:
  4673  0491  30C1               	movlw	193
  4674  0492  0257               	subwf	HeightSensor_GetPosition@position,w
  4675  0493  1803               	skipnc
  4676  0494  2C96               	goto	u2151
  4677  0495  2C97               	goto	u2150
  4678  0496                     u2151:
  4679  0496  2C9F               	goto	l3000
  4680  0497                     u2150:
  4681  0497                     l2998:
  4682                           
  4683                           ;app/sensors_actuators/HeightSensor.c: 41:  {;app/sensors_actuators/HeightSensor.c: 42: 
      +                            *Position = 128;
  4684  0497  3080               	movlw	128
  4685  0498  00FF               	movwf	btemp+1
  4686  0499  0856               	movf	HeightSensor_GetPosition@Position,w
  4687  049A  0084               	movwf	4
  4688  049B  087F               	movf	btemp+1,w
  4689  049C  1383               	bcf	3,7	;select IRP bank0
  4690  049D  0080               	movwf	0
  4691                           
  4692                           ;app/sensors_actuators/HeightSensor.c: 43:  }
  4693  049E  2CA6               	goto	l177
  4694  049F                     l3000:
  4695                           
  4696                           ;app/sensors_actuators/HeightSensor.c: 45:  {;app/sensors_actuators/HeightSensor.c: 46: 
      +                            *Position = 192;
  4697  049F  30C0               	movlw	192
  4698  04A0  00FF               	movwf	btemp+1
  4699  04A1  0856               	movf	HeightSensor_GetPosition@Position,w
  4700  04A2  0084               	movwf	4
  4701  04A3  087F               	movf	btemp+1,w
  4702  04A4  1383               	bcf	3,7	;select IRP bank0
  4703  04A5  0080               	movwf	0
  4704  04A6                     l177:
  4705  04A6  0008               	return
  4706  04A7                     __end_of_HeightSensor_GetPosition:
  4707                           
  4708                           	psect	text37
  4709  07DE                     __ptext37:	
  4710 ;; *************** function _Rte_Call_HeightSensor_rpIOGetHeight_IOGet *****************
  4711 ;; Defined at:
  4712 ;;		line 214 in file "rte/Rte.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  position        1    wreg     PTR unsigned char 
  4715 ;;		 -> HeightSensor_GetPosition@position(1), 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;  position        1   15[BANK0 ] PTR unsigned char 
  4718 ;;		 -> HeightSensor_GetPosition@position(1), 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  1    wreg      unsigned char 
  4721 ;; Registers used:
  4722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4728 ;;      Params:         0       0       0       0       0
  4729 ;;      Locals:         0       1       0       0       0
  4730 ;;      Temps:          0       0       0       0       0
  4731 ;;      Totals:         0       1       0       0       0
  4732 ;;Total ram usage:        1 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:    6
  4735 ;; This function calls:
  4736 ;;		_IoHwAbs_ECUGet_Height
  4737 ;; This function is called by:
  4738 ;;		_HeightSensor_GetPosition
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           
  4743                           ;psect for function _Rte_Call_HeightSensor_rpIOGetHeight_IOGet
  4744  07DE                     _Rte_Call_HeightSensor_rpIOGetHeight_IOGet:
  4745                           
  4746                           ;incstack = 0
  4747 ;; hardware stack exceeded
  4748                           ; Regs used in _Rte_Call_HeightSensor_rpIOGetHeight_IOGet: [wreg-fsr0h+status,2+status,0
      +                          +btemp+1+pclath+cstack]
  4749                           ;Rte_Call_HeightSensor_rpIOGetHeight_IOGet@position stored from wreg
  4750  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  4751  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  4752  07E0  00D5               	movwf	Rte_Call_HeightSensor_rpIOGetHeight_IOGet@position
  4753  07E1                     l2916:
  4754                           
  4755                           ;rte/Rte.c: 214: Std_ReturnType Rte_Call_HeightSensor_rpIOGetHeight_IOGet(IoPositionSens
      +                          orReadingType* position);rte/Rte.c: 215: {;rte/Rte.c: 216:  IoHwAbs_ECUGet_Height(positi
      +                          on);
  4756  07E1  0855               	movf	Rte_Call_HeightSensor_rpIOGetHeight_IOGet@position,w
  4757  07E2  120A  118A  268C  120A  118A  	fcall	_IoHwAbs_ECUGet_Height
  4758  07E7                     l680:
  4759  07E7  0008               	return
  4760  07E8                     __end_of_Rte_Call_HeightSensor_rpIOGetHeight_IOGet:
  4761                           
  4762                           	psect	text38
  4763  068C                     __ptext38:	
  4764 ;; *************** function _IoHwAbs_ECUGet_Height *****************
  4765 ;; Defined at:
  4766 ;;		line 46 in file "app/sensors_actuators/IoHwAbs.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  position        1    wreg     PTR unsigned char 
  4769 ;;		 -> HeightSensor_GetPosition@position(1), 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  position        1   14[BANK0 ] PTR unsigned char 
  4772 ;;		 -> HeightSensor_GetPosition@position(1), 
  4773 ;;  status          1   13[BANK0 ] unsigned char 
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      void 
  4776 ;; Registers used:
  4777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4783 ;;      Params:         0       0       0       0       0
  4784 ;;      Locals:         0       2       0       0       0
  4785 ;;      Temps:          0       0       0       0       0
  4786 ;;      Totals:         0       2       0       0       0
  4787 ;;Total ram usage:        2 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:    5
  4790 ;; This function calls:
  4791 ;;		_Adc_ReadGroup
  4792 ;; This function is called by:
  4793 ;;		_Rte_Call_HeightSensor_rpIOGetHeight_IOGet
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           
  4798                           ;psect for function _IoHwAbs_ECUGet_Height
  4799  068C                     _IoHwAbs_ECUGet_Height:
  4800                           
  4801                           ;incstack = 0
  4802 ;; hardware stack exceeded
  4803                           ; Regs used in _IoHwAbs_ECUGet_Height: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  4804                           ;IoHwAbs_ECUGet_Height@position stored from wreg
  4805  068C  1283               	bcf	3,5	;RP0=0, select bank0
  4806  068D  1303               	bcf	3,6	;RP1=0, select bank0
  4807  068E  00D4               	movwf	IoHwAbs_ECUGet_Height@position
  4808  068F                     l2872:
  4809                           
  4810                           ;app/sensors_actuators/IoHwAbs.c: 46: void IoHwAbs_ECUGet_Height (IoPositionSensorReadin
      +                          gType* position);app/sensors_actuators/IoHwAbs.c: 47: {;app/sensors_actuators/IoHwAbs.c:
      +                           48:  Std_ReturnType status;;app/sensors_actuators/IoHwAbs.c: 50:  status = Adc_ReadGrou
      +                          p(0U, IoHwAb_PositionSensorsReadings);
  4811  068F  3043               	movlw	(low (_IoHwAb_PositionSensorsReadings| 0))& (0+255)
  4812  0690  00FF               	movwf	btemp+1
  4813  0691  087F               	movf	btemp+1,w
  4814  0692  00CE               	movwf	Adc_ReadGroup@DataBufferPtr
  4815  0693  3000               	movlw	0
  4816  0694  120A  118A  204C  120A  118A  	fcall	_Adc_ReadGroup
  4817  0699  00FF               	movwf	btemp+1
  4818  069A  087F               	movf	btemp+1,w
  4819  069B  1283               	bcf	3,5	;RP0=0, select bank0
  4820  069C  1303               	bcf	3,6	;RP1=0, select bank0
  4821  069D  00D3               	movwf	IoHwAbs_ECUGet_Height@status
  4822  069E                     l2874:
  4823                           
  4824                           ;app/sensors_actuators/IoHwAbs.c: 52:  if(status == ((Std_ReturnType)0x00u))
  4825  069E  0853               	movf	IoHwAbs_ECUGet_Height@status,w
  4826  069F  1D03               	btfss	3,2
  4827  06A0  2EA2               	goto	u1981
  4828  06A1  2EA3               	goto	u1980
  4829  06A2                     u1981:
  4830  06A2  2EAA               	goto	l214
  4831  06A3                     u1980:
  4832  06A3                     l2876:
  4833                           
  4834                           ;app/sensors_actuators/IoHwAbs.c: 53:  {;app/sensors_actuators/IoHwAbs.c: 56:   *positio
      +                          n = (IoPositionSensorReadingType)IoHwAb_PositionSensorsReadings[0];
  4835  06A3  0843               	movf	_IoHwAb_PositionSensorsReadings,w
  4836  06A4  00FF               	movwf	btemp+1
  4837  06A5  0854               	movf	IoHwAbs_ECUGet_Height@position,w
  4838  06A6  0084               	movwf	4
  4839  06A7  087F               	movf	btemp+1,w
  4840  06A8  1383               	bcf	3,7	;select IRP bank0
  4841  06A9  0080               	movwf	0
  4842  06AA                     l214:	
  4843                           ;app/sensors_actuators/IoHwAbs.c: 57:  }
  4844                           
  4845  06AA  0008               	return
  4846  06AB                     __end_of_IoHwAbs_ECUGet_Height:
  4847                           
  4848                           	psect	text39
  4849  004C                     __ptext39:	
  4850 ;; *************** function _Adc_ReadGroup *****************
  4851 ;; Defined at:
  4852 ;;		line 96 in file "bsw/static/Adc.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  Group           1    wreg     unsigned char 
  4855 ;;  DataBufferPt    1    8[BANK0 ] PTR unsigned char 
  4856 ;;		 -> IoHwAb_PositionSensorsReadings(3), 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  Group           1    0[COMMON] unsigned char 
  4859 ;;  i               1   11[BANK0 ] unsigned char 
  4860 ;;  i               1   12[BANK0 ] unsigned char 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      unsigned char 
  4863 ;; Registers used:
  4864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4870 ;;      Params:         0       1       0       0       0
  4871 ;;      Locals:         0       2       0       0       0
  4872 ;;      Temps:          0       2       0       0       0
  4873 ;;      Totals:         0       5       0       0       0
  4874 ;;Total ram usage:        5 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    4
  4877 ;; This function calls:
  4878 ;;		_Adc_StartGroupConversion
  4879 ;;		___awdiv
  4880 ;; This function is called by:
  4881 ;;		_IoHwAbs_ECUGet_Height
  4882 ;;		_IoHwAbs_ECUGet_Incline
  4883 ;;		_IoHwAbs_ECUGet_Slide
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           
  4888                           ;psect for function _Adc_ReadGroup
  4889  004C                     _Adc_ReadGroup:
  4890  004C                     l2800:	
  4891                           ;incstack = 0
  4892 ;; hardware stack exceeded
  4893                           ; Regs used in _Adc_ReadGroup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4894                           
  4895                           
  4896                           ;bsw/static/Adc.c: 96: Std_ReturnType Adc_ReadGroup( Adc_GroupType Group, Adc_ValueGroup
      +                          Type* DataBufferPtr );bsw/static/Adc.c: 97: {;bsw/static/Adc.c: 116:     {;bsw/static/Ad
      +                          c.c: 117:         if(Adc_ThisConfiguration->Adc_GroupConvMode == ADC_CONV_MODE_ONESHOT_P
      +                          OLLING)
  4897  004C  1283               	bcf	3,5	;RP0=0, select bank0
  4898  004D  1303               	bcf	3,6	;RP1=0, select bank0
  4899  004E  0841               	movf	_Adc_ThisConfiguration,w
  4900  004F  3E07               	addlw	7
  4901  0050  0084               	movwf	4
  4902  0051  1383               	bcf	3,7	;select IRP bank0
  4903  0052  0800               	movf	0,w
  4904  0053  1D03               	btfss	3,2
  4905  0054  2856               	goto	u1851
  4906  0055  2857               	goto	u1850
  4907  0056                     u1851:
  4908  0056  28F3               	goto	l2826
  4909  0057                     u1850:
  4910  0057                     l2802:
  4911                           
  4912                           ;bsw/static/Adc.c: 118:         {;bsw/static/Adc.c: 119:          ADCON0 &= 0x11000101;
  4913  0057  3001               	movlw	1
  4914  0058  00FF               	movwf	btemp+1
  4915  0059  087F               	movf	btemp+1,w
  4916  005A  059F               	andwf	31,f	;volatile
  4917  005B                     l2804:
  4918                           
  4919                           ;bsw/static/Adc.c: 120:          (ADCON0 |= (Adc_ThisConfiguration->ArrayOfAdcChannels[0
      +                          ] << 3));
  4920  005B  0841               	movf	_Adc_ThisConfiguration,w
  4921  005C  3E02               	addlw	2
  4922  005D  0084               	movwf	4
  4923  005E  0800               	movf	0,w
  4924  005F  00CF               	movwf	??_Adc_ReadGroup
  4925  0060  3002               	movlw	2
  4926  0061                     u1865:
  4927  0061  1003               	clrc
  4928  0062  0DCF               	rlf	??_Adc_ReadGroup,f
  4929  0063  3EFF               	addlw	-1
  4930  0064  1D03               	skipz
  4931  0065  2861               	goto	u1865
  4932  0066  1003               	clrc
  4933  0067  0D4F               	rlf	??_Adc_ReadGroup,w
  4934  0068  00FF               	movwf	btemp+1
  4935  0069  087F               	movf	btemp+1,w
  4936  006A  049F               	iorwf	31,f	;volatile
  4937  006B                     l2806:
  4938                           
  4939                           ;bsw/static/Adc.c: 121:          if(Adc_ThisConfiguration->Adc_GroupAccessMode == ADC_AC
      +                          CESS_MODE_STREAMING)
  4940  006B  0841               	movf	_Adc_ThisConfiguration,w
  4941  006C  3E05               	addlw	5
  4942  006D  0084               	movwf	4
  4943  006E  0300               	decf	0,w
  4944  006F  1D03               	btfss	3,2
  4945  0070  2872               	goto	u1871
  4946  0071  2873               	goto	u1870
  4947  0072                     u1871:
  4948  0072  28BA               	goto	l2820
  4949  0073                     u1870:
  4950  0073                     l2808:
  4951                           
  4952                           ;bsw/static/Adc.c: 122:          {;bsw/static/Adc.c: 123:             for(uint8_t i = 0;
      +                           i<Adc_ThisConfiguration->Adc_NbSamples; i++)
  4953  0073  01D1               	clrf	Adc_ReadGroup@i
  4954  0074  28A9               	goto	l2816
  4955  0075                     l2810:
  4956                           
  4957                           ;bsw/static/Adc.c: 124:             {;bsw/static/Adc.c: 125:                Adc_StartGro
      +                          upConversion(0);
  4958  0075  3000               	movlw	0
  4959  0076  120A  118A  26F6  120A  118A  	fcall	_Adc_StartGroupConversion
  4960                           
  4961                           ;bsw/static/Adc.c: 126:                *DataBufferPtr++ = ((ADRESH << 8) + ADRESL)/2;
  4962  007B  3002               	movlw	2
  4963  007C  1283               	bcf	3,5	;RP0=0, select bank0
  4964  007D  1303               	bcf	3,6	;RP1=0, select bank0
  4965  007E  00C6               	movwf	___awdiv@divisor
  4966  007F  3000               	movlw	0
  4967  0080  00C7               	movwf	___awdiv@divisor+1
  4968  0081  081E               	movf	30,w	;volatile
  4969  0082  00CF               	movwf	??_Adc_ReadGroup
  4970  0083  01D0               	clrf	??_Adc_ReadGroup+1
  4971  0084  084F               	movf	??_Adc_ReadGroup,w
  4972  0085  00D0               	movwf	??_Adc_ReadGroup+1
  4973  0086  01CF               	clrf	??_Adc_ReadGroup
  4974  0087  1683               	bsf	3,5	;RP0=1, select bank1
  4975  0088  1303               	bcf	3,6	;RP1=0, select bank1
  4976  0089  081E               	movf	30,w	;volatile
  4977  008A  1283               	bcf	3,5	;RP0=0, select bank0
  4978  008B  1303               	bcf	3,6	;RP1=0, select bank0
  4979  008C  074F               	addwf	??_Adc_ReadGroup,w
  4980  008D  00C8               	movwf	___awdiv@dividend
  4981  008E  3000               	movlw	0
  4982  008F  1803               	skipnc
  4983  0090  3001               	movlw	1
  4984  0091  0750               	addwf	??_Adc_ReadGroup+1,w
  4985  0092  00C9               	movwf	___awdiv@dividend+1
  4986  0093  120A  118A  212F  120A  118A  	fcall	___awdiv
  4987  0098  1283               	bcf	3,5	;RP0=0, select bank0
  4988  0099  1303               	bcf	3,6	;RP1=0, select bank0
  4989  009A  0846               	movf	?___awdiv,w
  4990  009B  00FF               	movwf	btemp+1
  4991  009C  084E               	movf	Adc_ReadGroup@DataBufferPtr,w
  4992  009D  0084               	movwf	4
  4993  009E  087F               	movf	btemp+1,w
  4994  009F  1383               	bcf	3,7	;select IRP bank0
  4995  00A0  0080               	movwf	0
  4996  00A1                     l2812:
  4997  00A1  3001               	movlw	1
  4998  00A2  00FF               	movwf	btemp+1
  4999  00A3  087F               	movf	btemp+1,w
  5000  00A4  07CE               	addwf	Adc_ReadGroup@DataBufferPtr,f
  5001  00A5                     l2814:
  5002                           
  5003                           ;bsw/static/Adc.c: 127:             }
  5004  00A5  3001               	movlw	1
  5005  00A6  00FF               	movwf	btemp+1
  5006  00A7  087F               	movf	btemp+1,w
  5007  00A8  07D1               	addwf	Adc_ReadGroup@i,f
  5008  00A9                     l2816:
  5009  00A9  0841               	movf	_Adc_ThisConfiguration,w
  5010  00AA  3E06               	addlw	6
  5011  00AB  0084               	movwf	4
  5012  00AC  0800               	movf	0,w
  5013  00AD  0251               	subwf	Adc_ReadGroup@i,w
  5014  00AE  1C03               	skipc
  5015  00AF  28B1               	goto	u1881
  5016  00B0  28B2               	goto	u1880
  5017  00B1                     u1881:
  5018  00B1  2875               	goto	l2810
  5019  00B2                     u1880:
  5020  00B2                     l2818:
  5021                           
  5022                           ;bsw/static/Adc.c: 128:             Adc_ThisConfiguration->Adc_Status = ADC_STREAM_COMPL
      +                          ETED;
  5023  00B2  3004               	movlw	4
  5024  00B3  00FF               	movwf	btemp+1
  5025  00B4  0841               	movf	_Adc_ThisConfiguration,w
  5026  00B5  3E0B               	addlw	11
  5027  00B6  0084               	movwf	4
  5028  00B7  087F               	movf	btemp+1,w
  5029  00B8  0080               	movwf	0
  5030                           
  5031                           ;bsw/static/Adc.c: 129:          }
  5032  00B9  292D               	goto	l2844
  5033  00BA                     l2820:
  5034  00BA  0841               	movf	_Adc_ThisConfiguration,w
  5035  00BB  3E05               	addlw	5
  5036  00BC  0084               	movwf	4
  5037  00BD  0800               	movf	0,w
  5038  00BE  1D03               	btfss	3,2
  5039  00BF  28C1               	goto	u1891
  5040  00C0  28C2               	goto	u1890
  5041  00C1                     u1891:
  5042  00C1  292D               	goto	l2844
  5043  00C2                     u1890:
  5044  00C2                     l2822:
  5045                           
  5046                           ;bsw/static/Adc.c: 131:          {;bsw/static/Adc.c: 132:              Adc_StartGroupCon
      +                          version(0);
  5047  00C2  3000               	movlw	0
  5048  00C3  120A  118A  26F6  120A  118A  	fcall	_Adc_StartGroupConversion
  5049                           
  5050                           ;bsw/static/Adc.c: 133:              *DataBufferPtr++ = ((ADRESH << 8) + ADRESL)/2;
  5051  00C8  3002               	movlw	2
  5052  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  5053  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  5054  00CB  00C6               	movwf	___awdiv@divisor
  5055  00CC  3000               	movlw	0
  5056  00CD  00C7               	movwf	___awdiv@divisor+1
  5057  00CE  081E               	movf	30,w	;volatile
  5058  00CF  00CF               	movwf	??_Adc_ReadGroup
  5059  00D0  01D0               	clrf	??_Adc_ReadGroup+1
  5060  00D1  084F               	movf	??_Adc_ReadGroup,w
  5061  00D2  00D0               	movwf	??_Adc_ReadGroup+1
  5062  00D3  01CF               	clrf	??_Adc_ReadGroup
  5063  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  5064  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  5065  00D6  081E               	movf	30,w	;volatile
  5066  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  5067  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  5068  00D9  074F               	addwf	??_Adc_ReadGroup,w
  5069  00DA  00C8               	movwf	___awdiv@dividend
  5070  00DB  3000               	movlw	0
  5071  00DC  1803               	skipnc
  5072  00DD  3001               	movlw	1
  5073  00DE  0750               	addwf	??_Adc_ReadGroup+1,w
  5074  00DF  00C9               	movwf	___awdiv@dividend+1
  5075  00E0  120A  118A  212F  120A  118A  	fcall	___awdiv
  5076  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  5077  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  5078  00E7  0846               	movf	?___awdiv,w
  5079  00E8  00FF               	movwf	btemp+1
  5080  00E9  084E               	movf	Adc_ReadGroup@DataBufferPtr,w
  5081  00EA  0084               	movwf	4
  5082  00EB  087F               	movf	btemp+1,w
  5083  00EC  1383               	bcf	3,7	;select IRP bank0
  5084  00ED  0080               	movwf	0
  5085  00EE                     l2824:
  5086  00EE  3001               	movlw	1
  5087  00EF  00FF               	movwf	btemp+1
  5088  00F0  087F               	movf	btemp+1,w
  5089  00F1  07CE               	addwf	Adc_ReadGroup@DataBufferPtr,f
  5090  00F2  292D               	goto	l2844
  5091  00F3                     l2826:
  5092  00F3  0841               	movf	_Adc_ThisConfiguration,w
  5093  00F4  3E07               	addlw	7
  5094  00F5  0084               	movwf	4
  5095  00F6  0300               	decf	0,w
  5096  00F7  1D03               	btfss	3,2
  5097  00F8  28FA               	goto	u1901
  5098  00F9  28FB               	goto	u1900
  5099  00FA                     u1901:
  5100  00FA  292D               	goto	l2844
  5101  00FB                     u1900:
  5102  00FB                     l2828:
  5103                           
  5104                           ;bsw/static/Adc.c: 137:         {;bsw/static/Adc.c: 138:            for(uint8_t i = 0; i
      +                          <Adc_ThisConfiguration->Adc_NbChannels; i++)
  5105  00FB  01D2               	clrf	Adc_ReadGroup@i_495
  5106  00FC  2924               	goto	l2842
  5107  00FD                     l2830:
  5108                           
  5109                           ;bsw/static/Adc.c: 139:            {;bsw/static/Adc.c: 140:              *Adc_Result = D
      +                          ataBufferPtr++ ;
  5110  00FD  084E               	movf	Adc_ReadGroup@DataBufferPtr,w
  5111  00FE  00FF               	movwf	btemp+1
  5112  00FF  0840               	movf	_Adc_Result,w
  5113  0100  0084               	movwf	4
  5114  0101  087F               	movf	btemp+1,w
  5115  0102  0080               	movwf	0
  5116  0103                     l2832:
  5117  0103  3001               	movlw	1
  5118  0104  00FF               	movwf	btemp+1
  5119  0105  087F               	movf	btemp+1,w
  5120  0106  07CE               	addwf	Adc_ReadGroup@DataBufferPtr,f
  5121  0107                     l2834:
  5122                           
  5123                           ;bsw/static/Adc.c: 141:              ADCON0 &= 0x11000101;
  5124  0107  3001               	movlw	1
  5125  0108  00FF               	movwf	btemp+1
  5126  0109  087F               	movf	btemp+1,w
  5127  010A  059F               	andwf	31,f	;volatile
  5128  010B                     l2836:
  5129                           
  5130                           ;bsw/static/Adc.c: 142:              (ADCON0 |= (i << 3));
  5131  010B  0852               	movf	Adc_ReadGroup@i_495,w	;volatile
  5132  010C  00CF               	movwf	??_Adc_ReadGroup
  5133  010D  3002               	movlw	2
  5134  010E                     u1915:
  5135  010E  1003               	clrc
  5136  010F  0DCF               	rlf	??_Adc_ReadGroup,f
  5137  0110  3EFF               	addlw	-1
  5138  0111  1D03               	skipz
  5139  0112  290E               	goto	u1915
  5140  0113  1003               	clrc
  5141  0114  0D4F               	rlf	??_Adc_ReadGroup,w
  5142  0115  00FF               	movwf	btemp+1
  5143  0116  087F               	movf	btemp+1,w
  5144  0117  049F               	iorwf	31,f	;volatile
  5145  0118                     l2838:
  5146                           
  5147                           ;bsw/static/Adc.c: 143:              Adc_StartGroupConversion(0);
  5148  0118  3000               	movlw	0
  5149  0119  120A  118A  26F6  120A  118A  	fcall	_Adc_StartGroupConversion
  5150  011E                     l2840:
  5151                           
  5152                           ;bsw/static/Adc.c: 144:             }
  5153  011E  3001               	movlw	1
  5154  011F  00FF               	movwf	btemp+1
  5155  0120  087F               	movf	btemp+1,w
  5156  0121  1283               	bcf	3,5	;RP0=0, select bank0
  5157  0122  1303               	bcf	3,6	;RP1=0, select bank0
  5158  0123  07D2               	addwf	Adc_ReadGroup@i_495,f
  5159  0124                     l2842:
  5160  0124  0A41               	incf	_Adc_ThisConfiguration,w
  5161  0125  0084               	movwf	4
  5162  0126  1383               	bcf	3,7	;select IRP bank0
  5163  0127  0800               	movf	0,w
  5164  0128  0252               	subwf	Adc_ReadGroup@i_495,w
  5165  0129  1C03               	skipc
  5166  012A  292C               	goto	u1921
  5167  012B  292D               	goto	u1920
  5168  012C                     u1921:
  5169  012C  28FD               	goto	l2830
  5170  012D                     u1920:
  5171  012D                     l2844:
  5172                           
  5173                           ;bsw/static/Adc.c: 146:     };bsw/static/Adc.c: 147:   return ((Std_ReturnType)0x00u);
  5174  012D  3000               	movlw	0
  5175  012E                     l327:
  5176  012E  0008               	return
  5177  012F                     __end_of_Adc_ReadGroup:
  5178                           
  5179                           	psect	text40
  5180  012F                     __ptext40:	
  5181 ;; *************** function ___awdiv *****************
  5182 ;; Defined at:
  5183 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  divisor         2    0[BANK0 ] int 
  5186 ;;  dividend        2    2[BANK0 ] int 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  quotient        2    6[BANK0 ] int 
  5189 ;;  sign            1    5[BANK0 ] unsigned char 
  5190 ;;  counter         1    4[BANK0 ] unsigned char 
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  2    0[BANK0 ] int 
  5193 ;; Registers used:
  5194 ;;		wreg, status,2, status,0, btemp+1
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5200 ;;      Params:         0       4       0       0       0
  5201 ;;      Locals:         0       4       0       0       0
  5202 ;;      Temps:          0       0       0       0       0
  5203 ;;      Totals:         0       8       0       0       0
  5204 ;;Total ram usage:        8 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:    3
  5207 ;; This function calls:
  5208 ;;		Nothing
  5209 ;; This function is called by:
  5210 ;;		_Adc_ReadGroup
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           
  5215                           ;psect for function ___awdiv
  5216  012F                     ___awdiv:
  5217  012F                     l2756:	
  5218                           ;incstack = 0
  5219 ;; hardware stack exceeded
  5220                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  5221                           
  5222  012F  1283               	bcf	3,5	;RP0=0, select bank0
  5223  0130  1303               	bcf	3,6	;RP1=0, select bank0
  5224  0131  01CB               	clrf	___awdiv@sign
  5225  0132                     l2758:
  5226  0132  1FC7               	btfss	___awdiv@divisor+1,7
  5227  0133  2935               	goto	u1751
  5228  0134  2936               	goto	u1750
  5229  0135                     u1751:
  5230  0135  293D               	goto	l2764
  5231  0136                     u1750:
  5232  0136                     l2760:
  5233  0136  09C6               	comf	___awdiv@divisor,f
  5234  0137  09C7               	comf	___awdiv@divisor+1,f
  5235  0138  0AC6               	incf	___awdiv@divisor,f
  5236  0139  1903               	skipnz
  5237  013A  0AC7               	incf	___awdiv@divisor+1,f
  5238  013B                     l2762:
  5239  013B  01CB               	clrf	___awdiv@sign
  5240  013C  0ACB               	incf	___awdiv@sign,f
  5241  013D                     l2764:
  5242  013D  1FC9               	btfss	___awdiv@dividend+1,7
  5243  013E  2940               	goto	u1761
  5244  013F  2941               	goto	u1760
  5245  0140                     u1761:
  5246  0140  294A               	goto	l2770
  5247  0141                     u1760:
  5248  0141                     l2766:
  5249  0141  09C8               	comf	___awdiv@dividend,f
  5250  0142  09C9               	comf	___awdiv@dividend+1,f
  5251  0143  0AC8               	incf	___awdiv@dividend,f
  5252  0144  1903               	skipnz
  5253  0145  0AC9               	incf	___awdiv@dividend+1,f
  5254  0146                     l2768:
  5255  0146  3001               	movlw	1
  5256  0147  00FF               	movwf	btemp+1
  5257  0148  087F               	movf	btemp+1,w
  5258  0149  06CB               	xorwf	___awdiv@sign,f
  5259  014A                     l2770:
  5260  014A  01CC               	clrf	___awdiv@quotient
  5261  014B  01CD               	clrf	___awdiv@quotient+1
  5262  014C                     l2772:
  5263  014C  0846               	movf	___awdiv@divisor,w
  5264  014D  0447               	iorwf	___awdiv@divisor+1,w
  5265  014E  1903               	btfsc	3,2
  5266  014F  2951               	goto	u1771
  5267  0150  2952               	goto	u1770
  5268  0151                     u1771:
  5269  0151  2989               	goto	l2792
  5270  0152                     u1770:
  5271  0152                     l2774:
  5272  0152  01CA               	clrf	___awdiv@counter
  5273  0153  0ACA               	incf	___awdiv@counter,f
  5274  0154  2960               	goto	l2780
  5275  0155                     l2776:
  5276  0155  3001               	movlw	1
  5277  0156                     u1785:
  5278  0156  1003               	clrc
  5279  0157  0DC6               	rlf	___awdiv@divisor,f
  5280  0158  0DC7               	rlf	___awdiv@divisor+1,f
  5281  0159  3EFF               	addlw	-1
  5282  015A  1D03               	skipz
  5283  015B  2956               	goto	u1785
  5284  015C                     l2778:
  5285  015C  3001               	movlw	1
  5286  015D  00FF               	movwf	btemp+1
  5287  015E  087F               	movf	btemp+1,w
  5288  015F  07CA               	addwf	___awdiv@counter,f
  5289  0160                     l2780:
  5290  0160  1FC7               	btfss	___awdiv@divisor+1,7
  5291  0161  2963               	goto	u1791
  5292  0162  2964               	goto	u1790
  5293  0163                     u1791:
  5294  0163  2955               	goto	l2776
  5295  0164                     u1790:
  5296  0164                     l2782:
  5297  0164  3001               	movlw	1
  5298  0165                     u1805:
  5299  0165  1003               	clrc
  5300  0166  0DCC               	rlf	___awdiv@quotient,f
  5301  0167  0DCD               	rlf	___awdiv@quotient+1,f
  5302  0168  3EFF               	addlw	-1
  5303  0169  1D03               	skipz
  5304  016A  2965               	goto	u1805
  5305  016B  0847               	movf	___awdiv@divisor+1,w
  5306  016C  0249               	subwf	___awdiv@dividend+1,w
  5307  016D  1D03               	skipz
  5308  016E  2971               	goto	u1815
  5309  016F  0846               	movf	___awdiv@divisor,w
  5310  0170  0248               	subwf	___awdiv@dividend,w
  5311  0171                     u1815:
  5312  0171  1C03               	skipc
  5313  0172  2974               	goto	u1811
  5314  0173  2975               	goto	u1810
  5315  0174                     u1811:
  5316  0174  297C               	goto	l2788
  5317  0175                     u1810:
  5318  0175                     l2784:
  5319  0175  0846               	movf	___awdiv@divisor,w
  5320  0176  02C8               	subwf	___awdiv@dividend,f
  5321  0177  0847               	movf	___awdiv@divisor+1,w
  5322  0178  1C03               	skipc
  5323  0179  03C9               	decf	___awdiv@dividend+1,f
  5324  017A  02C9               	subwf	___awdiv@dividend+1,f
  5325  017B                     l2786:
  5326  017B  144C               	bsf	___awdiv@quotient,0
  5327  017C                     l2788:
  5328  017C  3001               	movlw	1
  5329  017D                     u1825:
  5330  017D  1003               	clrc
  5331  017E  0CC7               	rrf	___awdiv@divisor+1,f
  5332  017F  0CC6               	rrf	___awdiv@divisor,f
  5333  0180  3EFF               	addlw	-1
  5334  0181  1D03               	skipz
  5335  0182  297D               	goto	u1825
  5336  0183                     l2790:
  5337  0183  3001               	movlw	1
  5338  0184  02CA               	subwf	___awdiv@counter,f
  5339  0185  1D03               	btfss	3,2
  5340  0186  2988               	goto	u1831
  5341  0187  2989               	goto	u1830
  5342  0188                     u1831:
  5343  0188  2964               	goto	l2782
  5344  0189                     u1830:
  5345  0189                     l2792:
  5346  0189  084B               	movf	___awdiv@sign,w
  5347  018A  1903               	btfsc	3,2
  5348  018B  298D               	goto	u1841
  5349  018C  298E               	goto	u1840
  5350  018D                     u1841:
  5351  018D  2993               	goto	l2796
  5352  018E                     u1840:
  5353  018E                     l2794:
  5354  018E  09CC               	comf	___awdiv@quotient,f
  5355  018F  09CD               	comf	___awdiv@quotient+1,f
  5356  0190  0ACC               	incf	___awdiv@quotient,f
  5357  0191  1903               	skipnz
  5358  0192  0ACD               	incf	___awdiv@quotient+1,f
  5359  0193                     l2796:
  5360  0193  084D               	movf	___awdiv@quotient+1,w
  5361  0194  00C7               	movwf	?___awdiv+1
  5362  0195  084C               	movf	___awdiv@quotient,w
  5363  0196  00C6               	movwf	?___awdiv
  5364  0197                     l1201:
  5365  0197  0008               	return
  5366  0198                     __end_of___awdiv:
  5367                           
  5368                           	psect	text41
  5369  06F6                     __ptext41:	
  5370 ;; *************** function _Adc_StartGroupConversion *****************
  5371 ;; Defined at:
  5372 ;;		line 152 in file "bsw/static/Adc.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;  groupId         1    wreg     unsigned char 
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;  groupId         1    0[COMMON] unsigned char 
  5377 ;; Return value:  Size  Location     Type
  5378 ;;                  1    wreg      void 
  5379 ;; Registers used:
  5380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5386 ;;      Params:         0       0       0       0       0
  5387 ;;      Locals:         0       0       0       0       0
  5388 ;;      Temps:          0       0       0       0       0
  5389 ;;      Totals:         0       0       0       0       0
  5390 ;;Total ram usage:        0 bytes
  5391 ;; Hardware stack levels used:    1
  5392 ;; Hardware stack levels required when called:    3
  5393 ;; This function calls:
  5394 ;;		Nothing
  5395 ;; This function is called by:
  5396 ;;		_Adc_ReadGroup
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400                           
  5401                           ;psect for function _Adc_StartGroupConversion
  5402  06F6                     _Adc_StartGroupConversion:
  5403  06F6                     l2746:	
  5404                           ;incstack = 0
  5405 ;; hardware stack exceeded
  5406                           ; Regs used in _Adc_StartGroupConversion: [wreg-fsr0h+status,2+status,0+btemp+1]
  5407                           
  5408                           
  5409                           ;bsw/static/Adc.c: 152: void Adc_StartGroupConversion ( Adc_GroupType groupId );bsw/stat
      +                          ic/Adc.c: 153: {;bsw/static/Adc.c: 173:     {;bsw/static/Adc.c: 174:         (ADCON0|=(1
      +                          <<Pin2));
  5410  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  5411  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  5412  06F8  151F               	bsf	31,2	;volatile
  5413  06F9                     l2748:
  5414                           
  5415                           ;bsw/static/Adc.c: 175:         Adc_ThisConfiguration->Adc_Status = ADC_BUSY;
  5416  06F9  3002               	movlw	2
  5417  06FA  00FF               	movwf	btemp+1
  5418  06FB  0841               	movf	_Adc_ThisConfiguration,w
  5419  06FC  3E0B               	addlw	11
  5420  06FD  0084               	movwf	4
  5421  06FE  087F               	movf	btemp+1,w
  5422  06FF  1383               	bcf	3,7	;select IRP bank0
  5423  0700  0080               	movwf	0
  5424  0701                     l330:	
  5425                           ;bsw/static/Adc.c: 176:         while(( ADCON0 & (1<<Pin2) ));
  5426                           
  5427  0701  191F               	btfsc	31,2	;volatile
  5428  0702  2F04               	goto	u1721
  5429  0703  2F05               	goto	u1720
  5430  0704                     u1721:
  5431  0704  2F01               	goto	l330
  5432  0705                     u1720:
  5433  0705                     l2750:
  5434                           
  5435                           ;bsw/static/Adc.c: 177:         Adc_ThisConfiguration->Adc_Status = ADC_COMPLETED;
  5436  0705  3003               	movlw	3
  5437  0706  00FF               	movwf	btemp+1
  5438  0707  0841               	movf	_Adc_ThisConfiguration,w
  5439  0708  3E0B               	addlw	11
  5440  0709  0084               	movwf	4
  5441  070A  087F               	movf	btemp+1,w
  5442  070B  1383               	bcf	3,7	;select IRP bank0
  5443  070C  0080               	movwf	0
  5444  070D                     l333:
  5445  070D  0008               	return
  5446  070E                     __end_of_Adc_StartGroupConversion:
  5447                           
  5448                           	psect	text42
  5449  07E8                     __ptext42:	
  5450 ;; *************** function _Rte_Call_SeatManager_rpHeightMotor_Move *****************
  5451 ;; Defined at:
  5452 ;;		line 238 in file "rte/Rte.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;  Step            1    wreg     unsigned char 
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;  Step            1    8[BANK0 ] unsigned char 
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      unsigned char 
  5459 ;; Registers used:
  5460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5466 ;;      Params:         0       0       0       0       0
  5467 ;;      Locals:         0       1       0       0       0
  5468 ;;      Temps:          0       0       0       0       0
  5469 ;;      Totals:         0       1       0       0       0
  5470 ;;Total ram usage:        1 bytes
  5471 ;; Hardware stack levels used:    1
  5472 ;; Hardware stack levels required when called:    7
  5473 ;; This function calls:
  5474 ;;		_HeightMotor_Move
  5475 ;; This function is called by:
  5476 ;;		_SeatManager_AutoHeight
  5477 ;;		_SeatManager_SetHeight
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           
  5482                           ;psect for function _Rte_Call_SeatManager_rpHeightMotor_Move
  5483  07E8                     _Rte_Call_SeatManager_rpHeightMotor_Move:
  5484                           
  5485                           ;incstack = 0
  5486 ;; hardware stack exceeded
  5487                           ; Regs used in _Rte_Call_SeatManager_rpHeightMotor_Move: [wreg-fsr0h+status,2+status,0+b
      +                          temp+1+pclath+cstack]
  5488                           ;Rte_Call_SeatManager_rpHeightMotor_Move@Step stored from wreg
  5489  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  5490  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  5491  07EA  00CE               	movwf	Rte_Call_SeatManager_rpHeightMotor_Move@Step
  5492  07EB                     l3120:
  5493                           
  5494                           ;rte/Rte.c: 238: Std_ReturnType Rte_Call_SeatManager_rpHeightMotor_Move(StepMotorStepTyp
      +                          e Step);rte/Rte.c: 239: {;rte/Rte.c: 240:  HeightMotor_Move(Step);
  5495  07EB  084E               	movf	Rte_Call_SeatManager_rpHeightMotor_Move@Step,w
  5496  07EC  120A  118A  26DD  120A  118A  	fcall	_HeightMotor_Move
  5497  07F1                     l692:
  5498  07F1  0008               	return
  5499  07F2                     __end_of_Rte_Call_SeatManager_rpHeightMotor_Move:
  5500                           
  5501                           	psect	text43
  5502  06DD                     __ptext43:	
  5503 ;; *************** function _HeightMotor_Move *****************
  5504 ;; Defined at:
  5505 ;;		line 25 in file "app/sensors_actuators/HeightMotor.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;  Step            1    wreg     unsigned char 
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;  Step            1    7[BANK0 ] unsigned char 
  5510 ;; Return value:  Size  Location     Type
  5511 ;;                  1    wreg      void 
  5512 ;; Registers used:
  5513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5519 ;;      Params:         0       0       0       0       0
  5520 ;;      Locals:         0       1       0       0       0
  5521 ;;      Temps:          0       0       0       0       0
  5522 ;;      Totals:         0       1       0       0       0
  5523 ;;Total ram usage:        1 bytes
  5524 ;; Hardware stack levels used:    1
  5525 ;; Hardware stack levels required when called:    6
  5526 ;; This function calls:
  5527 ;;		_Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward
  5528 ;;		_Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse
  5529 ;; This function is called by:
  5530 ;;		_Rte_Call_SeatManager_rpHeightMotor_Move
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           
  5535                           ;psect for function _HeightMotor_Move
  5536  06DD                     _HeightMotor_Move:
  5537                           
  5538                           ;incstack = 0
  5539 ;; hardware stack exceeded
  5540                           ; Regs used in _HeightMotor_Move: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5541                           ;HeightMotor_Move@Step stored from wreg
  5542  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  5543  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  5544  06DF  00CD               	movwf	HeightMotor_Move@Step
  5545  06E0                     l2974:
  5546                           
  5547                           ;app/sensors_actuators/HeightMotor.c: 25: void HeightMotor_Move (StepMotorStepType Step)
      +                          ;app/sensors_actuators/HeightMotor.c: 26: {;app/sensors_actuators/HeightMotor.c: 27:  if
      +                          (Step == 0)
  5548  06E0  084D               	movf	HeightMotor_Move@Step,w
  5549  06E1  1D03               	btfss	3,2
  5550  06E2  2EE4               	goto	u2091
  5551  06E3  2EE5               	goto	u2090
  5552  06E4                     u2091:
  5553  06E4  2EEB               	goto	l2978
  5554  06E5                     u2090:
  5555  06E5                     l2976:
  5556                           
  5557                           ;app/sensors_actuators/HeightMotor.c: 28:  {;app/sensors_actuators/HeightMotor.c: 29:   
      +                          (void)Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward();
  5558  06E5  120A  158A  27C3  120A  118A  	fcall	_Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward
  5559                           
  5560                           ;app/sensors_actuators/HeightMotor.c: 30:  }
  5561  06EA  2EF5               	goto	l166
  5562  06EB                     l2978:
  5563  06EB  034D               	decf	HeightMotor_Move@Step,w
  5564  06EC  1D03               	btfss	3,2
  5565  06ED  2EEF               	goto	u2101
  5566  06EE  2EF0               	goto	u2100
  5567  06EF                     u2101:
  5568  06EF  2EF5               	goto	l166
  5569  06F0                     u2100:
  5570  06F0                     l2980:
  5571                           
  5572                           ;app/sensors_actuators/HeightMotor.c: 32:  {;app/sensors_actuators/HeightMotor.c: 33:   
      +                          (void)Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse();
  5573  06F0  120A  158A  27C9  120A  118A  	fcall	_Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse
  5574  06F5                     l166:	
  5575                           ;app/sensors_actuators/HeightMotor.c: 34:  }
  5576                           
  5577  06F5  0008               	return
  5578  06F6                     __end_of_HeightMotor_Move:
  5579                           
  5580                           	psect	text44
  5581  0FC9                     __ptext44:	
  5582 ;; *************** function _Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse *****************
  5583 ;; Defined at:
  5584 ;;		line 184 in file "rte/Rte.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;		None
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;		None
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  1    wreg      unsigned char 
  5591 ;; Registers used:
  5592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5598 ;;      Params:         0       0       0       0       0
  5599 ;;      Locals:         0       0       0       0       0
  5600 ;;      Temps:          0       0       0       0       0
  5601 ;;      Totals:         0       0       0       0       0
  5602 ;;Total ram usage:        0 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; Hardware stack levels required when called:    5
  5605 ;; This function calls:
  5606 ;;		_IoHwAbs_ECUSetReverse_Height
  5607 ;; This function is called by:
  5608 ;;		_HeightMotor_Move
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           
  5613                           ;psect for function _Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse
  5614  0FC9                     _Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse:
  5615  0FC9                     l2912:	
  5616                           ;incstack = 0
  5617 ;; hardware stack exceeded
  5618                           ; Regs used in _Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse: [wreg-fsr0h+status,2+st
      +                          atus,0+btemp+1+pclath+cstack]
  5619                           
  5620                           
  5621                           ;rte/Rte.c: 186:  IoHwAbs_ECUSetReverse_Height();
  5622  0FC9  120A  118A  27F2  120A  158A  	fcall	_IoHwAbs_ECUSetReverse_Height
  5623  0FCE                     l665:
  5624  0FCE  0008               	return
  5625  0FCF                     __end_of_Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse:
  5626                           
  5627                           	psect	text45
  5628  07F2                     __ptext45:	
  5629 ;; *************** function _IoHwAbs_ECUSetReverse_Height *****************
  5630 ;; Defined at:
  5631 ;;		line 207 in file "app/sensors_actuators/IoHwAbs.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;		None
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;		None
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      void 
  5638 ;; Registers used:
  5639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5645 ;;      Params:         0       0       0       0       0
  5646 ;;      Locals:         0       0       0       0       0
  5647 ;;      Temps:          0       0       0       0       0
  5648 ;;      Totals:         0       0       0       0       0
  5649 ;;Total ram usage:        0 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    4
  5652 ;; This function calls:
  5653 ;;		_Dio_WriteChannel
  5654 ;; This function is called by:
  5655 ;;		_Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           
  5660                           ;psect for function _IoHwAbs_ECUSetReverse_Height
  5661  07F2                     _IoHwAbs_ECUSetReverse_Height:
  5662  07F2                     l2902:	
  5663                           ;incstack = 0
  5664 ;; hardware stack exceeded
  5665                           ; Regs used in _IoHwAbs_ECUSetReverse_Height: [wreg-fsr0h+status,2+status,0+btemp+1+pcla
      +                          th+cstack]
  5666                           
  5667                           
  5668                           ;app/sensors_actuators/IoHwAbs.c: 210:  Dio_WriteChannel(DioConfg_DioChannel_HeightMotor
      +                          Ch, 0x00u);
  5669  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  5670  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  5671  07F4  01C6               	clrf	Dio_WriteChannel@Level
  5672  07F5  3000               	movlw	0
  5673  07F6  120A  118A  22B7  120A  118A  	fcall	_Dio_WriteChannel
  5674  07FB                     l241:
  5675  07FB  0008               	return
  5676  07FC                     __end_of_IoHwAbs_ECUSetReverse_Height:
  5677                           
  5678                           	psect	text46
  5679  0FC3                     __ptext46:	
  5680 ;; *************** function _Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward *****************
  5681 ;; Defined at:
  5682 ;;		line 178 in file "rte/Rte.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;		None
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;		None
  5687 ;; Return value:  Size  Location     Type
  5688 ;;                  1    wreg      unsigned char 
  5689 ;; Registers used:
  5690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5696 ;;      Params:         0       0       0       0       0
  5697 ;;      Locals:         0       0       0       0       0
  5698 ;;      Temps:          0       0       0       0       0
  5699 ;;      Totals:         0       0       0       0       0
  5700 ;;Total ram usage:        0 bytes
  5701 ;; Hardware stack levels used:    1
  5702 ;; Hardware stack levels required when called:    5
  5703 ;; This function calls:
  5704 ;;		_IoHwAbs_ECUSetForward_Height
  5705 ;; This function is called by:
  5706 ;;		_HeightMotor_Move
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           
  5711                           ;psect for function _Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward
  5712  0FC3                     _Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward:
  5713  0FC3                     l2908:	
  5714                           ;incstack = 0
  5715 ;; hardware stack exceeded
  5716                           ; Regs used in _Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward: [wreg-fsr0h+status,2+st
      +                          atus,0+btemp+1+pclath+cstack]
  5717                           
  5718                           
  5719                           ;rte/Rte.c: 180:  IoHwAbs_ECUSetForward_Height();
  5720  0FC3  120A  118A  2765  120A  158A  	fcall	_IoHwAbs_ECUSetForward_Height
  5721  0FC8                     l662:
  5722  0FC8  0008               	return
  5723  0FC9                     __end_of_Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward:
  5724                           
  5725                           	psect	text47
  5726  0765                     __ptext47:	
  5727 ;; *************** function _IoHwAbs_ECUSetForward_Height *****************
  5728 ;; Defined at:
  5729 ;;		line 159 in file "app/sensors_actuators/IoHwAbs.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;		None
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;		None
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  1    wreg      void 
  5736 ;; Registers used:
  5737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5743 ;;      Params:         0       0       0       0       0
  5744 ;;      Locals:         0       0       0       0       0
  5745 ;;      Temps:          0       0       0       0       0
  5746 ;;      Totals:         0       0       0       0       0
  5747 ;;Total ram usage:        0 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:    4
  5750 ;; This function calls:
  5751 ;;		_Dio_WriteChannel
  5752 ;; This function is called by:
  5753 ;;		_Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           
  5758                           ;psect for function _IoHwAbs_ECUSetForward_Height
  5759  0765                     _IoHwAbs_ECUSetForward_Height:
  5760  0765                     l2896:	
  5761                           ;incstack = 0
  5762 ;; hardware stack exceeded
  5763                           ; Regs used in _IoHwAbs_ECUSetForward_Height: [wreg-fsr0h+status,2+status,0+btemp+1+pcla
      +                          th+cstack]
  5764                           
  5765                           
  5766                           ;app/sensors_actuators/IoHwAbs.c: 162:  Dio_WriteChannel(DioConfg_DioChannel_HeightMotor
      +                          Ch, 0x01u);
  5767  0765  1283               	bcf	3,5	;RP0=0, select bank0
  5768  0766  1303               	bcf	3,6	;RP1=0, select bank0
  5769  0767  01C6               	clrf	Dio_WriteChannel@Level
  5770  0768  0AC6               	incf	Dio_WriteChannel@Level,f
  5771  0769  3000               	movlw	0
  5772  076A  120A  118A  22B7  120A  118A  	fcall	_Dio_WriteChannel
  5773  076F                     l232:
  5774  076F  0008               	return
  5775  0770                     __end_of_IoHwAbs_ECUSetForward_Height:
  5776                           
  5777                           	psect	text48
  5778  02B7                     __ptext48:	
  5779 ;; *************** function _Dio_WriteChannel *****************
  5780 ;; Defined at:
  5781 ;;		line 31 in file "bsw/static/Dio.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;  ChannelId       1    wreg     unsigned char 
  5784 ;;  Level           1    0[BANK0 ] enum E945
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  ChannelId       1    6[BANK0 ] unsigned char 
  5787 ;;  Port_Ptr        2    4[BANK0 ] PTR volatile unsigned ch
  5788 ;;		 -> RAM(512), NULL(0), 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  1    wreg      void 
  5791 ;; Registers used:
  5792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5798 ;;      Params:         0       1       0       0       0
  5799 ;;      Locals:         0       3       0       0       0
  5800 ;;      Temps:          0       3       0       0       0
  5801 ;;      Totals:         0       7       0       0       0
  5802 ;;Total ram usage:        7 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    3
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_IoHwAbs_ECUSetForward_Height
  5809 ;;		_IoHwAbs_ECUSetForward_Incline
  5810 ;;		_IoHwAbs_ECUSetForward_Slide
  5811 ;;		_IoHwAbs_ECUSetReverse_Height
  5812 ;;		_IoHwAbs_ECUSetReverse_Incline
  5813 ;;		_IoHwAbs_ECUSetReverse_Slide
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           
  5818                           ;psect for function _Dio_WriteChannel
  5819  02B7                     _Dio_WriteChannel:
  5820                           
  5821                           ;incstack = 0
  5822 ;; hardware stack exceeded
  5823                           ; Regs used in _Dio_WriteChannel: [wreg-fsr0h+status,2+status,0+btemp+1]
  5824                           ;Dio_WriteChannel@ChannelId stored from wreg
  5825  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  5826  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  5827  02B9  00CC               	movwf	Dio_WriteChannel@ChannelId
  5828  02BA                     l2860:
  5829  02BA                     l2862:
  5830                           
  5831                           ;bsw/static/Dio.c: 44:         Port_Ptr = &(*((volatile uint8*)(((uint8)0x005)+((uint8)D
      +                          io_ConfigGroupChannel.Channels[ChannelId].Port))));
  5832  02BA  084C               	movf	Dio_WriteChannel@ChannelId,w
  5833  02BB  00C7               	movwf	??_Dio_WriteChannel
  5834  02BC  0747               	addwf	??_Dio_WriteChannel,w
  5835  02BD  3E65               	addlw	(low (_Dio_ConfigGroupChannel| 0))& (0+255)
  5836  02BE  0084               	movwf	4
  5837  02BF  1383               	bcf	3,7	;select IRP bank0
  5838  02C0  0800               	movf	0,w
  5839  02C1  00C8               	movwf	??_Dio_WriteChannel+1
  5840  02C2  01C9               	clrf	??_Dio_WriteChannel+2
  5841  02C3  0848               	movf	??_Dio_WriteChannel+1,w
  5842  02C4  3E05               	addlw	5
  5843  02C5  00CA               	movwf	Dio_WriteChannel@Port_Ptr
  5844  02C6  0849               	movf	??_Dio_WriteChannel+2,w
  5845  02C7  1803               	skipnc
  5846  02C8  3E01               	addlw	1
  5847  02C9  3E00               	addlw	0
  5848  02CA  00CB               	movwf	Dio_WriteChannel@Port_Ptr+1
  5849  02CB                     l2864:
  5850                           
  5851                           ;bsw/static/Dio.c: 46:         if (Level == HIGH)
  5852  02CB  0346               	decf	Dio_WriteChannel@Level,w
  5853  02CC  1D03               	btfss	3,2
  5854  02CD  2ACF               	goto	u1941
  5855  02CE  2AD0               	goto	u1940
  5856  02CF                     u1941:
  5857  02CF  2AE8               	goto	l2868
  5858  02D0                     u1940:
  5859  02D0                     l2866:
  5860                           
  5861                           ;bsw/static/Dio.c: 47:             (*Port_Ptr|=(1<<Dio_ConfigGroupChannel.Channels[Chann
      +                          elId].Channel));
  5862  02D0  3001               	movlw	1
  5863  02D1  00C7               	movwf	??_Dio_WriteChannel
  5864  02D2  084C               	movf	Dio_WriteChannel@ChannelId,w
  5865  02D3  00C8               	movwf	??_Dio_WriteChannel+1
  5866  02D4  0748               	addwf	??_Dio_WriteChannel+1,w
  5867  02D5  3E66               	addlw	(low ((_Dio_ConfigGroupChannel| 0+1)))& (0+255)
  5868  02D6  0084               	movwf	4
  5869  02D7  0A00               	incf	0,w
  5870  02D8  2ADB               	goto	u1954
  5871  02D9                     u1955:
  5872  02D9  1003               	clrc
  5873  02DA  0DC7               	rlf	??_Dio_WriteChannel,f
  5874  02DB                     u1954:
  5875  02DB  3EFF               	addlw	-1
  5876  02DC  1D03               	skipz
  5877  02DD  2AD9               	goto	u1955
  5878  02DE  0847               	movf	??_Dio_WriteChannel,w
  5879  02DF  00FF               	movwf	btemp+1
  5880  02E0  084A               	movf	Dio_WriteChannel@Port_Ptr,w
  5881  02E1  0084               	movwf	4
  5882  02E2  1783               	bsf	3,7
  5883  02E3  1C4B               	btfss	Dio_WriteChannel@Port_Ptr+1,0
  5884  02E4  1383               	bcf	3,7
  5885  02E5  087F               	movf	btemp+1,w
  5886  02E6  0480               	iorwf	0,f
  5887  02E7  2B05               	goto	l404
  5888  02E8                     l2868:
  5889  02E8  0846               	movf	Dio_WriteChannel@Level,w
  5890  02E9  1D03               	btfss	3,2
  5891  02EA  2AEC               	goto	u1961
  5892  02EB  2AED               	goto	u1960
  5893  02EC                     u1961:
  5894  02EC  2B05               	goto	l404
  5895  02ED                     u1960:
  5896  02ED                     l2870:
  5897                           
  5898                           ;bsw/static/Dio.c: 49:             (*Port_Ptr&=(~(1<<Dio_ConfigGroupChannel.Channels[Cha
      +                          nnelId].Channel)));
  5899  02ED  3001               	movlw	1
  5900  02EE  00C7               	movwf	??_Dio_WriteChannel
  5901  02EF  084C               	movf	Dio_WriteChannel@ChannelId,w
  5902  02F0  00C8               	movwf	??_Dio_WriteChannel+1
  5903  02F1  0748               	addwf	??_Dio_WriteChannel+1,w
  5904  02F2  3E66               	addlw	(low ((_Dio_ConfigGroupChannel| 0+1)))& (0+255)
  5905  02F3  0084               	movwf	4
  5906  02F4  0A00               	incf	0,w
  5907  02F5  2AF8               	goto	u1974
  5908  02F6                     u1975:
  5909  02F6  1003               	clrc
  5910  02F7  0DC7               	rlf	??_Dio_WriteChannel,f
  5911  02F8                     u1974:
  5912  02F8  3EFF               	addlw	-1
  5913  02F9  1D03               	skipz
  5914  02FA  2AF6               	goto	u1975
  5915  02FB  0847               	movf	??_Dio_WriteChannel,w
  5916  02FC  3AFF               	xorlw	255
  5917  02FD  00FF               	movwf	btemp+1
  5918  02FE  084A               	movf	Dio_WriteChannel@Port_Ptr,w
  5919  02FF  0084               	movwf	4
  5920  0300  1783               	bsf	3,7
  5921  0301  1C4B               	btfss	Dio_WriteChannel@Port_Ptr+1,0
  5922  0302  1383               	bcf	3,7
  5923  0303  087F               	movf	btemp+1,w
  5924  0304  0580               	andwf	0,f
  5925  0305                     l404:
  5926  0305  0008               	return
  5927  0306                     __end_of_Dio_WriteChannel:
  5928                           
  5929                           	psect	text49
  5930  01FF                     __ptext49:	
  5931 ;; *************** function _IsMotorAdjustNeeded *****************
  5932 ;; Defined at:
  5933 ;;		line 15 in file "app/appswcs/SeatManager.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;  Position        1    wreg     unsigned char 
  5936 ;;  Weight          1    0[BANK0 ] unsigned char 
  5937 ;;  Step            1    1[BANK0 ] PTR unsigned char 
  5938 ;;		 -> SeatManager_AutoIncline@Step(1), SeatManager_AutoSlide@Step(1), SeatManager_AutoHeight@Step(1), 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  Position        1    4[BANK0 ] unsigned char 
  5941 ;;  adjustMotor     1    5[BANK0 ] unsigned char 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  1    wreg      unsigned char 
  5944 ;; Registers used:
  5945 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5951 ;;      Params:         0       2       0       0       0
  5952 ;;      Locals:         0       2       0       0       0
  5953 ;;      Temps:          0       2       0       0       0
  5954 ;;      Totals:         0       6       0       0       0
  5955 ;;Total ram usage:        6 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:    3
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_SeatManager_AutoHeight
  5962 ;;		_SeatManager_AutoSlide
  5963 ;;		_SeatManager_AutoIncline
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           
  5968                           ;psect for function _IsMotorAdjustNeeded
  5969  01FF                     _IsMotorAdjustNeeded:
  5970                           
  5971                           ;incstack = 0
  5972                           ; Regs used in _IsMotorAdjustNeeded: [wreg-fsr0h+status,2+status,0]
  5973                           ;IsMotorAdjustNeeded@Position stored from wreg
  5974  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  5975  0200  1303               	bcf	3,6	;RP1=0, select bank0
  5976  0201  00CA               	movwf	IsMotorAdjustNeeded@Position
  5977  0202                     l3060:
  5978                           
  5979                           ;app/appswcs/SeatManager.c: 15: static boolean IsMotorAdjustNeeded(SensorPositionType Po
      +                          sition, SensorWeightType Weight, StepMotorStepType* Step);app/appswcs/SeatManager.c: 16:
      +                           {;app/appswcs/SeatManager.c: 17:  boolean adjustMotor = (0u);
  5980  0202  01CB               	clrf	IsMotorAdjustNeeded@adjustMotor
  5981                           
  5982                           ;app/appswcs/SeatManager.c: 19:  switch(Position)
  5983  0203  2A46               	goto	l3108
  5984  0204                     l3062:
  5985                           
  5986                           ;app/appswcs/SeatManager.c: 22:    if(Weight > 60)
  5987  0204  303D               	movlw	61
  5988  0205  0246               	subwf	IsMotorAdjustNeeded@Weight,w
  5989  0206  1C03               	skipc
  5990  0207  2A09               	goto	u2301
  5991  0208  2A0A               	goto	u2300
  5992  0209                     u2301:
  5993  0209  2A5C               	goto	l3110
  5994  020A                     u2300:
  5995  020A                     l3064:
  5996                           
  5997                           ;app/appswcs/SeatManager.c: 23:    {;app/appswcs/SeatManager.c: 24:     *Step = 0;
  5998  020A  0847               	movf	IsMotorAdjustNeeded@Step,w
  5999  020B  0084               	movwf	4
  6000  020C  1383               	bcf	3,7	;select IRP bank0
  6001  020D  0180               	clrf	0
  6002  020E                     l3066:
  6003                           
  6004                           ;app/appswcs/SeatManager.c: 25:     adjustMotor = (1u);
  6005  020E  01CB               	clrf	IsMotorAdjustNeeded@adjustMotor
  6006  020F  0ACB               	incf	IsMotorAdjustNeeded@adjustMotor,f
  6007  0210  2A5C               	goto	l3110
  6008  0211                     l3068:
  6009                           
  6010                           ;app/appswcs/SeatManager.c: 30:    if(Weight > 80)
  6011  0211  3051               	movlw	81
  6012  0212  0246               	subwf	IsMotorAdjustNeeded@Weight,w
  6013  0213  1C03               	skipc
  6014  0214  2A16               	goto	u2311
  6015  0215  2A17               	goto	u2310
  6016  0216                     u2311:
  6017  0216  2A18               	goto	l3074
  6018  0217                     u2310:
  6019  0217  2A0A               	goto	l3064
  6020  0218                     l3074:
  6021  0218  3051               	movlw	81
  6022  0219  0246               	subwf	IsMotorAdjustNeeded@Weight,w
  6023  021A  1803               	skipnc
  6024  021B  2A1D               	goto	u2321
  6025  021C  2A1E               	goto	u2320
  6026  021D                     u2321:
  6027  021D  2A25               	goto	l3080
  6028  021E                     u2320:
  6029  021E                     l3076:
  6030  021E  303C               	movlw	60
  6031  021F  0246               	subwf	IsMotorAdjustNeeded@Weight,w
  6032  0220  1C03               	skipc
  6033  0221  2A23               	goto	u2331
  6034  0222  2A24               	goto	u2330
  6035  0223                     u2331:
  6036  0223  2A25               	goto	l3080
  6037  0224                     u2330:
  6038  0224  2A5C               	goto	l3110
  6039  0225                     l3080:
  6040                           
  6041                           ;app/appswcs/SeatManager.c: 40:    {;app/appswcs/SeatManager.c: 41:     *Step = 1;
  6042  0225  0847               	movf	IsMotorAdjustNeeded@Step,w
  6043  0226  0084               	movwf	4
  6044  0227  1383               	bcf	3,7	;select IRP bank0
  6045  0228  0180               	clrf	0
  6046  0229  0A80               	incf	0,f
  6047  022A  2A0E               	goto	l3066
  6048  022B                     l3084:
  6049                           
  6050                           ;app/appswcs/SeatManager.c: 47:    if(Weight > 100)
  6051  022B  3065               	movlw	101
  6052  022C  0246               	subwf	IsMotorAdjustNeeded@Weight,w
  6053  022D  1C03               	skipc
  6054  022E  2A30               	goto	u2341
  6055  022F  2A31               	goto	u2340
  6056  0230                     u2341:
  6057  0230  2A32               	goto	l3090
  6058  0231                     u2340:
  6059  0231  2A0A               	goto	l3064
  6060  0232                     l3090:
  6061  0232  3065               	movlw	101
  6062  0233  0246               	subwf	IsMotorAdjustNeeded@Weight,w
  6063  0234  1803               	skipnc
  6064  0235  2A37               	goto	u2351
  6065  0236  2A38               	goto	u2350
  6066  0237                     u2351:
  6067  0237  2A25               	goto	l3080
  6068  0238                     u2350:
  6069  0238                     l3092:
  6070  0238  3050               	movlw	80
  6071  0239  0246               	subwf	IsMotorAdjustNeeded@Weight,w
  6072  023A  1C03               	skipc
  6073  023B  2A3D               	goto	u2361
  6074  023C  2A3E               	goto	u2360
  6075  023D                     u2361:
  6076  023D  2A25               	goto	l3080
  6077  023E                     u2360:
  6078  023E  2A5C               	goto	l3110
  6079  023F                     l3100:
  6080                           
  6081                           ;app/appswcs/SeatManager.c: 64:    if(Weight < 100)
  6082  023F  3064               	movlw	100
  6083  0240  0246               	subwf	IsMotorAdjustNeeded@Weight,w
  6084  0241  1803               	skipnc
  6085  0242  2A44               	goto	u2371
  6086  0243  2A45               	goto	u2370
  6087  0244                     u2371:
  6088  0244  2A5C               	goto	l3110
  6089  0245                     u2370:
  6090  0245  2A25               	goto	l3080
  6091  0246                     l3108:
  6092  0246  084A               	movf	IsMotorAdjustNeeded@Position,w
  6093  0247  00C8               	movwf	??_IsMotorAdjustNeeded
  6094  0248  01C9               	clrf	??_IsMotorAdjustNeeded+1
  6095                           
  6096                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6097                           ; Switch size 1, requested type "simple"
  6098                           ; Number of cases is 1, Range of values is 0 to 0
  6099                           ; switch strategies available:
  6100                           ; Name         Instructions Cycles
  6101                           ; simple_byte            4     3 (average)
  6102                           ; direct_byte           11     8 (fixed)
  6103                           ; jumptable            260     6 (fixed)
  6104                           ;	Chosen strategy is simple_byte
  6105  0249  0849               	movf	??_IsMotorAdjustNeeded+1,w
  6106  024A  3A00               	xorlw	0	; case 0
  6107  024B  1903               	skipnz
  6108  024C  2A4E               	goto	l4092
  6109  024D  2A5C               	goto	l3110
  6110  024E                     l4092:
  6111                           
  6112                           ; Switch size 1, requested type "simple"
  6113                           ; Number of cases is 4, Range of values is 0 to 192
  6114                           ; switch strategies available:
  6115                           ; Name         Instructions Cycles
  6116                           ; simple_byte           13     7 (average)
  6117                           ; jumptable            260     6 (fixed)
  6118                           ;	Chosen strategy is simple_byte
  6119  024E  0848               	movf	??_IsMotorAdjustNeeded,w
  6120  024F  3A00               	xorlw	0	; case 0
  6121  0250  1903               	skipnz
  6122  0251  2A04               	goto	l3062
  6123  0252  3A40               	xorlw	64	; case 64
  6124  0253  1903               	skipnz
  6125  0254  2A11               	goto	l3068
  6126  0255  3AC0               	xorlw	192	; case 128
  6127  0256  1903               	skipnz
  6128  0257  2A2B               	goto	l3084
  6129  0258  3A40               	xorlw	64	; case 192
  6130  0259  1903               	skipnz
  6131  025A  2A3F               	goto	l3100
  6132  025B  2A5C               	goto	l3110
  6133  025C                     l3110:
  6134                           
  6135                           ;app/appswcs/SeatManager.c: 75:  return adjustMotor;
  6136  025C  084B               	movf	IsMotorAdjustNeeded@adjustMotor,w
  6137  025D                     l125:
  6138  025D  0008               	return
  6139  025E                     __end_of_IsMotorAdjustNeeded:
  6140                           
  6141                           	psect	text50
  6142  07FC                     __ptext50:	
  6143 ;; *************** function _Os_TerminateTask *****************
  6144 ;; Defined at:
  6145 ;;		line 39 in file "bsw/static/Os.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;		None
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;		None
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      void 
  6152 ;; Registers used:
  6153 ;;		None
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6159 ;;      Params:         0       0       0       0       0
  6160 ;;      Locals:         0       0       0       0       0
  6161 ;;      Temps:          0       0       0       0       0
  6162 ;;      Totals:         0       0       0       0       0
  6163 ;;Total ram usage:        0 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; Hardware stack levels required when called:    3
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		_CyclicTask
  6170 ;;		_AppTsk
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           
  6175                           ;psect for function _Os_TerminateTask
  6176  07FC                     _Os_TerminateTask:
  6177  07FC                     l438:	
  6178                           ;incstack = 0
  6179                           ; Regs used in _Os_TerminateTask: []
  6180                           
  6181  07FC  0008               	return
  6182  07FD                     __end_of_Os_TerminateTask:
  6183                           
  6184                           	psect	text51
  6185  0306                     __ptext51:	
  6186 ;; *************** function _ISR *****************
  6187 ;; Defined at:
  6188 ;;		line 29 in file "bsw/static/interrupt.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;		None
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;		None
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      void 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6202 ;;      Params:         0       0       0       0       0
  6203 ;;      Locals:         0       0       0       0       0
  6204 ;;      Temps:          4       0       0       0       0
  6205 ;;      Totals:         4       0       0       0       0
  6206 ;;Total ram usage:        4 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    2
  6209 ;; This function calls:
  6210 ;;		_Adc_CallbackFn
  6211 ;;		_Uart_RX_Callback
  6212 ;;		_Uart_TX_Callback
  6213 ;; This function is called by:
  6214 ;;		Interrupt level 1
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           
  6219                           ;psect for function _ISR
  6220  0306                     _ISR:
  6221  0306                     i1l3802:
  6222                           
  6223                           ;bsw/static/interrupt.c: 31:   if(TMR1IF)
  6224  0306  1C0C               	btfss	12,0	;volatile
  6225  0307  2B09               	goto	u329_21
  6226  0308  2B0A               	goto	u329_20
  6227  0309                     u329_21:
  6228  0309  2B10               	goto	i1l3806
  6229  030A                     u329_20:
  6230  030A                     i1l3804:
  6231                           
  6232                           ;bsw/static/interrupt.c: 32:   {;bsw/static/interrupt.c: 33:       callbackTable[TIMER](
      +                          );
  6233  030A  0826               	movf	_callbackTable,w
  6234  030B  120A  118A  203D  120A  118A  	fcall	i1fptable
  6235  0310                     i1l3806:
  6236                           
  6237                           ;bsw/static/interrupt.c: 35:   if(ADIF)
  6238  0310  1283               	bcf	3,5	;RP0=0, select bank0
  6239  0311  1303               	bcf	3,6	;RP1=0, select bank0
  6240  0312  1F0C               	btfss	12,6	;volatile
  6241  0313  2B15               	goto	u330_21
  6242  0314  2B16               	goto	u330_20
  6243  0315                     u330_21:
  6244  0315  2B1C               	goto	i1l3810
  6245  0316                     u330_20:
  6246  0316                     i1l3808:
  6247                           
  6248                           ;bsw/static/interrupt.c: 36:   {;bsw/static/interrupt.c: 37:       callbackTable[ADC]();
  6249  0316  0827               	movf	low ((_callbackTable| 0+1)),w
  6250  0317  120A  118A  203D  120A  118A  	fcall	i1fptable
  6251  031C                     i1l3810:
  6252                           
  6253                           ;bsw/static/interrupt.c: 39:   if (TXIF)
  6254  031C  1283               	bcf	3,5	;RP0=0, select bank0
  6255  031D  1303               	bcf	3,6	;RP1=0, select bank0
  6256  031E  1E0C               	btfss	12,4	;volatile
  6257  031F  2B21               	goto	u331_21
  6258  0320  2B22               	goto	u331_20
  6259  0321                     u331_21:
  6260  0321  2B2B               	goto	i1l3816
  6261  0322                     u331_20:
  6262  0322                     i1l3812:
  6263                           
  6264                           ;bsw/static/interrupt.c: 40:   {;bsw/static/interrupt.c: 41:     callbackTable[UART_TX](
      +                          );
  6265  0322  0828               	movf	low ((_callbackTable| 0+2)),w
  6266  0323  120A  118A  203D  120A  118A  	fcall	i1fptable
  6267  0328                     i1l3814:
  6268                           
  6269                           ;bsw/static/interrupt.c: 42:     TXIF = 0;
  6270  0328  1283               	bcf	3,5	;RP0=0, select bank0
  6271  0329  1303               	bcf	3,6	;RP1=0, select bank0
  6272  032A  120C               	bcf	12,4	;volatile
  6273  032B                     i1l3816:
  6274                           
  6275                           ;bsw/static/interrupt.c: 44:   if (RCIF)
  6276  032B  1E8C               	btfss	12,5	;volatile
  6277  032C  2B2E               	goto	u332_21
  6278  032D  2B2F               	goto	u332_20
  6279  032E                     u332_21:
  6280  032E  2B38               	goto	i1l3822
  6281  032F                     u332_20:
  6282  032F                     i1l3818:
  6283                           
  6284                           ;bsw/static/interrupt.c: 45:   {;bsw/static/interrupt.c: 46:     callbackTable[UART_RX](
      +                          );
  6285  032F  0829               	movf	low ((_callbackTable| 0+3)),w
  6286  0330  120A  118A  203D  120A  118A  	fcall	i1fptable
  6287  0335                     i1l3820:
  6288                           
  6289                           ;bsw/static/interrupt.c: 47:     RCIF = 0;
  6290  0335  1283               	bcf	3,5	;RP0=0, select bank0
  6291  0336  1303               	bcf	3,6	;RP1=0, select bank0
  6292  0337  128C               	bcf	12,5	;volatile
  6293  0338                     i1l3822:
  6294                           
  6295                           ;bsw/static/interrupt.c: 49:   if (INTF)
  6296  0338  1C8B               	btfss	11,1	;volatile
  6297  0339  2B3B               	goto	u333_21
  6298  033A  2B3C               	goto	u333_20
  6299  033B                     u333_21:
  6300  033B  2B43               	goto	i1l870
  6301  033C                     u333_20:
  6302  033C                     i1l3824:
  6303                           
  6304                           ;bsw/static/interrupt.c: 50:   {;bsw/static/interrupt.c: 51:     callbackTable[EXTERNAL_
      +                          OR_SW]();
  6305  033C  082A               	movf	low ((_callbackTable| 0+4)),w
  6306  033D  120A  118A  203D  120A  118A  	fcall	i1fptable
  6307  0342                     i1l3826:
  6308                           
  6309                           ;bsw/static/interrupt.c: 52:     INTF = 0;
  6310  0342  108B               	bcf	11,1	;volatile
  6311  0343                     i1l870:
  6312  0343  087D               	movf	??_ISR+3,w
  6313  0344  1283               	bcf	3,5	;RP0=0, select bank0
  6314  0345  1303               	bcf	3,6	;RP1=0, select bank0
  6315  0346  00FF               	movwf	btemp+1
  6316  0347  087C               	movf	??_ISR+2,w
  6317  0348  008A               	movwf	10
  6318  0349  087B               	movf	??_ISR+1,w
  6319  034A  0084               	movwf	4
  6320  034B  0E7A               	swapf	??_ISR^(0+4294967168),w
  6321  034C  0083               	movwf	3
  6322  034D  0EFE               	swapf	btemp,f
  6323  034E  0E7E               	swapf	btemp,w
  6324  034F  0009               	retfie
  6325  0350                     __end_of_ISR:
  6326                           
  6327                           	psect	intentry
  6328  0004                     __pintentry:	
  6329                           ;incstack = 0
  6330 ;; hardware stack exceeded
  6331                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6332                           
  6333  0004                     interrupt_function:
  6334  007E                     saved_w	set	btemp
  6335  0004  00FE               	movwf	btemp
  6336  0005  0E03               	swapf	3,w
  6337  0006  00FA               	movwf	??_ISR
  6338  0007  0804               	movf	4,w
  6339  0008  00FB               	movwf	??_ISR+1
  6340  0009  080A               	movf	10,w
  6341  000A  00FC               	movwf	??_ISR+2
  6342  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6343  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6344  000D  087F               	movf	btemp+1,w
  6345  000E  00FD               	movwf	??_ISR+3
  6346  000F  120A  118A  2B06   	ljmp	_ISR
  6347                           
  6348                           	psect	text52
  6349  0733                     __ptext52:	
  6350 ;; *************** function _Uart_RX_Callback *****************
  6351 ;; Defined at:
  6352 ;;		line 36 in file "bsw/static/Uart_CDD.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;		None
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;		None
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  1    wreg      void 
  6359 ;; Registers used:
  6360 ;;		wreg, fsr0l, fsr0h, btemp+1
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6366 ;;      Params:         0       0       0       0       0
  6367 ;;      Locals:         0       0       0       0       0
  6368 ;;      Temps:          0       0       0       0       0
  6369 ;;      Totals:         0       0       0       0       0
  6370 ;;Total ram usage:        0 bytes
  6371 ;; Hardware stack levels used:    1
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_Uart_Init
  6376 ;;		_ISR
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           
  6381                           ;psect for function _Uart_RX_Callback
  6382  0733                     _Uart_RX_Callback:
  6383  0733                     i1l3438:	
  6384                           ;incstack = 0
  6385 ;; hardware stack exceeded
  6386                           ; Regs used in _Uart_RX_Callback: [wreg-fsr0h+btemp+1]
  6387                           
  6388                           
  6389                           ;bsw/static/Uart_CDD.c: 38:     if (RCIF == 1)
  6390  0733  1283               	bcf	3,5	;RP0=0, select bank0
  6391  0734  1303               	bcf	3,6	;RP1=0, select bank0
  6392  0735  1E8C               	btfss	12,5	;volatile
  6393  0736  2F38               	goto	u280_21
  6394  0737  2F39               	goto	u280_20
  6395  0738                     u280_21:
  6396  0738  2F41               	goto	i1l922
  6397  0739                     u280_20:
  6398  0739                     i1l3440:
  6399                           
  6400                           ;bsw/static/Uart_CDD.c: 39:   {;bsw/static/Uart_CDD.c: 40:     *RX_Data = RCREG;
  6401  0739  081A               	movf	26,w	;volatile
  6402  073A  00FF               	movwf	btemp+1
  6403  073B  0834               	movf	_RX_Data,w
  6404  073C  0084               	movwf	4
  6405  073D  087F               	movf	btemp+1,w
  6406  073E  1383               	bcf	3,7	;select IRP bank0
  6407  073F  0080               	movwf	0
  6408  0740                     i1l3442:
  6409                           
  6410                           ;bsw/static/Uart_CDD.c: 41:     RCIF = 0;
  6411  0740  128C               	bcf	12,5	;volatile
  6412  0741                     i1l922:
  6413  0741  0008               	return
  6414  0742                     __end_of_Uart_RX_Callback:
  6415                           
  6416                           	psect	text53
  6417  04A7                     __ptext53:	
  6418 ;; *************** function _Adc_CallbackFn *****************
  6419 ;; Defined at:
  6420 ;;		line 39 in file "bsw/static/Adc.c"
  6421 ;; Parameters:    Size  Location     Type
  6422 ;;		None
  6423 ;; Auto vars:     Size  Location     Type
  6424 ;;		None
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  1    wreg      void 
  6427 ;; Registers used:
  6428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6434 ;;      Params:         0       0       0       0       0
  6435 ;;      Locals:         0       0       0       0       0
  6436 ;;      Temps:          2       0       0       0       0
  6437 ;;      Totals:         2       0       0       0       0
  6438 ;;Total ram usage:        2 bytes
  6439 ;; Hardware stack levels used:    1
  6440 ;; Hardware stack levels required when called:    1
  6441 ;; This function calls:
  6442 ;;		i1___awdiv
  6443 ;; This function is called by:
  6444 ;;		_Adc_Init
  6445 ;;		_Adc_EnableGroupNotification
  6446 ;;		_ISR
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           
  6451                           ;psect for function _Adc_CallbackFn
  6452  04A7                     _Adc_CallbackFn:
  6453  04A7                     i1l3356:	
  6454                           ;incstack = 0
  6455 ;; hardware stack exceeded
  6456                           ; Regs used in _Adc_CallbackFn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6457                           
  6458                           
  6459                           ;bsw/static/Adc.c: 42:    Adc_ThisConfiguration->CallbackFn(**(Adc_Result));
  6460  04A7  3002               	movlw	2
  6461  04A8  00F0               	movwf	i1___awdiv@divisor
  6462  04A9  3000               	movlw	0
  6463  04AA  00F1               	movwf	i1___awdiv@divisor+1
  6464  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  6465  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  6466  04AD  081E               	movf	30,w	;volatile
  6467  04AE  00F8               	movwf	??_Adc_CallbackFn
  6468  04AF  01F9               	clrf	??_Adc_CallbackFn+1
  6469  04B0  0878               	movf	??_Adc_CallbackFn,w
  6470  04B1  00F9               	movwf	??_Adc_CallbackFn+1
  6471  04B2  01F8               	clrf	??_Adc_CallbackFn
  6472  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  6473  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  6474  04B5  081E               	movf	30,w	;volatile
  6475  04B6  0778               	addwf	??_Adc_CallbackFn,w
  6476  04B7  00F2               	movwf	i1___awdiv@dividend
  6477  04B8  3000               	movlw	0
  6478  04B9  1803               	skipnc
  6479  04BA  3001               	movlw	1
  6480  04BB  0779               	addwf	??_Adc_CallbackFn+1,w
  6481  04BC  00F3               	movwf	i1___awdiv@dividend+1
  6482  04BD  120A  118A  2198  120A  118A  	fcall	i1___awdiv
  6483  04C2  0870               	movf	?i1___awdiv,w
  6484  04C3  00FF               	movwf	btemp+1
  6485  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  6486  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  6487  04C6  0840               	movf	_Adc_Result,w
  6488  04C7  0084               	movwf	4
  6489  04C8  1383               	bcf	3,7	;select IRP bank0
  6490  04C9  0800               	movf	0,w
  6491  04CA  0084               	movwf	4
  6492  04CB  087F               	movf	btemp+1,w
  6493  04CC  0080               	movwf	0
  6494  04CD                     i1l3358:
  6495                           
  6496                           ;bsw/static/Adc.c: 43:    ADIF = 0;
  6497  04CD  130C               	bcf	12,6	;volatile
  6498  04CE                     i1l3360:
  6499                           
  6500                           ;bsw/static/Adc.c: 44:    if(Adc_ThisConfiguration->Adc_GroupConvMode == ADC_CONV_MODE_C
      +                          ONTINUOUS_INTERRUPT)
  6501  04CE  0841               	movf	_Adc_ThisConfiguration,w
  6502  04CF  3E07               	addlw	7
  6503  04D0  0084               	movwf	4
  6504  04D1  0300               	decf	0,w
  6505  04D2  1D03               	btfss	3,2
  6506  04D3  2CD5               	goto	u269_21
  6507  04D4  2CD6               	goto	u269_20
  6508  04D5                     u269_21:
  6509  04D5  2CD8               	goto	i1l3364
  6510  04D6                     u269_20:
  6511  04D6                     i1l3362:
  6512                           
  6513                           ;bsw/static/Adc.c: 45:         (ADCON0|=(1<<Pin2));
  6514  04D6  151F               	bsf	31,2	;volatile
  6515  04D7  2CDF               	goto	i1l305
  6516  04D8                     i1l3364:
  6517                           
  6518                           ;bsw/static/Adc.c: 47:         Adc_ThisConfiguration->Adc_Status = ADC_COMPLETED;
  6519  04D8  3003               	movlw	3
  6520  04D9  00FF               	movwf	btemp+1
  6521  04DA  0841               	movf	_Adc_ThisConfiguration,w
  6522  04DB  3E0B               	addlw	11
  6523  04DC  0084               	movwf	4
  6524  04DD  087F               	movf	btemp+1,w
  6525  04DE  0080               	movwf	0
  6526  04DF                     i1l305:
  6527  04DF  0008               	return
  6528  04E0                     __end_of_Adc_CallbackFn:
  6529                           
  6530                           	psect	text54
  6531  07FD                     __ptext54:	
  6532 ;; *************** function _Uart_TX_Callback *****************
  6533 ;; Defined at:
  6534 ;;		line 35 in file "bsw/static/Uart_CDD.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;		None
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;		None
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  1    wreg      void 
  6541 ;; Registers used:
  6542 ;;		None
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6548 ;;      Params:         0       0       0       0       0
  6549 ;;      Locals:         0       0       0       0       0
  6550 ;;      Temps:          0       0       0       0       0
  6551 ;;      Totals:         0       0       0       0       0
  6552 ;;Total ram usage:        0 bytes
  6553 ;; Hardware stack levels used:    1
  6554 ;; This function calls:
  6555 ;;		Nothing
  6556 ;; This function is called by:
  6557 ;;		_Uart_Init
  6558 ;;		_ISR
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           
  6563                           ;psect for function _Uart_TX_Callback
  6564  07FD                     _Uart_TX_Callback:
  6565  07FD                     i1l918:	
  6566                           ;incstack = 0
  6567 ;; hardware stack exceeded
  6568                           ; Regs used in _Uart_TX_Callback: []
  6569                           
  6570  07FD  0008               	return
  6571  07FE                     __end_of_Uart_TX_Callback:
  6572                           
  6573                           	psect	text55
  6574  0198                     __ptext55:	
  6575 ;; *************** function i1___awdiv *****************
  6576 ;; Defined at:
  6577 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;  divisor         2    0[COMMON] int 
  6580 ;;  dividend        2    2[COMMON] int 
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;  quotient        2    6[COMMON] int 
  6583 ;;  sign            1    5[COMMON] unsigned char 
  6584 ;;  counter         1    4[COMMON] unsigned char 
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  2    0[COMMON] int 
  6587 ;; Registers used:
  6588 ;;		wreg, status,2, status,0, btemp+1
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6594 ;;      Params:         4       0       0       0       0
  6595 ;;      Locals:         4       0       0       0       0
  6596 ;;      Temps:          0       0       0       0       0
  6597 ;;      Totals:         8       0       0       0       0
  6598 ;;Total ram usage:        8 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; This function calls:
  6601 ;;		Nothing
  6602 ;; This function is called by:
  6603 ;;		_Adc_CallbackFn
  6604 ;; This function uses a non-reentrant model
  6605 ;;
  6606                           
  6607                           
  6608                           ;psect for function i1___awdiv
  6609  0198                     i1___awdiv:
  6610  0198                     i1l3250:	
  6611                           ;incstack = 0
  6612 ;; hardware stack exceeded
  6613                           ; Regs used in i1___awdiv: [wreg+status,2+status,0+btemp+1]
  6614                           
  6615  0198  01F5               	clrf	i1___awdiv@sign
  6616  0199                     i1l3252:
  6617  0199  1FF1               	btfss	i1___awdiv@divisor+1,7
  6618  019A  299C               	goto	u250_21
  6619  019B  299D               	goto	u250_20
  6620  019C                     u250_21:
  6621  019C  29A4               	goto	i1l3258
  6622  019D                     u250_20:
  6623  019D                     i1l3254:
  6624  019D  09F0               	comf	i1___awdiv@divisor,f
  6625  019E  09F1               	comf	i1___awdiv@divisor+1,f
  6626  019F  0AF0               	incf	i1___awdiv@divisor,f
  6627  01A0  1903               	skipnz
  6628  01A1  0AF1               	incf	i1___awdiv@divisor+1,f
  6629  01A2                     i1l3256:
  6630  01A2  01F5               	clrf	i1___awdiv@sign
  6631  01A3  0AF5               	incf	i1___awdiv@sign,f
  6632  01A4                     i1l3258:
  6633  01A4  1FF3               	btfss	i1___awdiv@dividend+1,7
  6634  01A5  29A7               	goto	u251_21
  6635  01A6  29A8               	goto	u251_20
  6636  01A7                     u251_21:
  6637  01A7  29B1               	goto	i1l3264
  6638  01A8                     u251_20:
  6639  01A8                     i1l3260:
  6640  01A8  09F2               	comf	i1___awdiv@dividend,f
  6641  01A9  09F3               	comf	i1___awdiv@dividend+1,f
  6642  01AA  0AF2               	incf	i1___awdiv@dividend,f
  6643  01AB  1903               	skipnz
  6644  01AC  0AF3               	incf	i1___awdiv@dividend+1,f
  6645  01AD                     i1l3262:
  6646  01AD  3001               	movlw	1
  6647  01AE  00FF               	movwf	btemp+1
  6648  01AF  087F               	movf	btemp+1,w
  6649  01B0  06F5               	xorwf	i1___awdiv@sign,f
  6650  01B1                     i1l3264:
  6651  01B1  01F6               	clrf	i1___awdiv@quotient
  6652  01B2  01F7               	clrf	i1___awdiv@quotient+1
  6653  01B3                     i1l3266:
  6654  01B3  0870               	movf	i1___awdiv@divisor,w
  6655  01B4  0471               	iorwf	i1___awdiv@divisor+1,w
  6656  01B5  1903               	btfsc	3,2
  6657  01B6  29B8               	goto	u252_21
  6658  01B7  29B9               	goto	u252_20
  6659  01B8                     u252_21:
  6660  01B8  29F0               	goto	i1l3286
  6661  01B9                     u252_20:
  6662  01B9                     i1l3268:
  6663  01B9  01F4               	clrf	i1___awdiv@counter
  6664  01BA  0AF4               	incf	i1___awdiv@counter,f
  6665  01BB  29C7               	goto	i1l3274
  6666  01BC                     i1l3270:
  6667  01BC  3001               	movlw	1
  6668  01BD                     u253_25:
  6669  01BD  1003               	clrc
  6670  01BE  0DF0               	rlf	i1___awdiv@divisor,f
  6671  01BF  0DF1               	rlf	i1___awdiv@divisor+1,f
  6672  01C0  3EFF               	addlw	-1
  6673  01C1  1D03               	skipz
  6674  01C2  29BD               	goto	u253_25
  6675  01C3                     i1l3272:
  6676  01C3  3001               	movlw	1
  6677  01C4  00FF               	movwf	btemp+1
  6678  01C5  087F               	movf	btemp+1,w
  6679  01C6  07F4               	addwf	i1___awdiv@counter,f
  6680  01C7                     i1l3274:
  6681  01C7  1FF1               	btfss	i1___awdiv@divisor+1,7
  6682  01C8  29CA               	goto	u254_21
  6683  01C9  29CB               	goto	u254_20
  6684  01CA                     u254_21:
  6685  01CA  29BC               	goto	i1l3270
  6686  01CB                     u254_20:
  6687  01CB                     i1l3276:
  6688  01CB  3001               	movlw	1
  6689  01CC                     u255_25:
  6690  01CC  1003               	clrc
  6691  01CD  0DF6               	rlf	i1___awdiv@quotient,f
  6692  01CE  0DF7               	rlf	i1___awdiv@quotient+1,f
  6693  01CF  3EFF               	addlw	-1
  6694  01D0  1D03               	skipz
  6695  01D1  29CC               	goto	u255_25
  6696  01D2  0871               	movf	i1___awdiv@divisor+1,w
  6697  01D3  0273               	subwf	i1___awdiv@dividend+1,w
  6698  01D4  1D03               	skipz
  6699  01D5  29D8               	goto	u256_25
  6700  01D6  0870               	movf	i1___awdiv@divisor,w
  6701  01D7  0272               	subwf	i1___awdiv@dividend,w
  6702  01D8                     u256_25:
  6703  01D8  1C03               	skipc
  6704  01D9  29DB               	goto	u256_21
  6705  01DA  29DC               	goto	u256_20
  6706  01DB                     u256_21:
  6707  01DB  29E3               	goto	i1l3282
  6708  01DC                     u256_20:
  6709  01DC                     i1l3278:
  6710  01DC  0870               	movf	i1___awdiv@divisor,w
  6711  01DD  02F2               	subwf	i1___awdiv@dividend,f
  6712  01DE  0871               	movf	i1___awdiv@divisor+1,w
  6713  01DF  1C03               	skipc
  6714  01E0  03F3               	decf	i1___awdiv@dividend+1,f
  6715  01E1  02F3               	subwf	i1___awdiv@dividend+1,f
  6716  01E2                     i1l3280:
  6717  01E2  1476               	bsf	i1___awdiv@quotient,0
  6718  01E3                     i1l3282:
  6719  01E3  3001               	movlw	1
  6720  01E4                     u257_25:
  6721  01E4  1003               	clrc
  6722  01E5  0CF1               	rrf	i1___awdiv@divisor+1,f
  6723  01E6  0CF0               	rrf	i1___awdiv@divisor,f
  6724  01E7  3EFF               	addlw	-1
  6725  01E8  1D03               	skipz
  6726  01E9  29E4               	goto	u257_25
  6727  01EA                     i1l3284:
  6728  01EA  3001               	movlw	1
  6729  01EB  02F4               	subwf	i1___awdiv@counter,f
  6730  01EC  1D03               	btfss	3,2
  6731  01ED  29EF               	goto	u258_21
  6732  01EE  29F0               	goto	u258_20
  6733  01EF                     u258_21:
  6734  01EF  29CB               	goto	i1l3276
  6735  01F0                     u258_20:
  6736  01F0                     i1l3286:
  6737  01F0  0875               	movf	i1___awdiv@sign,w
  6738  01F1  1903               	btfsc	3,2
  6739  01F2  29F4               	goto	u259_21
  6740  01F3  29F5               	goto	u259_20
  6741  01F4                     u259_21:
  6742  01F4  29FA               	goto	i1l3290
  6743  01F5                     u259_20:
  6744  01F5                     i1l3288:
  6745  01F5  09F6               	comf	i1___awdiv@quotient,f
  6746  01F6  09F7               	comf	i1___awdiv@quotient+1,f
  6747  01F7  0AF6               	incf	i1___awdiv@quotient,f
  6748  01F8  1903               	skipnz
  6749  01F9  0AF7               	incf	i1___awdiv@quotient+1,f
  6750  01FA                     i1l3290:
  6751  01FA  0877               	movf	i1___awdiv@quotient+1,w
  6752  01FB  00F1               	movwf	?i1___awdiv+1
  6753  01FC  0876               	movf	i1___awdiv@quotient,w
  6754  01FD  00F0               	movwf	?i1___awdiv
  6755  01FE                     i1l1201:
  6756  01FE  0008               	return
  6757  01FF                     __end_ofi1___awdiv:
  6758  0003                     
  6759                           	psect	functab
  6760  003C                     __pfunctab:
  6761  003C                     fptable:
  6762  003C  283C               	goto	fptable	;no entries
  6763  003D                     __i1fptable:
  6764  003D                     i1fptable:
  6765  003D  00FF               	movwf	(btemp+1)& (0+127)
  6766  003E  3000               	movlw	high i1fptable
  6767  003F  008A               	movwf	10
  6768  0040  087F               	movf	(btemp+1)& (0+127),w
  6769  0041  0782               	addwf	2,f
  6770  0042                     i1fpbase:
  6771  0042  2842               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  6772  0043                     fp__Uart_TX_Callback:
  6773  0043  120A  118A  2FFD   	ljmp	_Uart_TX_Callback
  6774  0046                     fp__Adc_CallbackFn:
  6775  0046  120A  118A  2CA7   	ljmp	_Adc_CallbackFn
  6776  0049                     fp__Uart_RX_Callback:
  6777  0049  120A  118A  2F33   	ljmp	_Uart_RX_Callback
  6778  004C                     __end_of__i1fptable:
  6779  007E                     btemp	set	126	;btemp
  6780  007E                     wtemp0	set	126
  6781                           
  6782                           	psect	config
  6783                           
  6784                           ;Config register CONFIG @ 0x2007
  6785                           ;	Oscillator Selection bits
  6786                           ;	FOSC = HS, HS oscillator
  6787                           ;	Watchdog Timer Enable bit
  6788                           ;	WDTE = OFF, WDT disabled
  6789                           ;	Power-up Timer Enable bit
  6790                           ;	PWRTE = OFF, PWRT disabled
  6791                           ;	Brown-out Reset Enable bit
  6792                           ;	BOREN = ON, BOR enabled
  6793                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  6794                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  6795                           ;	Data EEPROM Memory Code Protection bit
  6796                           ;	CPD = OFF, Data EEPROM code protection off
  6797                           ;	Flash Program Memory Write Enable bits
  6798                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  6799                           ;	In-Circuit Debugger Mode bit
  6800                           ;	DEBUG = 0x1, unprogrammed default
  6801                           ;	Flash Program Memory Code Protection bit
  6802                           ;	CP = OFF, Code protection off
  6803  2007                     	org	8199
  6804  2007  3F7A               	dw	16250

Data Sizes:
    Strings     73
    Constant    0
    Data        64
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      78
    BANK1            80      0      55
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(1) Largest target is 2
		 -> Uart_WriteInt@buff(COMMON[2]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 2
		 -> Uart_WriteInt@buff(COMMON[2]), 

    Uart_ThisConfiguration	PTR struct . size(1) Largest target is 9
		 -> NULL(NULL[0]), Uart_Config(BANK1[9]), 

    RX_Data	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    callbackTable	PTR FTN()void [5] size(1) Largest target is 1
		 -> Uart_RX_Callback(), Uart_TX_Callback(), Adc_CallbackFn(), 

    TempSensor_Config.CallbackFn	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Adc_Handler(), 

    Rte_Call_SeatManager_rpWeightSensor_GetWeight@Weight	PTR unsigned char  size(1) Largest target is 1
		 -> SeatManager_AutoIncline@Weight(BANK0[1]), SeatManager_AutoSlide@Weight(BANK0[1]), SeatManager_AutoHeight@Weight(BANK0[1]), 

    Rte_Call_SeatManager_rpSlideSensor_GetPosition@Position	PTR unsigned char  size(1) Largest target is 1
		 -> SeatManager_AutoSlide@Position(BANK0[1]), 

    Rte_Call_SeatManager_rpInclineSensor_GetPosition@Position	PTR unsigned char  size(1) Largest target is 1
		 -> SeatManager_AutoIncline@Position(BANK0[1]), 

    Rte_Call_SeatManager_rpHeightSensor_GetPosition@Position	PTR unsigned char  size(1) Largest target is 1
		 -> SeatManager_AutoHeight@Position(BANK0[1]), 

    Rte_Call_WeightSensor_rpIOGetWeight_IOGet@weight	PTR unsigned short  size(1) Largest target is 2
		 -> WeightSensor_GetWeight@weight(BANK0[2]), 

    Rte_Call_SlideSensor_rpIOGetSlide_IOGet@position	PTR unsigned char  size(1) Largest target is 1
		 -> SlideSensor_GetPosition@position(BANK0[1]), 

    Rte_Call_InclineSensor_rpIOGetIncline_IOGet@position	PTR unsigned char  size(1) Largest target is 1
		 -> InclineSensor_GetPosition@position(BANK0[1]), 

    Rte_Call_HeightSensor_rpIOGetHeight_IOGet@position	PTR unsigned char  size(1) Largest target is 1
		 -> HeightSensor_GetPosition@position(BANK0[1]), 

    Spi_ReadIB@DataBufferPtr	PTR unsigned int  size(1) Largest target is 2
		 -> IoHwAbs_ECUGet_Weight@spiData(BANK0[2]), 

    Spi_ThisConfiguration	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Dio_WriteChannel@Port_Ptr	PTR volatile unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), NULL(NULL[0]), 

    Adc_ReadGroup@DataBufferPtr	PTR unsigned char  size(1) Largest target is 3
		 -> IoHwAb_PositionSensorsReadings(BANK0[3]), 

    Adc_Init@Adc_Config.CallbackFn	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Adc_Handler(), 

    S411$CallbackFn	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Adc_Handler(), 

    Adc_ThisConfiguration.CallbackFn	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Adc_Handler(), 

    Adc_ThisConfiguration	PTR struct . size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Adc_Result	PTR PTR volatile unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    WeightSensor_GetWeight@Weight	PTR unsigned char  size(1) Largest target is 1
		 -> SeatManager_AutoIncline@Weight(BANK0[1]), SeatManager_AutoSlide@Weight(BANK0[1]), SeatManager_AutoHeight@Weight(BANK0[1]), 

    SlideSensor_GetPosition@Position	PTR unsigned char  size(1) Largest target is 1
		 -> SeatManager_AutoSlide@Position(BANK0[1]), 

    IoHwAbs_ECUGet_Weight@weight	PTR unsigned short  size(1) Largest target is 2
		 -> WeightSensor_GetWeight@weight(BANK0[2]), 

    IoHwAbs_ECUGet_Slide@position	PTR unsigned char  size(1) Largest target is 1
		 -> SlideSensor_GetPosition@position(BANK0[1]), 

    IoHwAbs_ECUGet_Incline@position	PTR unsigned char  size(1) Largest target is 1
		 -> InclineSensor_GetPosition@position(BANK0[1]), 

    IoHwAbs_ECUGet_Height@position	PTR unsigned char  size(1) Largest target is 1
		 -> HeightSensor_GetPosition@position(BANK0[1]), 

    InclineSensor_GetPosition@Position	PTR unsigned char  size(1) Largest target is 1
		 -> SeatManager_AutoIncline@Position(BANK0[1]), 

    HeightSensor_GetPosition@Position	PTR unsigned char  size(1) Largest target is 1
		 -> SeatManager_AutoHeight@Position(BANK0[1]), 

    IsMotorAdjustNeeded@Step	PTR unsigned char  size(1) Largest target is 1
		 -> SeatManager_AutoIncline@Step(BANK0[1]), SeatManager_AutoSlide@Step(BANK0[1]), SeatManager_AutoHeight@Step(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_Adc_CallbackFn
    _Adc_CallbackFn->i1___awdiv

Critical Paths under _main in BANK0

    _Rte_Start->_Os_SetRelAlarm
    _CyclicTask->_SeatManager_AutoHeight
    _CyclicTask->_SeatManager_AutoIncline
    _CyclicTask->_SeatManager_AutoSlide
    _SeatManager_AutoSlide->_Rte_Call_SeatManager_rpSlideSensor_GetPosition
    _Rte_Call_SeatManager_rpSlideSensor_GetPosition->_SlideSensor_GetPosition
    _SlideSensor_GetPosition->_Rte_Call_SlideSensor_rpIOGetSlide_IOGet
    _Rte_Call_SlideSensor_rpIOGetSlide_IOGet->_IoHwAbs_ECUGet_Slide
    _IoHwAbs_ECUGet_Slide->_Adc_ReadGroup
    _Rte_Call_SeatManager_rpSlideMotor_Move->_SlideMotor_Move
    _IoHwAbs_ECUSetReverse_Slide->_Dio_WriteChannel
    _IoHwAbs_ECUSetForward_Slide->_Dio_WriteChannel
    _SeatManager_AutoIncline->_Rte_Call_SeatManager_rpInclineSensor_GetPosition
    _Rte_Call_SeatManager_rpInclineSensor_GetPosition->_InclineSensor_GetPosition
    _InclineSensor_GetPosition->_Rte_Call_InclineSensor_rpIOGetIncline_IOGet
    _Rte_Call_InclineSensor_rpIOGetIncline_IOGet->_IoHwAbs_ECUGet_Incline
    _IoHwAbs_ECUGet_Incline->_Adc_ReadGroup
    _Rte_Call_SeatManager_rpInclineMotor_Move->_InclineMotor_Move
    _IoHwAbs_ECUSetReverse_Incline->_Dio_WriteChannel
    _IoHwAbs_ECUSetForward_Incline->_Dio_WriteChannel
    _SeatManager_AutoHeight->_Rte_Call_SeatManager_rpHeightSensor_GetPosition
    _Rte_Call_SeatManager_rpWeightSensor_GetWeight->_WeightSensor_GetWeight
    _WeightSensor_GetWeight->_Rte_Call_WeightSensor_rpIOGetWeight_IOGet
    _Rte_Call_WeightSensor_rpIOGetWeight_IOGet->_IoHwAbs_ECUGet_Weight
    _IoHwAbs_ECUGet_Weight->_Spi_ReadIB
    _Rte_Call_SeatManager_rpHeightSensor_GetPosition->_HeightSensor_GetPosition
    _HeightSensor_GetPosition->_Rte_Call_HeightSensor_rpIOGetHeight_IOGet
    _Rte_Call_HeightSensor_rpIOGetHeight_IOGet->_IoHwAbs_ECUGet_Height
    _IoHwAbs_ECUGet_Height->_Adc_ReadGroup
    _Adc_ReadGroup->___awdiv
    _Rte_Call_SeatManager_rpHeightMotor_Move->_HeightMotor_Move
    _IoHwAbs_ECUSetReverse_Height->_Dio_WriteChannel
    _IoHwAbs_ECUSetForward_Height->_Dio_WriteChannel

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   14878
                          _Rte_Start
 ---------------------------------------------------------------------------------
 (1) _Rte_Start                                            0     0      0   14878
                     _Os_SetRelAlarm
 ---------------------------------------------------------------------------------
 (2) _Os_SetRelAlarm                                       9     1      8   14878
                                             23 BANK0      8     0      8
                         _CyclicTask
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                               14    12      2     121
                                              0 BANK0     14    12      2
 ---------------------------------------------------------------------------------
 (3) _CyclicTask                                           0     0      0   14583
                   _Os_TerminateTask
             _SeatManager_AutoHeight
            _SeatManager_AutoIncline
              _SeatManager_AutoSlide
 ---------------------------------------------------------------------------------
 (4) _SeatManager_AutoSlide                                4     4      0    4861
                                             19 BANK0      4     4      0
                _IsMotorAdjustNeeded
_Rte_Call_SeatManager_rpSlideMotor_M
_Rte_Call_SeatManager_rpSlideSensor_
_Rte_Call_SeatManager_rpWeightSensor
 ---------------------------------------------------------------------------------
 (5) _Rte_Call_SeatManager_rpSlideSensor_GetPosition       1     1      0    1514
                                             18 BANK0      1     1      0
            _SlideSensor_GetPosition
 ---------------------------------------------------------------------------------
 (6) _SlideSensor_GetPosition                              2     2      0    1459
                                             16 BANK0      2     2      0
_Rte_Call_SlideSensor_rpIOGetSlide_I
 ---------------------------------------------------------------------------------
 (7) _Rte_Call_SlideSensor_rpIOGetSlide_IOGet              1     1      0    1204
                                             15 BANK0      1     1      0
               _IoHwAbs_ECUGet_Slide
 ---------------------------------------------------------------------------------
 (8) _IoHwAbs_ECUGet_Slide                                 2     2      0    1149
                                             13 BANK0      2     2      0
                      _Adc_ReadGroup
 ---------------------------------------------------------------------------------
 (5) _Rte_Call_SeatManager_rpSlideMotor_Move               1     1      0    1290
                                              8 BANK0      1     1      0
                    _SlideMotor_Move
 ---------------------------------------------------------------------------------
 (6) _SlideMotor_Move                                      1     1      0    1268
                                              7 BANK0      1     1      0
_Rte_Call_SlideMotor_rpIOSetSlide_IO
_Rte_Call_SlideMotor_rpIOSetSlide_IO
 ---------------------------------------------------------------------------------
 (7) _Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse        0     0      0     612
        _IoHwAbs_ECUSetReverse_Slide
 ---------------------------------------------------------------------------------
 (8) _IoHwAbs_ECUSetReverse_Slide                          0     0      0     612
                   _Dio_WriteChannel
 ---------------------------------------------------------------------------------
 (7) _Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward        0     0      0     612
        _IoHwAbs_ECUSetForward_Slide
 ---------------------------------------------------------------------------------
 (8) _IoHwAbs_ECUSetForward_Slide                          0     0      0     612
                   _Dio_WriteChannel
 ---------------------------------------------------------------------------------
 (4) _SeatManager_AutoIncline                              4     4      0    4861
                                             19 BANK0      4     4      0
                _IsMotorAdjustNeeded
_Rte_Call_SeatManager_rpInclineMotor
_Rte_Call_SeatManager_rpInclineSenso
_Rte_Call_SeatManager_rpWeightSensor
 ---------------------------------------------------------------------------------
 (5) _Rte_Call_SeatManager_rpInclineSensor_GetPosition     1     1      0    1514
                                             18 BANK0      1     1      0
          _InclineSensor_GetPosition
 ---------------------------------------------------------------------------------
 (6) _InclineSensor_GetPosition                            2     2      0    1459
                                             16 BANK0      2     2      0
_Rte_Call_InclineSensor_rpIOGetIncli
 ---------------------------------------------------------------------------------
 (7) _Rte_Call_InclineSensor_rpIOGetIncline_IOGet          1     1      0    1204
                                             15 BANK0      1     1      0
             _IoHwAbs_ECUGet_Incline
 ---------------------------------------------------------------------------------
 (8) _IoHwAbs_ECUGet_Incline                               2     2      0    1149
                                             13 BANK0      2     2      0
                      _Adc_ReadGroup
 ---------------------------------------------------------------------------------
 (5) _Rte_Call_SeatManager_rpInclineMotor_Move             1     1      0    1290
                                              8 BANK0      1     1      0
                  _InclineMotor_Move
 ---------------------------------------------------------------------------------
 (6) _InclineMotor_Move                                    1     1      0    1268
                                              7 BANK0      1     1      0
_Rte_Call_InclineMotor_rpIOSetInclin
_Rte_Call_InclineMotor_rpIOSetInclin
 ---------------------------------------------------------------------------------
 (7) _Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse    0     0      0     612
      _IoHwAbs_ECUSetReverse_Incline
 ---------------------------------------------------------------------------------
 (8) _IoHwAbs_ECUSetReverse_Incline                        0     0      0     612
                   _Dio_WriteChannel
 ---------------------------------------------------------------------------------
 (7) _Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward    0     0      0     612
      _IoHwAbs_ECUSetForward_Incline
 ---------------------------------------------------------------------------------
 (8) _IoHwAbs_ECUSetForward_Incline                        0     0      0     612
                   _Dio_WriteChannel
 ---------------------------------------------------------------------------------
 (4) _SeatManager_AutoHeight                               4     4      0    4861
                                             19 BANK0      4     4      0
                _IsMotorAdjustNeeded
_Rte_Call_SeatManager_rpHeightMotor_
_Rte_Call_SeatManager_rpHeightSensor
_Rte_Call_SeatManager_rpWeightSensor
 ---------------------------------------------------------------------------------
 (5) _Rte_Call_SeatManager_rpWeightSensor_GetWeight        1     1      0    1065
                                             11 BANK0      1     1      0
             _WeightSensor_GetWeight
 ---------------------------------------------------------------------------------
 (6) _WeightSensor_GetWeight                               3     3      0     944
                                              8 BANK0      3     3      0
_Rte_Call_WeightSensor_rpIOGetWeight
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     566
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (7) _Rte_Call_WeightSensor_rpIOGetWeight_IOGet            1     1      0     277
                                              7 BANK0      1     1      0
              _IoHwAbs_ECUGet_Weight
 ---------------------------------------------------------------------------------
 (8) _IoHwAbs_ECUGet_Weight                                4     4      0     222
                                              3 BANK0      4     4      0
                         _Spi_ReadIB
 ---------------------------------------------------------------------------------
 (9) _Spi_ReadIB                                           4     3      1      98
                                              0 BANK0      3     2      1
                    _SPI_Master_Wait
 ---------------------------------------------------------------------------------
 (10) _SPI_Master_Wait                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rte_Call_SeatManager_rpHeightSensor_GetPosition      1     1      0    1514
                                             18 BANK0      1     1      0
           _HeightSensor_GetPosition
 ---------------------------------------------------------------------------------
 (6) _HeightSensor_GetPosition                             2     2      0    1459
                                             16 BANK0      2     2      0
_Rte_Call_HeightSensor_rpIOGetHeight
 ---------------------------------------------------------------------------------
 (7) _Rte_Call_HeightSensor_rpIOGetHeight_IOGet            1     1      0    1204
                                             15 BANK0      1     1      0
              _IoHwAbs_ECUGet_Height
 ---------------------------------------------------------------------------------
 (8) _IoHwAbs_ECUGet_Height                                2     2      0    1149
                                             13 BANK0      2     2      0
                      _Adc_ReadGroup
 ---------------------------------------------------------------------------------
 (9) _Adc_ReadGroup                                        6     5      1    1071
                                              8 BANK0      5     4      1
           _Adc_StartGroupConversion
                            ___awdiv
 ---------------------------------------------------------------------------------
 (10) ___awdiv                                             8     4      4     704
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (10) _Adc_StartGroupConversion                            1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _Rte_Call_SeatManager_rpHeightMotor_Move              1     1      0    1290
                                              8 BANK0      1     1      0
                   _HeightMotor_Move
 ---------------------------------------------------------------------------------
 (6) _HeightMotor_Move                                     1     1      0    1268
                                              7 BANK0      1     1      0
_Rte_Call_HeightMotor_rpIOSetHeight_
_Rte_Call_HeightMotor_rpIOSetHeight_
 ---------------------------------------------------------------------------------
 (7) _Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse      0     0      0     612
       _IoHwAbs_ECUSetReverse_Height
 ---------------------------------------------------------------------------------
 (8) _IoHwAbs_ECUSetReverse_Height                         0     0      0     612
                   _Dio_WriteChannel
 ---------------------------------------------------------------------------------
 (7) _Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward      0     0      0     612
       _IoHwAbs_ECUSetForward_Height
 ---------------------------------------------------------------------------------
 (8) _IoHwAbs_ECUSetForward_Height                         0     0      0     612
                   _Dio_WriteChannel
 ---------------------------------------------------------------------------------
 (9) _Dio_WriteChannel                                     7     6      1     612
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (5) _IsMotorAdjustNeeded                                  6     4      2     815
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _Os_TerminateTask                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR                                                 4     4      0     352
                                             10 COMMON     4     4      0
                     _Adc_CallbackFn *
                   _Uart_RX_Callback *
                   _Uart_TX_Callback *
 ---------------------------------------------------------------------------------
 (12) _Uart_TX_Callback                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _Uart_RX_Callback                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _Adc_CallbackFn                                      2     2      0     352
                                              8 COMMON     2     2      0
                          i1___awdiv
 ---------------------------------------------------------------------------------
 (13) i1___awdiv                                           8     4      4     352
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Rte_Start
     _Os_SetRelAlarm
       _CyclicTask
         _Os_TerminateTask
         _SeatManager_AutoHeight
           _IsMotorAdjustNeeded
           _Rte_Call_SeatManager_rpHeightMotor_Move
             _HeightMotor_Move
               _Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward
                 _IoHwAbs_ECUSetForward_Height
                   _Dio_WriteChannel
               _Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse
                 _IoHwAbs_ECUSetReverse_Height
                   _Dio_WriteChannel
           _Rte_Call_SeatManager_rpHeightSensor_GetPosition
             _HeightSensor_GetPosition
               _Rte_Call_HeightSensor_rpIOGetHeight_IOGet
                 _IoHwAbs_ECUGet_Height
                   _Adc_ReadGroup
                     _Adc_StartGroupConversion
                     ___awdiv
           _Rte_Call_SeatManager_rpWeightSensor_GetWeight
             _WeightSensor_GetWeight
               _Rte_Call_WeightSensor_rpIOGetWeight_IOGet
                 _IoHwAbs_ECUGet_Weight
                   _Spi_ReadIB
                     _SPI_Master_Wait
               ___lwdiv
         _SeatManager_AutoIncline
           _IsMotorAdjustNeeded
           _Rte_Call_SeatManager_rpInclineMotor_Move
             _InclineMotor_Move
               _Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward
                 _IoHwAbs_ECUSetForward_Incline
                   _Dio_WriteChannel
               _Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse
                 _IoHwAbs_ECUSetReverse_Incline
                   _Dio_WriteChannel
           _Rte_Call_SeatManager_rpInclineSensor_GetPosition
             _InclineSensor_GetPosition
               _Rte_Call_InclineSensor_rpIOGetIncline_IOGet
                 _IoHwAbs_ECUGet_Incline
                   _Adc_ReadGroup
                     _Adc_StartGroupConversion
                     ___awdiv
           _Rte_Call_SeatManager_rpWeightSensor_GetWeight
             _WeightSensor_GetWeight
               _Rte_Call_WeightSensor_rpIOGetWeight_IOGet
                 _IoHwAbs_ECUGet_Weight
                   _Spi_ReadIB
                     _SPI_Master_Wait
               ___lwdiv
         _SeatManager_AutoSlide
           _IsMotorAdjustNeeded
           _Rte_Call_SeatManager_rpSlideMotor_Move
             _SlideMotor_Move
               _Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward
                 _IoHwAbs_ECUSetForward_Slide
                   _Dio_WriteChannel
               _Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse
                 _IoHwAbs_ECUSetReverse_Slide
                   _Dio_WriteChannel
           _Rte_Call_SeatManager_rpSlideSensor_GetPosition
             _SlideSensor_GetPosition
               _Rte_Call_SlideSensor_rpIOGetSlide_IOGet
                 _IoHwAbs_ECUGet_Slide
                   _Adc_ReadGroup
                     _Adc_StartGroupConversion
                     ___awdiv
           _Rte_Call_SeatManager_rpWeightSensor_GetWeight
             _WeightSensor_GetWeight
               _Rte_Call_WeightSensor_rpIOGetWeight_IOGet
                 _IoHwAbs_ECUGet_Weight
                   _Spi_ReadIB
                     _SPI_Master_Wait
               ___lwdiv
       _delay

 _ISR (ROOT)
   _Adc_CallbackFn *
     i1___awdiv
   _Uart_RX_Callback *
   _Uart_TX_Callback *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      37       7       68.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1F      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      93      12        0.0%
ABS                  0      0      93       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Aug 10 18:21:37 2020

                                           _SPI_Master_Wait 0742  
                                                         pc 0002  
           Rte_Call_WeightSensor_rpIOGetWeight_IOGet@weight 004D  
                                                        l43 0FEC  
                                              ___awdiv@sign 004B  
                                                        fsr 0004  
                                         _TempSensor_Config 00AD  
                                                       l125 025D  
                                                       l214 06AA  
                                                       l151 0543  
                                                       l232 076F  
                                                       l224 066C  
                                                       l241 07FB  
                                                       l330 0701  
                                                       l147 059D  
                                                       l235 0764  
                                                       l219 068B  
                                                       l155 0570  
                                                       l404 0305  
                                                       l244 07BF  
                                                       l333 070D  
                                                       l229 064D  
                                                       l166 06F5  
                                                       l238 0759  
                                                       l327 012E  
                                                       l247 0797  
                                                       l520 0614  
                                                       l177 04A6  
                                                       l425 05C7  
                                                       l441 0721  
                                                       l522 0619  
                                                       l274 060B  
                                                       l258 06C3  
                                                       l523 062D  
                                                       l532 074E  
                                                       l188 06DC  
                                                       l701 07DD  
                                                       l269 041E  
                                                       l438 07FC  
                                                       l710 07C9  
                                                       l199 0462  
                                                       l704 07A1  
                                                       l529 0742  
                                                       l707 0779  
                                                       l740 03DA  
                                                       l662 0FC8  
                                                       l671 0FDA  
                                                       l680 07E7  
                                                       l665 0FCE  
                                                       l753 05E9  
                                                       l674 0FE0  
                                                       l683 07AB  
                                                       l692 07F1  
                                                       l668 0FD4  
                                                       l677 0FE6  
                                                       l686 0783  
                                                       l695 07B5  
                                                       l689 07D3  
                                                       l698 078D  
                                                       _GIE 005F  
                                                       _ISR 0306  
                                      _IoHwAbs_ECUGet_Slide 064E  
                                                       fsr0 0004  
                                                       indf 0000  
                                    _Dio_ConfigGroupChannel 0065  
                                     _IoHwAbs_ECUGet_Height 068C  
                            ??_IoHwAbs_ECUSetForward_Height 004D  
                                                      ?_ISR 0070  
                                  ??_WeightSensor_GetWeight 004E  
                                                      l1201 0197  
                                                      l3000 049F  
                                                      l1320 0395  
                                                      l3002 06C7  
                                                      l3010 0422  
                                                      l3100 023F  
                                                      l3004 06CC  
                                                      l3020 043F  
                                                      l3012 0428  
                                                      l3110 025C  
                                                      l3006 06D2  
                                                      l3022 0447  
                                                      l3014 042F  
                                                      l3030 06AE  
                                                      l3120 07EB  
                                                      l3008 06D7  
                                                      l3024 044D  
                                                      l3016 0434  
                                                      l3032 06B3  
                                                      l3040 03E4  
                                                      l3200 03B7  
                                                      l3026 0453  
                                                      l3018 0439  
                                                      l3034 06B9  
                                                      l3050 0403  
                                                      l3042 03EB  
                                                      l3210 03D5  
                                                      l3202 03BC  
                                                      l3108 0246  
                                                      l3060 0202  
                                                      l3132 07D7  
                                                      l3124 07AF  
                                                      l3028 045B  
                                                      l3036 06BE  
                                                      l3052 0409  
                                                      l3044 03F0  
                                                      l3140 0773  
                                                      l3204 03C3  
                                                      l3062 0204  
                                                      l3150 0592  
                                                      l3054 040F  
                                                      l3046 03F5  
                                                      l3038 03DE  
                                                      l3206 03C8  
                                                      l3080 0225  
                                                      l3064 020A  
                                                      l3136 07C3  
                                                      l3152 0597  
                                                      l3144 079B  
                                                      l3160 0544  
                                                      l3128 0787  
                                                      l3056 0417  
                                                      l3048 03FB  
                                                      l3208 03CD  
                                                      l3090 0232  
                                                      l3074 0218  
                                                      l3066 020E  
                                                      l3058 05ED  
                                                      l3162 0565  
                                                      l3154 0517  
                                                      l3306 05C8  
                                                      l3092 0238  
                                                      l3084 022B  
                                                      l3076 021E  
                                                      l3068 0211  
                                                      l3148 0571  
                                                      l3164 056A  
                                                      l3156 0538  
                                                      l3308 05D3  
                                                      l3158 053D  
                                                      l3190 039C  
                                                      l3246 0721  
                                                      l2800 004C  
                                                      l3192 03A1  
                                                      l3184 059E  
                                                      l3248 0726  
                                                      l2810 0075  
                                                      l2802 0057  
                                                      l3194 03A6  
                                                      l3186 059E  
                                                      l4092 024E  
                                                      l2812 00A1  
                                                      l2820 00BA  
                                                      l2804 005B  
                                                      l2900 074F  
                                                      l3196 03AB  
                                                      l3188 0396  
                                                      l2902 07F2  
                                                      l2750 0705  
                                                      l2830 00FD  
                                                      l2822 00C2  
                                                      l2814 00A5  
                                                      l2806 006B  
                                                      l3198 03B2  
                                                      l3526 0FE7  
                                                      l2912 0FC9  
                                                      l2760 0136  
                                                      l2840 011E  
                                                      l2832 0103  
                                                      l2824 00EE  
                                                      l2816 00A9  
                                                      l2808 0073  
                                                      l2752 0742  
                                                      l2920 0FCF  
                                                      l2904 07B6  
                                                      l2746 06F6  
                                                      l2770 014A  
                                                      l2762 013B  
                                                      l2834 0107  
                                                      l2842 0124  
                                                      l2818 00B2  
                                                      l2826 00F3  
                                                      l2754 0748  
                                                      l2850 0611  
                                                      l2906 078E  
                                                      l2860 02BA  
                                                      l2908 0FC3  
                                                      l2748 06F9  
                                                      l2780 0160  
                                                      l2772 014C  
                                                      l2764 013D  
                                                      l2756 012F  
                                                      l2836 010B  
                                                      l2828 00FB  
                                                      l2844 012D  
                                                      l2916 07E1  
                                                      l2852 061A  
                                                      l2924 0FD5  
                                                      l2932 0FDB  
                                                      l2940 077D  
                                                      l2870 02ED  
                                                      l2862 02BA  
                                                      l2790 0183  
                                                      l2782 0164  
                                                      l2774 0152  
                                                      l2766 0141  
                                                      l2758 0132  
                                                      l2838 0118  
                                                      l2854 061F  
                                                      l2950 0354  
                                                      l2864 02CB  
                                                      l2784 0175  
                                                      l2776 0155  
                                                      l2792 0189  
                                                      l2768 0146  
                                                      l2872 068F  
                                                      l2856 062C  
                                                      l2848 060C  
                                                      l2944 07CD  
                                                      l2960 036C  
                                                      l2952 035A  
                                                      l2880 067F  
                                                      l2928 07A5  
                                                      l2936 0FE1  
                                                      l2866 02D0  
                                                      l2794 018E  
                                                      l2786 017B  
                                                      l2778 015C  
                                                      l2874 069E  
                                                      l2890 0631  
                                                      l2962 037D  
                                                      l2954 035D  
                                                      l2970 0391  
                                                      l2882 0684  
                                                      l2868 02E8  
                                                      l2980 06F0  
                                                      l2796 0193  
                                                      l2788 017C  
                                                      l2876 06A3  
                                                      l2892 0640  
                                                      l2964 0383  
                                                      l2956 0364  
                                                      l2948 0350  
                                                      l2884 0651  
                                                      l2974 06E0  
                                                      l2990 047D  
                                                      l2982 0466  
                                                      l2894 0645  
                                                      l2966 0384  
                                                      l2958 0368  
                                                      l2878 0670  
                                                      l2886 0660  
                                  _HeightSensor_GetPosition 0463  
                                                      l2896 0765  
                                                      l2976 06E5  
                                                      l2992 0483  
                                                      l2984 046C  
                                                      l2968 038B  
                                                      l2888 0665  
                                                      l2978 06EB  
                                                      l2994 048B  
                                                      l2986 0473  
                                                      l2898 075A  
                                                      l2996 0491  
                                                      l2988 0478  
                                                      l2998 0497  
                                                      _ADIE 0466  
                                                      _ADIF 0066  
                                                      STR_1 026E  
                                                      STR_2 0291  
                                                      STR_3 0281  
                                                      STR_4 02AC  
                                                      STR_5 029F  
                                                      u2000 0665  
                                                      u2001 0664  
                                                      u2010 0645  
                                                      u2011 0644  
                                                      u2100 06F0  
                                                      u2020 035A  
                                                      u2101 06EF  
                                                      u2021 0359  
                                                      u2110 0473  
                                                      u2111 0472  
                                                      u2120 047D  
                                                      u2040 036C  
                                                      u2200 043F  
                                                      u2121 047C  
                                                      u2041 036B  
                                                      u2201 043E  
                                                      u2130 0483  
                                                      u2210 044D  
                                                      u2131 0482  
                                                      u2035 035E  
                                                      u2211 044C  
                                                      u2300 020A  
                                                      u2140 0491  
                                                      u2060 037D  
                                                      u2220 0453  
                                                      u2301 0209  
                                                      u2141 0490  
                                                      u2061 037C  
                                                      u2221 0452  
                                                      u2310 0217  
                                                      u2150 0497  
                                                      u2230 06B3  
                                                      u2311 0216  
                                                      u2151 0496  
                                                      u2055 036D  
                                                      u2231 06B2  
                                                      u2320 021E  
                                                      u2080 0391  
                                                      u2160 06CC  
                                                      u2400 056A  
                                                      u2240 06BE  
                                                      u2321 021D  
                                                      u2081 0390  
                                                      u2065 0379  
                                                      u2161 06CB  
                                                      u2401 0569  
                                                      u2241 06BD  
                                                      u2330 0224  
                                                      u2090 06E5  
                                                      u2170 06D7  
                                                      u2250 03EB  
                                                      u2410 05B8  
                                                      u2331 0223  
                                                      u2091 06E4  
                                                      u2075 0385  
                                                      u2171 06D6  
                                                      u2251 03EA  
                                                      u2411 05B9  
                                                      u2340 0231  
                                                      u2180 042F  
                                                      u2260 03F5  
                                                      u2420 05C7  
                                                      u2412 05BE  
                                                      u2341 0230  
                                                      u2181 042E  
                                                      u2261 03F4  
                                                      u2421 05C6  
                                                      u2413 05BF  
                                                      u2350 0238  
                                                      u2190 0439  
                                                      u2270 03FB  
                                                      u2430 039C  
                                                      u2351 0237  
                                                      u2191 0438  
                                                      u2271 03FA  
                                                      u2431 039B  
                                                      u2360 023E  
                                                      u1720 0705  
                                                      u2280 0409  
                                                      u2440 03A1  
                                                      u2361 023D  
                                                      u1721 0704  
                                                      u2281 0408  
                                                      u2441 03A0  
                                                      u2370 0245  
                                                      u1810 0175  
                                                      u1730 0748  
                                                      u2290 040F  
                                                      u2450 03A6  
                                                      u2371 0244  
                                                      u1811 0174  
                                                      u1731 0747  
                                                      u2291 040E  
                                                      u2451 03A5  
                                                      u1900 00FB  
                                                      u1740 074E  
                                                      u2380 0597  
                                                      u2460 03B2  
                                                      u1805 0165  
                                                      u1901 00FA  
                                                      u1741 074D  
                                                      u2381 0596  
                                                      u2461 03B1  
                                                      u1830 0189  
                                                      u1750 0136  
                                                      u2390 053D  
                                                      u2470 03B7  
                                                      u1831 0188  
                                                      u1815 0171  
                                                      u1751 0135  
                                                      u2391 053C  
                                                      u2471 03B6  
                                                      u1840 018E  
                                                      u1760 0141  
                                                      u1920 012D  
                                                      u2480 03C3  
                                                      u1841 018D  
                                                      u1825 017D  
                                                      u1761 0140  
                                                      u1921 012C  
                                                      u2481 03C2  
                                                      u1770 0152  
                                                      u1850 0057  
                                                      u1930 0619  
                                                      u2490 03C8  
                                                      u1771 0151  
                                                      u1915 010E  
                                                      u1851 0056  
                                                      u1931 0618  
                                                      u2491 03C7  
                                                      u1940 02D0  
                                                      u1941 02CF  
                                                      u1790 0164  
                                                      u1870 0073  
                                                      u1791 0163  
                                                      u1871 0072  
                                                      u1960 02ED  
                                                      u1880 00B2  
                                                      u1961 02EC  
                                                      u1785 0156  
                                                      u1881 00B1  
                                                      u1865 0061  
                                                      u1954 02DB  
                                                      u1890 00C2  
                                                      u1955 02D9  
                                                      u1891 00C1  
                                                      _PEIE 005E  
                                                      u1980 06A3  
                                                      u1981 06A2  
                                                      _INTE 005C  
                                                      u1974 02F8  
                                                      u1990 0684  
                                                      _INTF 0059  
                                                      u1975 02F6  
                                                      u1991 0683  
                                                      _RCIE 0465  
                                                      _RCIF 0065  
                                                      _TXIE 0464  
                                                      _TXIF 0064  
                                     _IoHwAbs_ECUGet_Weight 062E  
                                         ?_HeightMotor_Move 0070  
                                                      _main 0FE7  
                                                      btemp 007E  
                             SeatManager_AutoSlide@Position 005B  
                                                      start 0012  
                                        ??_HeightMotor_Move 004D  
                                          ??_Adc_CallbackFn 0078  
                                                     ??_ISR 007A  
                                         ?_Os_TerminateTask 0070  
                                    ?_SeatManager_AutoSlide 0070  
                                    _IoHwAbs_ECUGet_Incline 066D  
    __end_of_Rte_Call_SeatManager_rpSlideSensor_GetPosition 077A  
   __size_of_Rte_Call_SeatManager_rpSlideSensor_GetPosition 000A  
          ??_Rte_Call_SeatManager_rpSlideSensor_GetPosition 0058  
           ?_Rte_Call_SeatManager_rpSlideSensor_GetPosition 0070  
            _Rte_Call_SeatManager_rpSlideSensor_GetPosition 0770  
                                           ??_Adc_ReadGroup 004F  
                                                     ?_main 0070  
                                            i1___awdiv@sign 0075  
                                                     _ACKEN 048C  
                                         _InclineMotor_Move 06C4  
                                           __end_of___awdiv 0198  
                                     ?_IoHwAbs_ECUGet_Slide 0070  
                                        ??_Os_TerminateTask 0046  
                                           ___awdiv@divisor 0046  
                                           __end_of___lwdiv 0396  
                                                     i1l305 04DF  
                                                     i1l922 0741  
                                                     i1l918 07FD  
                                                     i1l870 0343  
                                           ___awdiv@counter 004A  
                         __size_of_Adc_StartGroupConversion 0018  
                                                     _RCREG 001A  
                                                     _RCSTA 0018  
                                                     _SPBRG 0099  
                                 ?_Adc_StartGroupConversion 0070  
                                                     _SSPIF 0063  
                                        ?_InclineMotor_Move 0070  
                                                     _TXREG 0019  
                                                     _TXSTA 0098  
                              __size_of_IsMotorAdjustNeeded 005F  
                                      HeightMotor_Move@Step 004D  
                                                     _delay 059E  
                                 __size_of_Dio_WriteChannel 004F  
                                                     fpbase 0000  
                                       ??_InclineMotor_Move 004D  
                                                     pclath 000A  
       Rte_Call_InclineSensor_rpIOGetIncline_IOGet@position 0055  
                                ?_InclineSensor_GetPosition 0070  
                                                _CyclicTask 0396  
                                                     status 0003  
                                                     wtemp0 007E  
                                         ??_SlideMotor_Move 004D  
                                 ??_SlideSensor_GetPosition 0056  
                                        __size_ofi1___awdiv 0067  
                                   __end_of_SPI_Master_Wait 074F  
                                            Adc_ReadGroup@i 0051  
                                           __initialization 0015  
                                              __end_of_main 0FEF  
                                         ?_Uart_RX_Callback 0070  
                                 __end_of_InclineMotor_Move 06DD  
                                        ??_Uart_RX_Callback 0070  
         __end_of_Rte_Call_WeightSensor_rpIOGetWeight_IOGet 07D4  
        __size_of_Rte_Call_WeightSensor_rpIOGetWeight_IOGet 000A  
               ??_Rte_Call_WeightSensor_rpIOGetWeight_IOGet 004D  
                ?_Rte_Call_WeightSensor_rpIOGetWeight_IOGet 0070  
                 _Rte_Call_WeightSensor_rpIOGetWeight_IOGet 07CA  
                                                    ??_main 0065  
                                   ?_SeatManager_AutoHeight 0070  
                              SeatManager_AutoHeight@Weight 005A  
                                    ?_IoHwAbs_ECUGet_Height 0070  
                                                    ?_delay 0046  
                                         ?_Uart_TX_Callback 0070  
                                                    _ADCON0 001F  
                                                    _ADCON1 009F  
                                                    _ADRESH 001E  
                                                    _ADRESL 009E  
                                          ___awdiv@dividend 0048  
                                    ?_IoHwAbs_ECUGet_Weight 0070  
                           __size_of_WeightSensor_GetWeight 0022  
                                                    i1l1201 01FE  
                                        ??_Uart_TX_Callback 0070  
                                                    i1l3250 0198  
                                                    i1l3260 01A8  
                                                    i1l3252 0199  
                                                    i1l3270 01BC  
                                                    i1l3262 01AD  
                                                    i1l3254 019D  
                                                    i1l3280 01E2  
                                                    i1l3272 01C3  
                                                    i1l3264 01B1  
                                                    i1l3256 01A2  
                                                    i1l3360 04CE  
                                                    i1l3440 0739  
                                                    i1l3290 01FA  
                                                    i1l3282 01E3  
                                                    i1l3274 01C7  
                                                    i1l3266 01B3  
                                                    i1l3258 01A4  
                                                    i1l3362 04D6  
                                                    i1l3442 0740  
                                                    i1l3284 01EA  
                                                    i1l3276 01CB  
                                                    i1l3268 01B9  
                                                    i1l3364 04D8  
                                                    i1l3356 04A7  
                                                    i1l3278 01DC  
                                                    i1l3286 01F0  
                                                    i1l3358 04CD  
                                                    i1l3438 0733  
                                                    i1l3288 01F5  
                                                    i1l3810 031C  
                                                    i1l3802 0306  
                                                    i1l3820 0335  
                                                    i1l3812 0322  
                                                    i1l3804 030A  
                                                    i1l3822 0338  
                                                    i1l3814 0328  
                                                    i1l3806 0310  
                                                    i1l3824 033C  
                                                    i1l3816 032B  
                                                    i1l3808 0316  
                                                    i1l3826 0342  
                                                    i1l3818 032F  
                                                    _INTEDG 040E  
                                                    u250_20 019D  
                                                    u330_20 0316  
                                                    u250_21 019C  
                                                    u330_21 0315  
                                                    u251_20 01A8  
                                                    u331_20 0322  
                                                    u251_21 01A7  
                                                    u331_21 0321  
                                                    u252_20 01B9  
                                                    u332_20 032F  
                                                    u252_21 01B8  
                                                    u332_21 032E  
                                                    u333_20 033C  
                                                    u333_21 033B  
                                                    u253_25 01BD  
                                                    u254_20 01CB  
                                                    u254_21 01CA  
                                                    u255_25 01CC  
                                                    u256_20 01DC  
                                                    u280_20 0739  
                                                    u256_21 01DB  
                                                    u280_21 0738  
                                                    u256_25 01D8  
                                                    u329_20 030A  
                                                    u329_21 0309  
                                                    u257_25 01E4  
                                                    u258_20 01F0  
                                                    u258_21 01EF  
                                                    u259_20 01F5  
                                                    u259_21 01F4  
                                                    u269_20 04D6  
                                                    u269_21 04D5  
                                                __i1fptable 003D  
                                                    _TMR1IE 0460  
                                                    _TMR1IF 0060  
                                                    _SSPADD 0093  
                                                    _SSPCON 0014  
                                                    _SSPBUF 0013  
                         __end_of_InclineSensor_GetPosition 0463  
                                                _Spi_Config 00A0  
                                            _Spi_ConfigPins 00D1  
                                                _Spi_ReadIB 060C  
                                       _VFB_InclineBtnState 003E  
                                                 ??___awdiv 004A  
                      __size_of_IoHwAbs_ECUSetForward_Slide 000B  
                                                 ??___lwdiv 004A  
                                  Dio_WriteChannel@Port_Ptr 004A  
                                              _Dio_Channels 0042  
                                    ??_IoHwAbs_ECUGet_Slide 0053  
                                          ___awdiv@quotient 004C  
   __end_of_Rte_Call_SeatManager_rpHeightSensor_GetPosition 07DE  
  __size_of_Rte_Call_SeatManager_rpHeightSensor_GetPosition 000A  
         ??_Rte_Call_SeatManager_rpHeightSensor_GetPosition 0058  
          ?_Rte_Call_SeatManager_rpHeightSensor_GetPosition 0070  
           _Rte_Call_SeatManager_rpHeightSensor_GetPosition 07D4  
                               SeatManager_AutoSlide@Weight 005A  
                            __end_of_SeatManager_AutoHeight 059E  
                                         __end_ofi1___awdiv 01FF  
                                        __size_of_Rte_Start 0022  
                                                    fptable 003C  
                                                    fptotal 0000  
                                                    saved_w 007E  
                            SeatManager_AutoHeight@Position 005B  
                                       _VFB_InclinePosition 003A  
  __end_of_Rte_Call_SeatManager_rpInclineSensor_GetPosition 07A2  
 __size_of_Rte_Call_SeatManager_rpInclineSensor_GetPosition 000A  
        ??_Rte_Call_SeatManager_rpInclineSensor_GetPosition 0058  
         ?_Rte_Call_SeatManager_rpInclineSensor_GetPosition 0070  
          _Rte_Call_SeatManager_rpInclineSensor_GetPosition 0798  
                                               ?_CyclicTask 0070  
                                   __end_of__initialization 0038  
                                   IsMotorAdjustNeeded@Step 0047  
                                          ?_SPI_Master_Wait 0070  
            __end_of_Rte_Call_SeatManager_rpSlideMotor_Move 078E  
           __size_of_Rte_Call_SeatManager_rpSlideMotor_Move 000A  
                  ??_Rte_Call_SeatManager_rpSlideMotor_Move 004E  
                   ?_Rte_Call_SeatManager_rpSlideMotor_Move 0070  
                    _Rte_Call_SeatManager_rpSlideMotor_Move 0784  
                                            __pcstackCOMMON 0070  
                                              __pidataBANK0 0FF7  
                                              __pidataBANK1 04E0  
                                             __end_of_delay 05C8  
                                    _WeightSensor_GetWeight 05EA  
                                __size_of_InclineMotor_Move 0019  
                                  _SeatCtrlMode_CurrentMode 0037  
                                ??_HeightSensor_GetPosition 0056  
          __end_of_Rte_Call_SeatManager_rpInclineMotor_Move 07B6  
         __size_of_Rte_Call_SeatManager_rpInclineMotor_Move 000A  
                ??_Rte_Call_SeatManager_rpInclineMotor_Move 004E  
                 ?_Rte_Call_SeatManager_rpInclineMotor_Move 0070  
                  _Rte_Call_SeatManager_rpInclineMotor_Move 07AC  
                                                   ??_delay 0048  
                                          _Dio_WriteChannel 02B7  
                                                __pbssBANK0 0020  
     __end_of_Rte_Call_SeatManager_rpWeightSensor_GetWeight 07CA  
    __size_of_Rte_Call_SeatManager_rpWeightSensor_GetWeight 000A  
           ??_Rte_Call_SeatManager_rpWeightSensor_GetWeight 0051  
            ?_Rte_Call_SeatManager_rpWeightSensor_GetWeight 0070  
             _Rte_Call_SeatManager_rpWeightSensor_GetWeight 07C0  
                                  ?_SeatManager_AutoIncline 0070  
                                         __end_of_Rte_Start 05EA  
                            IsMotorAdjustNeeded@adjustMotor 004B  
                          __end_of_Adc_StartGroupConversion 070E  
                                                __pmaintext 0FE7  
                                       _IsMotorAdjustNeeded 01FF  
                                               ?_Spi_ReadIB 0046  
           __end_of_Rte_Call_SlideSensor_rpIOGetSlide_IOGet 0784  
          __size_of_Rte_Call_SlideSensor_rpIOGetSlide_IOGet 000A  
                 ??_Rte_Call_SlideSensor_rpIOGetSlide_IOGet 0055  
                  ?_Rte_Call_SlideSensor_rpIOGetSlide_IOGet 0070  
                   _Rte_Call_SlideSensor_rpIOGetSlide_IOGet 077A  
                      __end_of_IoHwAbs_ECUSetReverse_Height 07FC  
                     __size_of_IoHwAbs_ECUSetReverse_Height 000A  
                              _IoHwAbs_ECUSetReverse_Height 07F2  
                                   ??_SeatManager_AutoSlide 0059  
                                   ?_IoHwAbs_ECUGet_Incline 0070  
                                                __pintentry 0004  
                                                   _ACKSTAT 048E  
                                 __size_of_HeightMotor_Move 0019  
                                       __size_of_CyclicTask 0045  
           __end_of_Rte_Call_SeatManager_rpHeightMotor_Move 07F2  
          __size_of_Rte_Call_SeatManager_rpHeightMotor_Move 000A  
                 ??_Rte_Call_SeatManager_rpHeightMotor_Move 004E  
                  ?_Rte_Call_SeatManager_rpHeightMotor_Move 0070  
                   _Rte_Call_SeatManager_rpHeightMotor_Move 07E8  
                                        i1___awdiv@dividend 0072  
                                           _SlideMotor_Move 06AB  
                                         _VFB_SlideBtnState 003D  
                                      ?_IsMotorAdjustNeeded 0046  
                                   __size_of_Os_SetRelAlarm 0012  
                                                   _SSPCON2 0091  
                                                   _SSPSTAT 0094  
                                 __size_of_Os_TerminateTask 0001  
                       __end_of_IoHwAbs_ECUSetReverse_Slide 0798  
                               _IoHwAbs_ECUSetReverse_Slide 078E  
                                                __stringtab 025E  
                                                   _RX_Data 0034  
                                                   i1fpbase 0042  
                               ??_InclineSensor_GetPosition 0056  
           Rte_Call_SlideSensor_rpIOGetSlide_IOGet@position 0055  
                                       Os_SetRelAlarm@cycle 0061  
                                               _Uart_Config 00C2  
                                        i1___awdiv@quotient 0076  
                            __end_of_IoHwAbs_ECUGet_Incline 068C  
                                         _VFB_SlidePosition 0039  
                                                   ___awdiv 012F  
                                 SeatManager_AutoSlide@Step 005C  
                      __end_of_IoHwAbs_ECUSetForward_Height 0770  
                     __size_of_IoHwAbs_ECUSetForward_Height 000B  
                              _IoHwAbs_ECUSetForward_Height 0765  
                                                   ___lwdiv 0350  
                             ?_IoHwAbs_ECUSetReverse_Height 0070  
    Rte_Call_SeatManager_rpSlideSensor_GetPosition@Position 0058  
                           SlideSensor_GetPosition@Position 0056  
                                                   __ptext1 05C8  
                                                   __ptext2 0721  
                                                   __ptext3 059E  
                                                   __ptext4 0396  
                                                   __ptext5 0517  
                                                   __ptext6 0770  
                                                   __ptext7 03DB  
                                                   __ptext8 077A  
                                                   __ptext9 064E  
                                       __size_of__i1fptable 000F  
                                   ??_IoHwAbs_ECUGet_Height 0053  
                                              __size_of_ISR 004A  
                                             _callbackTable 0026  
                                     __end_of_Adc_ReadGroup 012F  
                                   Spi_ReadIB@DataBufferPtr 0046  
                                     ??_IsMotorAdjustNeeded 0048  
                                   ??_IoHwAbs_ECUGet_Weight 0049  
                                 __size_of_Uart_RX_Callback 000F  
                                       __size_of_Spi_ReadIB 0022  
                                           _Uart_PinsConfig 00CB  
                                                   clrloop0 0FF0  
                                      end_of_initialization 0038  
                           __end_of_SeatManager_AutoIncline 0571  
                              ?_IoHwAbs_ECUSetForward_Slide 0070  
                Rte_Call_SeatManager_rpSlideMotor_Move@Step 004E  
                                 __size_of_Uart_TX_Callback 0001  
                                  _Adc_StartGroupConversion 06F6  
                                   __end_of_SlideMotor_Move 06C4  
                             ?_IoHwAbs_ECUSetForward_Height 0070  
                                 _InclineSensor_GetPosition 041F  
                           SlideSensor_GetPosition@position 0057  
                             IoHwAbs_ECUGet_Height@position 0054  
                                   __size_of_Adc_CallbackFn 0039  
                                         fp__Adc_CallbackFn 0046  
   __end_of_Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward 0FC9  
  __size_of_Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward 0006  
         ??_Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward 004D  
          ?_Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward 0070  
           _Rte_Call_HeightMotor_rpIOSetHeight_IOSetForward 0FC3  
                                      _AppTsk_CurrentEvents 002B  
                                                 i1___awdiv 0198  
   __end_of_Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse 0FCF  
  __size_of_Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse 0006  
         ??_Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse 004D  
          ?_Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse 0070  
           _Rte_Call_HeightMotor_rpIOSetHeight_IOSetReverse 0FC9  
                                Adc_ReadGroup@DataBufferPtr 004E  
                                  ?_SlideSensor_GetPosition 0070  
                        SeatManager_AutoIncline@adjustMotor 0059  
                                              ??_CyclicTask 005D  
                            IoHwAbs_ECUGet_Incline@position 0054  
                             ??_IoHwAbs_ECUSetForward_Slide 004D  
                                   ?_WeightSensor_GetWeight 0070  
                           ??_IoHwAbs_ECUSetReverse_Incline 004D  
                                  __end_of_Dio_WriteChannel 0306  
                                          _HeightMotor_Move 06DD  
                                     Os_SetRelAlarm@alarmID 0070  
                             __size_of_IoHwAbs_ECUGet_Slide 001F  
                                        __end_of_CyclicTask 03DB  
                                       start_initialization 0015  
                                            _Os_SetRelAlarm 0721  
                                               __end_of_ISR 0350  
                                                ?i1___awdiv 0070  
                                       _VFB_SlideMotorState 006B  
                                          _Os_TerminateTask 07FC  
                         SeatManager_AutoHeight@adjustMotor 0059  
                              IoHwAbs_ECUGet_Incline@status 0053  
                            __end_of_WeightSensor_GetWeight 060C  
                                 IsMotorAdjustNeeded@Weight 0046  
                                SeatManager_AutoHeight@Step 005C  
                                              ??_Spi_ReadIB 0047  
                                                 _Rte_Start 05C8  
                                                init_fetch0 070E  
                                               __pdataBANK0 0065  
                                               __pdataBANK1 00A0  
                                  __size_of_SPI_Master_Wait 000D  
                            __size_of_SeatManager_AutoSlide 002D  
                             __end_of_SeatManager_AutoSlide 0544  
                                          ?_SlideMotor_Move 0070  
                          __size_of_SeatManager_AutoIncline 002D  
                                    __end_of_Os_SetRelAlarm 0733  
                                        __end_of__i1fptable 004C  
                           __end_of_SlideSensor_GetPosition 041F  
                                                 ___latbits 0002  
                                             __pcstackBANK0 0046  
                                          _Uart_RX_Callback 0733  
                                IoHwAbs_ECUGet_Slide@status 0053  
  Rte_Call_SeatManager_rpInclineSensor_GetPosition@Position 0058  
                         InclineSensor_GetPosition@Position 0056  
                                        __end_of_Spi_ReadIB 062E  
                                     Dio_WriteChannel@Level 0046  
                         __size_of_HeightSensor_GetPosition 0044  
                                 ?_HeightSensor_GetPosition 0070  
                                          ___lwdiv@dividend 0048  
                                          _Uart_TX_Callback 07FD  
                                                 __pfunctab 003C  
                                  ??_SeatManager_AutoHeight 0059  
                                                ?_Rte_Start 0070  
                      __size_of_IoHwAbs_ECUSetReverse_Slide 000A  
                           SeatManager_AutoIncline@Position 005B  
                                                  ?___awdiv 0046  
                           ??_IoHwAbs_ECUSetForward_Incline 004D  
                                                  ?___lwdiv 0046  
                     __end_of_IoHwAbs_ECUSetReverse_Incline 07C0  
                    __size_of_IoHwAbs_ECUSetReverse_Incline 000A  
                             _IoHwAbs_ECUSetReverse_Incline 07B6  
                                         i1___awdiv@divisor 0070  
                                         i1___awdiv@counter 0074  
                                                 __pstrings 025E  
                                            _Adc_CallbackFn 04A7  
                                           ?_Os_SetRelAlarm 005D  
       Rte_Call_SeatManager_rpWeightSensor_GetWeight@Weight 0051  
                              WeightSensor_GetWeight@Weight 004E  
                            __size_of_IoHwAbs_ECUGet_Height 001F  
                             __end_of_IoHwAbs_ECUGet_Height 06AB  
                                               ??i1___awdiv 0074  
     __end_of_Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward 0FE1  
    __size_of_Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward 0006  
           ??_Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward 004D  
            ?_Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward 0070  
             _Rte_Call_SlideMotor_rpIOSetSlide_IOSetForward 0FDB  
                            __size_of_IoHwAbs_ECUGet_Weight 0020  
                        __size_of_InclineSensor_GetPosition 0044  
                                          ___lwdiv@quotient 004A  
                             __end_of_IoHwAbs_ECUGet_Weight 064E  
                                            __size_of_delay 002A  
                         InclineSensor_GetPosition@position 0057  
     __end_of_Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse 0FE7  
    __size_of_Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse 0006  
           ??_Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse 004D  
            ?_Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse 0070  
             _Rte_Call_SlideMotor_rpIOSetSlide_IOSetReverse 0FE1  
                              WeightSensor_GetWeight@weight 004F  
                              IoHwAbs_ECUGet_Slide@position 0054  
                                         interrupt_function 0004  
                                        delay@milli_seconds 0046  
                                                 clear_ram0 0FEF  
                                ??_Adc_StartGroupConversion 0046  
                                    __end_of_Adc_CallbackFn 04E0  
                               __end_of_IsMotorAdjustNeeded 025E  
                                               __stringbase 026D  
                          SeatManager_AutoSlide@adjustMotor 0059  
               Rte_Call_SeatManager_rpHeightMotor_Move@Step 004E  
                                         ??_SPI_Master_Wait 0046  
                                                  i1fptable 003D  
                                                  i1fptotal 0003  
                                  __end_of_HeightMotor_Move 06F6  
                                      Os_SetRelAlarm@offset 005D  
                                    __size_of_Adc_ReadGroup 00E3  
                                 _Rte_SenderReceiverBuffers 002F  
                                   _Rte_SenderReceiverFlags 0020  
                          __size_of_SlideSensor_GetPosition 0044  
                                               ??_Rte_Start 0065  
              Rte_Call_SeatManager_rpInclineMotor_Move@Step 004E  
         Rte_Call_HeightSensor_rpIOGetHeight_IOGet@position 0055  
                           __size_of_SeatManager_AutoHeight 002D  
                                         ?_Dio_WriteChannel 0046  
                                  __end_of_Os_TerminateTask 07FD  
                                          __size_of___awdiv 0069  
                                   _SeatManager_AutoIncline 0544  
                                           ?_Adc_CallbackFn 0070  
                                          __size_of___lwdiv 0046  
                                    _Uart_ThisConfiguration 0035  
                                        ??_Dio_WriteChannel 0047  
                                        __end_of__stringtab 026E  
                     __end_of_IoHwAbs_ECUSetForward_Incline 0765  
                    __size_of_IoHwAbs_ECUSetForward_Incline 000B  
                             _IoHwAbs_ECUSetForward_Incline 075A  
                            ?_IoHwAbs_ECUSetReverse_Incline 0070  
                                     CyclicTask@TaskCounter 0036  
                                           ___lwdiv@divisor 0046  
   Rte_Call_SeatManager_rpHeightSensor_GetPosition@Position 0058  
                          HeightSensor_GetPosition@Position 0056  
                                           ___lwdiv@counter 004C  
                                                  __ptext10 0784  
                                                  __ptext11 06AB  
                                                  __ptext20 066D  
                                                  __ptext12 0FE1  
                                                  __ptext21 07AC  
                                                  __ptext13 078E  
                                                  __ptext30 0350  
                                                  __ptext22 06C4  
                                                  __ptext14 0FDB  
                                                  __ptext31 07CA  
                                                  __ptext23 0FD5  
                                                  __ptext15 074F  
                                                  __ptext40 012F  
                                                  __ptext32 062E  
                                                  __ptext24 07B6  
                                                  __ptext16 0544  
                                                  __ptext41 06F6  
                                                  __ptext33 060C  
                                                  __ptext25 0FCF  
                                                  __ptext17 0798  
                                                  __ptext50 07FC  
                                                  __ptext42 07E8  
                                                  __ptext34 0742  
                                                  __ptext26 075A  
                                                  __ptext18 041F  
                                                  __ptext51 0306  
                                                  __ptext43 06DD  
                                                  __ptext35 07D4  
                                                  __ptext27 0571  
                                                  __ptext19 07A2  
                                                  __ptext52 0733  
                                                  __ptext44 0FC9  
                                                  __ptext36 0463  
                                                  __ptext28 07C0  
                                                  __ptext53 04A7  
                                                  __ptext45 07F2  
                                                  __ptext37 07DE  
                                                  __ptext29 05EA  
                                                  __ptext54 07FD  
                                                  __ptext46 0FC3  
                                                  __ptext38 068C  
                                                  __ptext55 0198  
                                                  __ptext47 0765  
                                                  __ptext39 004C  
                                                  __ptext48 02B7  
                                                  __ptext49 01FF  
                                          _VFB_AutoBtnState 003C  
                           Adc_StartGroupConversion@groupId 0070  
                                       fp__Uart_RX_Callback 0049  
                                  ??_IoHwAbs_ECUGet_Incline 0053  
                              __end_of_IoHwAbs_ECUGet_Slide 066D  
                                             __size_of_main 0008  
 __end_of_Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward 0FD5  
__size_of_Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward 0006  
       ??_Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward 004D  
        ?_Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward 0070  
         _Rte_Call_InclineMotor_rpIOSetIncline_IOSetForward 0FCF  
                                            _Adc_PortConfig 00B9  
                                  __end_of_Uart_RX_Callback 0742  
 __end_of_Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse 0FDB  
__size_of_Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse 0006  
       ??_Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse 004D  
        ?_Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse 0070  
         _Rte_Call_InclineMotor_rpIOSetIncline_IOSetReverse 0FD5  
                                       fp__Uart_TX_Callback 0043  
                                          _VFB_DriverWeight 0032  
                          __end_of_HeightSensor_GetPosition 04A7  
                                             _Adc_ReadGroup 004C  
                                  __end_of_Uart_TX_Callback 07FE  
                                                  init_ram0 0712  
                          HeightSensor_GetPosition@position 0057  
                                     InclineMotor_Move@Step 004D  
                                    _SeatManager_AutoHeight 0571  
                                                  intlevel1 003C  
                       __end_of_IoHwAbs_ECUSetForward_Slide 075A  
                               _IoHwAbs_ECUSetForward_Slide 074F  
                              ?_IoHwAbs_ECUSetReverse_Slide 0070  
                                         Spi_ReadIB@Channel 0070  
                                     _VFB_InclineMotorState 006C  
                                 Dio_WriteChannel@ChannelId 004C  
                                                 stringcode 0268  
                            _IoHwAb_PositionSensorsReadings 0043  
                                       SlideMotor_Move@Step 004D  
                                 ??_SeatManager_AutoIncline 0059  
         __end_of_Rte_Call_HeightSensor_rpIOGetHeight_IOGet 07E8  
        __size_of_Rte_Call_HeightSensor_rpIOGetHeight_IOGet 000A  
               ??_Rte_Call_HeightSensor_rpIOGetHeight_IOGet 0055  
                ?_Rte_Call_HeightSensor_rpIOGetHeight_IOGet 0070  
                 _Rte_Call_HeightSensor_rpIOGetHeight_IOGet 07DE  
                                          ??_Os_SetRelAlarm 0065  
                                     _Adc_ThisConfiguration 0041  
                               SeatManager_AutoIncline@Step 005C  
                                     _SeatManager_AutoSlide 0517  
                                     _Spi_ThisConfiguration 0038  
                                            ?_Adc_ReadGroup 004E  
                                        _VFB_HeightBtnState 003F  
                                                  stringdir 0268  
                                                  stringtab 025E  
                                      _VFB_HeightMotorState 006D  
                                               _Adc_Handler 0000  
                            ??_IoHwAbs_ECUSetReverse_Height 004D  
                            ?_IoHwAbs_ECUSetForward_Incline 0070  
                                  __size_of_SlideMotor_Move 0019  
                               IsMotorAdjustNeeded@Position 004A  
                              IoHwAbs_ECUGet_Weight@spiData 004B  
                             SeatManager_AutoIncline@Weight 005A  
                               IoHwAbs_ECUGet_Height@status 0053  
                                        Adc_ReadGroup@i_495 0052  
                                        Adc_ReadGroup@Group 0070  
                           __size_of_IoHwAbs_ECUGet_Incline 001F  
                             ??_IoHwAbs_ECUSetReverse_Slide 004D  
                               IoHwAbs_ECUGet_Weight@weight 004A  
                               IoHwAbs_ECUGet_Weight@status 0049  
                                                _Adc_Result 0040  
                                        _VFB_HeightPosition 003B  
                                   _SlideSensor_GetPosition 03DB  
       __end_of_Rte_Call_InclineSensor_rpIOGetIncline_IOGet 07AC  
      __size_of_Rte_Call_InclineSensor_rpIOGetIncline_IOGet 000A  
             ??_Rte_Call_InclineSensor_rpIOGetIncline_IOGet 0055  
              ?_Rte_Call_InclineSensor_rpIOGetIncline_IOGet 0070  
               _Rte_Call_InclineSensor_rpIOGetIncline_IOGet 07A2  
